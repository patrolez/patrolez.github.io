fragment_downloaded_cb({"url":"pbutils/gstpbutilsinstallplugins.html#gst_install_plugins_context_set_xid","fragment":"\n\tgst_install_plugins_context_set_xid\n\n\n\tGstPbutils.InstallPluginsContext.prototype.set_xid\n\n\n\tGstPbutils.InstallPluginsContext.set_xid\n\nThis function is for X11-based applications (such as most Gtk/Qt\napplications on linux/unix) only. You can use it to tell the external\ninstaller the XID of your main application window. That way the installer\ncan make its own window transient to your application window during the\ninstallation.\nIf set, the XID will be passed to the installer via a --transient-for=XID\ncommand line option.\nGtk+/Gnome application should be able to obtain the XID of the top-level\nwindow like this:\nParameters:\na GstInstallPluginsContext\nthe XWindow ID (XID) of the top-level application\nThis function is for X11-based applications (such as most Gtk/Qt\napplications on linux/unix) only. You can use it to tell the external\ninstaller the XID of your main application window. That way the installer\ncan make its own window transient to your application window during the\ninstallation.\nIf set, the XID will be passed to the installer via a --transient-for=XID\ncommand line option.\nGtk+/Gnome application should be able to obtain the XID of the top-level\nwindow like this:\nParameters:\na GstPbutils.InstallPluginsContext\nthe XWindow ID (XID) of the top-level application\nThis function is for X11-based applications (such as most Gtk/Qt\napplications on linux/unix) only. You can use it to tell the external\ninstaller the XID of your main application window. That way the installer\ncan make its own window transient to your application window during the\ninstallation.\nIf set, the XID will be passed to the installer via a --transient-for=XID\ncommand line option.\nGtk+/Gnome application should be able to obtain the XID of the top-level\nwindow like this:\nParameters:\na GstPbutils.InstallPluginsContext\nthe XWindow ID (XID) of the top-level application\n"});