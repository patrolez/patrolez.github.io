fragment_downloaded_cb({"url":"pbutils/gstpbutilscodecutils.html#gst_codec_utils_opus_parse_caps","fragment":"\n\tgst_codec_utils_opus_parse_caps\n\n\n\tGstPbutils.prototype.codec_utils_opus_parse_caps\n\n\n\tGstPbutils.codec_utils_opus_parse_caps\n\nParses Opus caps and fills the different fields with defaults if possible.\nParameters:\nthe GstCaps to parse the data from\nthe sample rate\nthe number of channels\nthe channel mapping family\nthe number of independent streams\nthe number of stereo streams\nthe mapping between the streams\nTRUE if parsing was successful, FALSE otherwise.\n\n\tSince\t\t\t: 1.8\n\t\t\nParses Opus caps and fills the different fields with defaults if possible.\nParameters:\nthe Gst.Caps to parse the data from\nReturns a tuple made of:\ntrue if parsing was successful, false otherwise.\ntrue if parsing was successful, false otherwise.\ntrue if parsing was successful, false otherwise.\ntrue if parsing was successful, false otherwise.\ntrue if parsing was successful, false otherwise.\ntrue if parsing was successful, false otherwise.\ntrue if parsing was successful, false otherwise.\n\n\tSince\t\t\t: 1.8\n\t\t\nParses Opus caps and fills the different fields with defaults if possible.\nParameters:\nthe Gst.Caps to parse the data from\nReturns a tuple made of:\nTrue if parsing was successful, False otherwise.\nTrue if parsing was successful, False otherwise.\nTrue if parsing was successful, False otherwise.\nTrue if parsing was successful, False otherwise.\nTrue if parsing was successful, False otherwise.\nTrue if parsing was successful, False otherwise.\nTrue if parsing was successful, False otherwise.\n\n\tSince\t\t\t: 1.8\n\t\t\n"});