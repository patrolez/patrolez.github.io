fragment_downloaded_cb({"url":"pbutils/gstpbutilscodecutils.html#gst_codec_utils_caps_get_mime_codec","fragment":"\n\tgst_codec_utils_caps_get_mime_codec\n\n\n\tGstPbutils.prototype.codec_utils_caps_get_mime_codec\n\n\n\tGstPbutils.codec_utils_caps_get_mime_codec\n\nConverts caps to a RFC 6381 compatible codec string if possible.\nUseful for providing the 'codecs' field inside the 'Content-Type' HTTP\nheader for containerized formats, such as mp4 or matroska.\nRegistered codecs can be found at http://mp4ra.org/#/codecs\nParameters:\nA GstCaps to convert to mime codec\na RFC 6381 compatible codec string or NULL\n\n\tSince\t\t\t: 1.20\n\t\t\nConverts caps to a RFC 6381 compatible codec string if possible.\nUseful for providing the 'codecs' field inside the 'Content-Type' HTTP\nheader for containerized formats, such as mp4 or matroska.\nRegistered codecs can be found at http://mp4ra.org/#/codecs\nParameters:\nA Gst.Caps to convert to mime codec\na RFC 6381 compatible codec string or null\n\n\tSince\t\t\t: 1.20\n\t\t\nConverts caps to a RFC 6381 compatible codec string if possible.\nUseful for providing the 'codecs' field inside the 'Content-Type' HTTP\nheader for containerized formats, such as mp4 or matroska.\nRegistered codecs can be found at http://mp4ra.org/#/codecs\nParameters:\nA Gst.Caps to convert to mime codec\na RFC 6381 compatible codec string or None\n\n\tSince\t\t\t: 1.20\n\t\t\n"});