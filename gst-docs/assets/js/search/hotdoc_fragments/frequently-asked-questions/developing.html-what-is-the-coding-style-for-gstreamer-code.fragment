fragment_downloaded_cb({"url":"frequently-asked-questions/developing.html#what-is-the-coding-style-for-gstreamer-code","fragment":"What is the coding style for GStreamer code?\nBasically, the core and almost all plugin modules use K&R with 2-space\nindenting. Just follow what's already there and you'll be fine. We only require\ncode files to be indented, header may be indented manually for better\nreadability. Please use spaces for indenting, not tabs, even in header files.\nIndividual plugins in gst-plugins-* or plugins that you want considered\nfor addition to these modules should use the same style. It's easier if\neverything is consistent. Consistency is, of course, the goal.\nOne way to make sure you are following our coding style is to run your code\n(remember, only the *.c files, not the headers) through GNU Indent using the\nfollowing options:\nThere is also a gst-indent script in the GStreamer core source tree in the\ntools directory which wraps GNU Indent and uses the right options.\nThe easiest way to get the indenting right is probably to develop against a git\ncheckout. The local git commit hook will ensure correct indentation.\nComments should be in /* ANSI C comment style */ and code should generally\nbe compatible with ANSI C89, so please declare all variables at the beginning\nof the block, etc.\nMerge requests should ideally be made against git master or a recent release.\nPlease don't send patches to the mailing list. They will likely get lost there.\nSee How to submit patches for more details.\n"});