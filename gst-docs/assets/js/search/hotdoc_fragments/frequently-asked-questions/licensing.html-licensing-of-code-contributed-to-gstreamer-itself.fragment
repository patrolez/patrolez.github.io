fragment_downloaded_cb({"url":"frequently-asked-questions/licensing.html#licensing-of-code-contributed-to-gstreamer-itself","fragment":"Licensing of code contributed to GStreamer itself\nGStreamer is a plugin-based framework licensed under the LGPL. The\nreason for this choice in licensing is to ensure that everyone can use\nGStreamer to build applications using licenses of their choice.\nTo keep this policy viable, the GStreamer community has made a few\nlicensing rules for code to be included in GStreamer's core or\nGStreamer's official modules, like our plugin packages. We require\nthat all code going into our core packages is LGPL. For the plugin\ncode, we require the use of the LGPL for all plugins written from\nscratch or linking to external libraries. The only exception to this\nis when plugins contain older code under the BSD and MIT license. They\ncan use those licenses instead and will still be considered for\ninclusion, we do prefer that all new code written though is at least\ndual licensed LGPL. We do not accept GPL code to be added to our plugins\nmodules, but we do accept LGPL-licensed plugins using an external GPL\nlibrary for some of our plugin modules. The reason we demand plugins be\nlicensed under the LGPL, even when they are using a GPL library, is that\nother developers might want to use the plugin code as a template for\nplugins linking to non-GPL libraries. We also accept dual licensed\nplugins for inclusion as long as one of the licenses offered for dual\nlicensing is the LGPL.\nWe also do not allow plugins under any license into our core,base or\ngood packages if they have known patent issues associated with them.\nThis means that even a contributed LGPL/MIT licensed implementation of\nsomething which there is a licensing body claiming fees for, those\nplugins would need to go into our gst-plugins-ugly module.\nAll new plugins, regardless of licensing or patents tend to have to go\nthrough a period in our incubation module, gst-plugins-bad before moving\nto ugly, base or good.\n"});