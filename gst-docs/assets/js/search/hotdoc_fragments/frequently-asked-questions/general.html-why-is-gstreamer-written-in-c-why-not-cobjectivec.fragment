fragment_downloaded_cb({"url":"frequently-asked-questions/general.html#why-is-gstreamer-written-in-c-why-not-cobjectivec","fragment":"Why is GStreamer written in C? Why not C++/Objective-C/...?\nWe like C. Aside from \"personal preference\", there are a number\nof technical reasons why C is nice in this project:\nC is extremely portable.\nC is fast.\nIt is easy to make language bindings for libraries written in C.\nThe GObject object system provided by GLib implements objects in C,\nin a portable and powerful way. This library provides for introspection\nand runtime dynamic typing. It is a full OO system, but without the\nsyntactic sugar. If you want sugar, take a look at\nVala.\nUse of C integrates nicely with Gtk+ and GNOME. Some people like\nthis a lot, but neither Gtk+ nor GNOME are required by GStreamer.\nThere are also historical reasons: When GStreamer was started, C++ and\nfree and open source C++ compilers were not as stable and mature as they\nare today, and there was the desire to provide a certain degree of\nAPI and ABI stability.\nIn closing, we like C. If you don't, that's fine; if you still want\nto help out on GStreamer, we always need more language binding people.\nIf not, don't bother us; we're working :-)\n\n\nC is extremely portable.\n\n\nC is fast.\n\n\nIt is easy to make language bindings for libraries written in C.\n\n\nThe GObject object system provided by GLib implements objects in C,\nin a portable and powerful way. This library provides for introspection\nand runtime dynamic typing. It is a full OO system, but without the\nsyntactic sugar. If you want sugar, take a look at\nVala.\n\n\nUse of C integrates nicely with Gtk+ and GNOME. Some people like\nthis a lot, but neither Gtk+ nor GNOME are required by GStreamer.\n\n\n"});