fragment_downloaded_cb({"url":"application-development/basics/elements.html#filters-convertors-demuxers-muxers-and-codecs","fragment":"Filters, convertors, demuxers, muxers and codecs\nFilters and filter-like elements have both input and outputs pads. They\noperate on data that they receive on their input (sink) pads, and will\nprovide data on their output (source) pads. Examples of such elements\nare a volume element (filter), a video scaler (convertor), an Ogg\ndemuxer or a Vorbis decoder.\nFilter-like elements can have any number of source or sink pads. A video\ndemuxer, for example, would have one sink pad and several (1-N) source\npads, one for each elementary stream contained in the container format.\nDecoders, on the other hand, will only have one source and sink pads.\n\nVisualisation of a filter element\nshows how we will visualise a filter-like element. This specific element\nhas one source pad and one sink pad. Sink pads, receiving input data,\nare depicted at the left of the element; source pads are still on the\nright.\n\nVisualisation of a filter element with more than one output\npad\nshows another filter-like element, this one having more than one output\n(source) pad. An example of one such element could, for example, be an\nOgg demuxer for an Ogg stream containing both audio and video. One\nsource pad will contain the elementary video stream, another will\ncontain the elementary audio stream. Demuxers will generally fire\nsignals when a new pad is created. The application programmer can then\nhandle the new elementary stream in the signal handler.\n"});