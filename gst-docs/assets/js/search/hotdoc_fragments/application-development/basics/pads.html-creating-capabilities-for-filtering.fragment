fragment_downloaded_cb({"url":"application-development/basics/pads.html#creating-capabilities-for-filtering","fragment":"Creating capabilities for filtering\nWhile capabilities are mainly used inside a plugin to describe the media\ntype of the pads, the application programmer often also has to have\nbasic understanding of capabilities in order to interface with the\nplugins, especially when using filtered caps. When you're using filtered\ncaps or fixation, you're limiting the allowed types of media that can\nstream between two pads to a subset of their supported media types. You\ndo this using a capsfilter element in your pipeline. In order to do\nthis, you also need to create your own GstCaps. The easiest way to do\nthis is by using the convenience function gst_caps_new_simple ():\nThis will force the data flow between those two elements to a certain\nvideo format, width, height and framerate (or the linking will fail if\nthat cannot be achieved in the context of the elements involved). Keep\nin mind that when you use gst_element_link_filtered () it will automatically create a\ncapsfilter element for you and insert it into your bin or pipeline\nbetween the two elements you want to connect (this is important if you\never want to disconnect those elements because then you will have to\ndisconnect both elements from the capsfilter instead).\nIn some cases, you will want to create a more elaborate set of\ncapabilities to filter a link between two pads. Then, this function is\ntoo simplistic and you'll want to use the method gst_caps_new_full ():\nSee the API references for the full API of\nGstStructure\nand\nGstCaps.\n"});