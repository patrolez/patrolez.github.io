fragment_downloaded_cb({"url":"application-development/basics/pads.html#properties-and-values","fragment":"Properties and values\nProperties are used to describe extra information for capabilities. A\nproperty consists of a key (a string) and a value. There are different\npossible value types that can be used:\nBasic types, this can be pretty much any GType registered with\nGlib. Those properties indicate a specific, non-dynamic value for\nthis property. Examples include:\nAn integer value (G_TYPE_INT): the property has this exact\nvalue.\nA boolean value (G_TYPE_BOOLEAN): the property is either TRUE\nor FALSE.\nA float value (G_TYPE_FLOAT): the property has this exact\nfloating point value.\nA string value (G_TYPE_STRING): the property contains a UTF-8\nstring.\nA fraction value (GST_TYPE_FRACTION): contains a fraction\nexpressed by an integer numerator and denominator.\nRange types are GTypes registered by GStreamer to indicate a range\nof possible values. They are used for indicating allowed audio\nsamplerate values or supported video sizes. The two types defined in\nGStreamer are:\nAn integer range value (GST_TYPE_INT_RANGE): the property\ndenotes a range of possible integers, with a lower and an upper\nboundary. The “vorbisdec” element, for example, has a rate\nproperty that can be between 8000 and 50000.\nA float range value (GST_TYPE_FLOAT_RANGE): the property\ndenotes a range of possible floating point values, with a lower\nand an upper boundary.\nA fraction range value (GST_TYPE_FRACTION_RANGE): the property\ndenotes a range of possible fraction values, with a lower and an\nupper boundary.\nA list value (GST_TYPE_LIST): the property can take any value from\na list of basic values given in this list.\nExample: caps that express that either a sample rate of 44100 Hz and\na sample rate of 48000 Hz is supported would use a list of integer\nvalues, with one value being 44100 and one value being 48000.\nAn array value (GST_TYPE_ARRAY): the property is an array of\nvalues. Each value in the array is a full value on its own, too. All\nvalues in the array should be of the same elementary type. This\nmeans that an array can contain any combination of integers, lists\nof integers, integer ranges together, and the same for floats or\nstrings, but it can not contain both floats and ints at the same\ntime.\nExample: for audio where there are more than two channels involved\nthe channel layout needs to be specified (for one and two channel\naudio the channel layout is implicit unless stated otherwise in the\ncaps). So the channel layout would be an array of integer enum\nvalues where each enum value represents a loudspeaker position.\nUnlike a GST_TYPE_LIST, the values in an array will be interpreted\nas a whole.\n\n\nBasic types, this can be pretty much any GType registered with\nGlib. Those properties indicate a specific, non-dynamic value for\nthis property. Examples include:\n\n\nAn integer value (G_TYPE_INT): the property has this exact\nvalue.\n\n\nA boolean value (G_TYPE_BOOLEAN): the property is either TRUE\nor FALSE.\n\n\nA float value (G_TYPE_FLOAT): the property has this exact\nfloating point value.\n\n\nA string value (G_TYPE_STRING): the property contains a UTF-8\nstring.\n\n\nA fraction value (GST_TYPE_FRACTION): contains a fraction\nexpressed by an integer numerator and denominator.\n\n\n\n\nRange types are GTypes registered by GStreamer to indicate a range\nof possible values. They are used for indicating allowed audio\nsamplerate values or supported video sizes. The two types defined in\nGStreamer are:\n\n\nAn integer range value (GST_TYPE_INT_RANGE): the property\ndenotes a range of possible integers, with a lower and an upper\nboundary. The “vorbisdec” element, for example, has a rate\nproperty that can be between 8000 and 50000.\n\n\nA float range value (GST_TYPE_FLOAT_RANGE): the property\ndenotes a range of possible floating point values, with a lower\nand an upper boundary.\n\n\nA fraction range value (GST_TYPE_FRACTION_RANGE): the property\ndenotes a range of possible fraction values, with a lower and an\nupper boundary.\n\n\n\n\nA list value (GST_TYPE_LIST): the property can take any value from\na list of basic values given in this list.\nExample: caps that express that either a sample rate of 44100 Hz and\na sample rate of 48000 Hz is supported would use a list of integer\nvalues, with one value being 44100 and one value being 48000.\n\n\nAn array value (GST_TYPE_ARRAY): the property is an array of\nvalues. Each value in the array is a full value on its own, too. All\nvalues in the array should be of the same elementary type. This\nmeans that an array can contain any combination of integers, lists\nof integers, integer ranges together, and the same for floats or\nstrings, but it can not contain both floats and ints at the same\ntime.\nExample: for audio where there are more than two channels involved\nthe channel layout needs to be specified (for one and two channel\naudio the channel layout is implicit unless stated otherwise in the\ncaps). So the channel layout would be an array of integer enum\nvalues where each enum value represents a loudspeaker position.\nUnlike a GST_TYPE_LIST, the values in an array will be interpreted\nas a whole.\n\n\n\n\nAn integer value (G_TYPE_INT): the property has this exact\nvalue.\n\n\nA boolean value (G_TYPE_BOOLEAN): the property is either TRUE\nor FALSE.\n\n\nA float value (G_TYPE_FLOAT): the property has this exact\nfloating point value.\n\n\nA string value (G_TYPE_STRING): the property contains a UTF-8\nstring.\n\n\nA fraction value (GST_TYPE_FRACTION): contains a fraction\nexpressed by an integer numerator and denominator.\n\n\n\n\nAn integer range value (GST_TYPE_INT_RANGE): the property\ndenotes a range of possible integers, with a lower and an upper\nboundary. The “vorbisdec” element, for example, has a rate\nproperty that can be between 8000 and 50000.\n\n\nA float range value (GST_TYPE_FLOAT_RANGE): the property\ndenotes a range of possible floating point values, with a lower\nand an upper boundary.\n\n\nA fraction range value (GST_TYPE_FRACTION_RANGE): the property\ndenotes a range of possible fraction values, with a lower and an\nupper boundary.\n\n\n"});