fragment_downloaded_cb({"url":"application-development/basics/helloworld.html#conclusion","fragment":"Conclusion\nThis concludes our first example. As you see, setting up a pipeline is\nvery low-level but powerful. You will see later in this manual how you\ncan create a more powerful media player with even less effort using\nhigher-level interfaces. We will discuss all that in Higher-level\ninterfaces for GStreamer applications. We will\nfirst, however, go more in-depth into more advanced GStreamer internals.\nIt should be clear from the example that we can very easily replace the\n“filesrc” element with some other element that reads data from a\nnetwork, or some other data source element that is better integrated\nwith your desktop environment. Also, you can use other decoders and\nparsers/demuxers to support other media types. You can use another audio\nsink if you're not running Linux, but Mac OS X, Windows or FreeBSD, or\nyou can instead use a filesink to write audio files to disk instead of\nplaying them back. By using an audio card source, you can even do audio\ncapture instead of playback. All this shows the reusability of GStreamer\nelements, which is its greatest advantage.\n"});