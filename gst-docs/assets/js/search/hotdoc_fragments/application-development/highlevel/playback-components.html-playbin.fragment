fragment_downloaded_cb({"url":"application-development/highlevel/playback-components.html#playbin","fragment":"Playbin\nPlaybin is an element that can be created using the standard GStreamer\nAPI (e.g. gst_element_factory_make ()). The factory is conveniently\ncalled “playbin”. By being a GstPipeline (and thus a GstElement),\nplaybin automatically supports all of the features of this class,\nincluding error handling, tag support, state handling, getting stream\npositions, seeking, and so on.\nSetting up a playbin pipeline is as simple as creating an instance of\nthe playbin element, setting a file location using the “uri” property on\nplaybin, and then setting the element to the GST_STATE_PLAYING state\n(the location has to be a valid URI, so “<protocol>://<location>”,\ne.g. file:///tmp/my.ogg or http://www.example.org/stream.ogg).\nInternally, playbin will set up a pipeline to playback the media\nlocation.\nPlaybin has several features that have been discussed previously:\nSettable video and audio output (using the “video-sink” and\n“audio-sink” properties).\nMostly controllable and trackable as a GstElement, including error\nhandling, eos handling, tag handling, state handling (through the\nGstBus), media position handling and seeking.\nBuffers network-sources, with buffer fullness notifications being\npassed through the GstBus.\nSupports visualizations for audio-only media.\nSupports subtitles, both in the media as well as from separate\nfiles. For separate subtitle files, use the “suburi” property.\nSupports stream selection and disabling. If your media has multiple\naudio or subtitle tracks, you can dynamically choose which one to\nplay back, or decide to turn it off altogether (which is especially\nuseful to turn off subtitles). For each of those, use the\n“current-text” and other related properties.\nFor convenience, it is possible to test “playbin” on the commandline,\nusing the command “gst-launch-1.0 playbin uri=file:///path/to/file”.\n\n\nSettable video and audio output (using the “video-sink” and\n“audio-sink” properties).\n\n\nMostly controllable and trackable as a GstElement, including error\nhandling, eos handling, tag handling, state handling (through the\nGstBus), media position handling and seeking.\n\n\nBuffers network-sources, with buffer fullness notifications being\npassed through the GstBus.\n\n\nSupports visualizations for audio-only media.\n\n\nSupports subtitles, both in the media as well as from separate\nfiles. For separate subtitle files, use the “suburi” property.\n\n\nSupports stream selection and disabling. If your media has multiple\naudio or subtitle tracks, you can dynamically choose which one to\nplay back, or decide to turn it off altogether (which is especially\nuseful to turn off subtitles). For each of those, use the\n“current-text” and other related properties.\n\n\n"});