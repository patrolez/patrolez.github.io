fragment_downloaded_cb({"url":"application-development/appendix/compiling.html#embedding-static-elements-in-your-application","fragment":"Embedding static elements in your application\nThe Plugin Writer's Guide\ndescribes in great detail how to write elements for the GStreamer\nframework. In this section, we will solely discuss how to embed such\nelements statically in your application. This can be useful for\napplication-specific elements that have no use elsewhere in GStreamer.\nDynamically loaded plugins contain a structure that's defined using\nGST_PLUGIN_DEFINE (). This structure is loaded when the plugin is\nloaded by the GStreamer core. The structure contains an initialization\nfunction (usually called plugin_init) that will be called right after\nthat. It's purpose is to register the elements provided by the plugin\nwith the GStreamer framework. If you want to embed elements directly in\nyour application, the only thing you need to do is to replace\nGST_PLUGIN_DEFINE () with a call to gst_plugin_register_static ().\nAs soon as you call gst_plugin_register_static (), the elements will\nfrom then on be available like any other element, without them having to\nbe dynamically loadable libraries. In the example below, you would be\nable to call gst_element_factory_make (\"my-element-name\", \"some-name\") to create an instance of the element.\n"});