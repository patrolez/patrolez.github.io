fragment_downloaded_cb({"url":"application-development/appendix/checklist-element.html#debugging","fragment":"Debugging\nApplications can make use of the extensive GStreamer debugging system to\ndebug pipeline problems. Elements will write output to this system to\nlog what they're doing. It's not used for error reporting, but it is\nvery useful for tracking what an element is doing exactly, which can\ncome in handy when debugging application issues (such as failing seeks,\nout-of-sync media, etc.).\nMost GStreamer-based applications accept the commandline option\n--gst-debug=LIST and related family members. The list consists of a\ncomma-separated list of category/level pairs, which can set the\ndebugging level for a specific debugging category. For example,\n--gst-debug=oggdemux:5 would turn on debugging for the Ogg demuxer\nelement. You can use wildcards as well. A debugging level of 0 will turn\noff all debugging, and a level of 9 will turn on all debugging.\nIntermediate values only turn on some debugging (based on message\nseverity; 2, for example, will only display errors and warnings). Here's\na list of all available options:\n--gst-debug-help will print available debug categories and exit.\n--gst-debug-level=LEVEL will set the default debug level (which\ncan range from 0 (no output) to 9 (everything)).\n--gst-debug=LIST takes a comma-separated list of\ncategory_name:level pairs to set specific levels for the individual\ncategories. Example: GST_AUTOPLUG:5,avidemux:3. Alternatively, you\ncan also set the GST_DEBUG environment variable, which has the\nsame effect.\n--gst-debug-no-color will disable color debugging. You can also\nset the GST_DEBUG_NO_COLOR environment variable to 1 if you want\nto disable colored debug output permanently. Note that if you are\ndisabling color purely to avoid messing up your pager output, try\nusing less -R.\n--gst-debug-color-mode=MODE will change debug log coloring mode.\nMODE can be one of the following: on, off, auto, disable,\nunix. You can also set the GST_DEBUG_COLOR_MODE environment\nvariable if you want to change colored debug output permanently.\nNote that if you are disabling color purely to avoid messing up your\npager output, try using less -R.\n--gst-debug-disable disables debugging altogether.\n\n\n--gst-debug-help will print available debug categories and exit.\n\n\n--gst-debug-level=LEVEL will set the default debug level (which\ncan range from 0 (no output) to 9 (everything)).\n\n\n--gst-debug=LIST takes a comma-separated list of\ncategory_name:level pairs to set specific levels for the individual\ncategories. Example: GST_AUTOPLUG:5,avidemux:3. Alternatively, you\ncan also set the GST_DEBUG environment variable, which has the\nsame effect.\n\n\n--gst-debug-no-color will disable color debugging. You can also\nset the GST_DEBUG_NO_COLOR environment variable to 1 if you want\nto disable colored debug output permanently. Note that if you are\ndisabling color purely to avoid messing up your pager output, try\nusing less -R.\n\n\n--gst-debug-color-mode=MODE will change debug log coloring mode.\nMODE can be one of the following: on, off, auto, disable,\nunix. You can also set the GST_DEBUG_COLOR_MODE environment\nvariable if you want to change colored debug output permanently.\nNote that if you are disabling color purely to avoid messing up your\npager output, try using less -R.\n\n\n--gst-debug-disable disables debugging altogether.\n\n\n"});