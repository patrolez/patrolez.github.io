fragment_downloaded_cb({"url":"application-development/appendix/checklist-element.html#good-programming-habits","fragment":"Good programming habits\nAlways add a GstBus handler to your pipeline. Always report errors\nin your application, and try to do something with warnings and\ninformation messages, too.\nAlways check return values of GStreamer functions. Especially, check\nreturn values of gst_element_link () and gst_element_set_state ().\nDereference return values of all functions returning a non-base\ntype, such as gst_element_get_pad (). Also, always free non-const\nstring returns, such as gst_object_get_name ().\nAlways use your pipeline object to keep track of the current state\nof your pipeline. Don't keep private variables in your application.\nAlso, don't update your user interface if a user presses the “play”\nbutton. Instead, listen for the “state-changed” message on the\nGstBus and only update the user interface whenever this message is\nreceived.\nReport all bugs that you find to Gitlab at\nhttps://gitlab.freedesktop.org/gstreamer/.\n\n\nAlways add a GstBus handler to your pipeline. Always report errors\nin your application, and try to do something with warnings and\ninformation messages, too.\n\n\nAlways check return values of GStreamer functions. Especially, check\nreturn values of gst_element_link () and gst_element_set_state ().\n\n\nDereference return values of all functions returning a non-base\ntype, such as gst_element_get_pad (). Also, always free non-const\nstring returns, such as gst_object_get_name ().\n\n\nAlways use your pipeline object to keep track of the current state\nof your pipeline. Don't keep private variables in your application.\nAlso, don't update your user interface if a user presses the “play”\nbutton. Instead, listen for the “state-changed” message on the\nGstBus and only update the user interface whenever this message is\nreceived.\n\n\nReport all bugs that you find to Gitlab at\nhttps://gitlab.freedesktop.org/gstreamer/.\n\n\n"});