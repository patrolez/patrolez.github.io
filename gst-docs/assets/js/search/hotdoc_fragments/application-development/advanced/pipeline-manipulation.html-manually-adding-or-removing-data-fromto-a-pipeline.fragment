fragment_downloaded_cb({"url":"application-development/advanced/pipeline-manipulation.html#manually-adding-or-removing-data-fromto-a-pipeline","fragment":"Manually adding or removing data from/to a pipeline\nMany people have expressed the wish to use their own sources to inject data into\na pipeline, others, the wish to grab a pipeline's output and take care of it in\ntheir application. While these methods are strongly discouraged, GStreamer\noffers support for them -- Beware! You need to know what you are doing --.\nSince you don't have any support from a base class you need to thoroughly\nunderstand state changes and synchronization. If it doesn't work, there are a\nmillion ways to shoot yourself in the foot. It's always better to simply write a\nplugin and have the base class manage it. See the Plugin Writer's Guide for more\ninformation on this topic. Additionally, review the next section, which explains\nhow to statically embed plugins in your application.\nThere are two possible elements that you can use for the above-mentioned\npurposes: appsrc (an imaginary source) and appsink (an imaginary sink). The\nsame method applies to these elements. We will discuss how to use them to insert\n(using appsrc) or to grab (using appsink) data from a pipeline, and how to set\nnegotiation.\nBoth appsrc and appsink provide 2 sets of API. One API uses standard\nGObject (action) signals and properties. The same API is also available\nas a regular C API. The C API is more performant but requires you to\nlink to the app library in order to use the elements.\n"});