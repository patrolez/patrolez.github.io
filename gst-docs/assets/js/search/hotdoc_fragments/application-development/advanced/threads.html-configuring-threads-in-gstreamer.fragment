fragment_downloaded_cb({"url":"application-development/advanced/threads.html#configuring-threads-in-gstreamer","fragment":"Configuring Threads in GStreamer\nA STREAM_STATUS message is posted on the bus to inform you about the\nstatus of the streaming threads. You will get the following information\nfrom the message:\nWhen a new thread is about to be created, you will be notified of\nthis with a GST_STREAM_STATUS_TYPE_CREATE type. It is then\npossible to configure a GstTaskPool in the GstTask. The custom\ntaskpool will provide custom threads for the task to implement the\nstreaming threads.\nThis message needs to be handled synchronously if you want to\nconfigure a custom taskpool. If you don't configure the taskpool on\nthe task when this message returns, the task will use its default\npool.\nWhen a thread is entered or left. This is the moment where you could\nconfigure thread priorities. You also get a notification when a\nthread is destroyed.\nYou get messages when the thread starts, pauses and stops. This\ncould be used to visualize the status of streaming threads in a gui\napplication.\nWe will now look at some examples in the next sections.\n\n\nWhen a new thread is about to be created, you will be notified of\nthis with a GST_STREAM_STATUS_TYPE_CREATE type. It is then\npossible to configure a GstTaskPool in the GstTask. The custom\ntaskpool will provide custom threads for the task to implement the\nstreaming threads.\nThis message needs to be handled synchronously if you want to\nconfigure a custom taskpool. If you don't configure the taskpool on\nthe task when this message returns, the task will use its default\npool.\n\n\nWhen a thread is entered or left. This is the moment where you could\nconfigure thread priorities. You also get a notification when a\nthread is destroyed.\n\n\nYou get messages when the thread starts, pauses and stops. This\ncould be used to visualize the status of streaming threads in a gui\napplication.\n\n\n"});