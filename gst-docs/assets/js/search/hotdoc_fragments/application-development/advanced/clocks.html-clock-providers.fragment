fragment_downloaded_cb({"url":"application-development/advanced/clocks.html#clock-providers","fragment":"Clock providers\nA clock provider is an element in the pipeline that can provide a\nGstClock object. The clock object needs to report an absolute-time\nthat is monotonically increasing when the element is in the PLAYING\nstate. It is allowed to pause the clock while the element is PAUSED.\nClock providers exist because they play back media at some rate, and\nthis rate is not necessarily the same as the system clock rate. For\nexample, a soundcard may play back at 44.1 kHz, but that doesn't mean\nthat after exactly 1 second according to the system clock, the\nsoundcard has played back 44100 samples. This is only true by\napproximation. In fact, the audio device has an internal clock based on\nthe number of samples played that we can expose.\nIf an element with an internal clock needs to synchronize, it needs to\nestimate when a time according to the pipeline clock will take place\naccording to the internal clock. To estimate this, it needs to slave its\nclock to the pipeline clock.\nIf the pipeline clock is exactly the internal clock of an element, the\nelement can skip the slaving step and directly use the pipeline clock to\nschedule playback. This can be both faster and more accurate. Therefore,\ngenerally, elements with an internal clock like audio input or output\ndevices will be a clock provider for the pipeline.\nWhen the pipeline goes to the PLAYING state, it will go over all\nelements in the pipeline from sink to source and ask each element if\nthey can provide a clock. The last element that can provide a clock will\nbe used as the clock provider in the pipeline. This algorithm prefers a\nclock from an audio sink in a typical playback pipeline and a clock from\nsource elements in a typical capture pipeline.\nThere exist some bus messages to let you know about the clock and clock\nproviders in the pipeline. You can see what clock is selected in the\npipeline by looking at the NEW_CLOCK message on the bus. When a clock\nprovider is removed from the pipeline, a CLOCK_LOST message is posted\nand the application should go to PAUSED and back to PLAYING to select a\nnew clock.\n"});