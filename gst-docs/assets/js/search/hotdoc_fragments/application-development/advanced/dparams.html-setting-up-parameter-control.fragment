fragment_downloaded_cb({"url":"application-development/advanced/dparams.html#setting-up-parameter-control","fragment":"Setting up parameter control\nIf we have our pipeline set up and want to control some parameters, we\nfirst need to create a GstControlSource. Let's use an interpolation\nGstControlSource:\nNow, we need to attach the GstControlSource to the gobject property. This\nis done with a control-binding. One control source can be attached to\nseveral object properties (even in different objects) using separate\ncontrol-bindings.\nThis type GstControlSource takes new property values from a list of\ntime-stamped parameter changes. The source can e.g. fill gaps by\nsmoothing parameter changes. This behavior can be configured by setting\nthe mode property of the GstControlSource. Other control sources e.g.\nproduce a stream of values by calling sin() function. They have\nparameters to control e.g. the frequency. As GstControlSources are also\nGstObjects, one can attach GstControlSources to these properties too.\nNow we can set some control points. These are time-stamped gdouble\nvalues and are usually in the range of 0.0 to 1.0. A value of 1.0 is\nlater mapped to the maximum value in the target properties value range.\nThe values become active when the timestamp is reached. They still stay\nin the list. If e.g. the pipeline runs a loop (using a segmented seek),\nthe control-curve gets repeated as well.\nNow everything is ready to play. If we bound the GstControlSource to a volume\nproperty, we will hear a 1 second fade-in. One word of caution: GStreamer's\nstock volume element has a volume property with a range from 0.0 to 10.0. If\nthe above GstControlSource is attached to this property the volume will ramp\nup to 400%!\nOne final note: the controller subsystem has a built-in live-mode. Even\nthough a property has a GstControlSource assigned, one can set the\nGObject property with g_object_set(). This is highly useful when binding\nthe GObject properties to GUI widgets. When the user adjusts the value with\nthe widget, one can set the GObject property and this remains active until\nthe next programmed GstControlSource value overrides it. This also works with\nsmoothed parameters but it does not work for GstControlSources that constantly\nupdate the property, like GstLFOControlSource.\n"});