fragment_downloaded_cb({"url":"application-development/advanced/pipeline-manipulation.html#changing-elements-in-a-pipeline","fragment":"Changing elements in a pipeline\nIn this example we have the following element chain:\nWe want to replace element2 by element4 while the pipeline is in the\nPLAYING state. Let's say that element2 is a visualization and that you\nwant to switch the visualization in the pipeline.\nWe can't just unlink element2's sinkpad from element1's source pad\nbecause that would leave element1's source pad unlinked and would cause\na streaming error in the pipeline when data is pushed on the source pad.\nThe technique is to block the dataflow from element1's source pad before\nwe replace element2 by element4 and then resume dataflow as shown in the\nfollowing steps:\nBlock element1's source pad with a blocking pad probe. When the pad\nis blocked, the probe callback will be called.\nInside the block callback nothing is flowing between element1 and\nelement2 and nothing will flow until unblocked.\nUnlink element1 and element2.\nMake sure data is flushed out of element2. Some elements might\ninternally keep some data, you need to make sure not to lose any by\nforcing it out of element2. You can do this by pushing EOS into\nelement2, like this:\nPut an event probe on element2's source pad.\nSend EOS to element2's sink pad. This makes sure that all the data\ninside element2 is forced out.\nWait for the EOS event to appear on element2's source pad. When\nthe EOS is received, drop it and remove the event probe.\nUnlink element2 and element3. You can now also remove element2 from\nthe pipeline and set the state to NULL.\nAdd element4 to the pipeline, if not already added. Link element4\nand element3. Link element1 and element4.\nMake sure element4 is in the same state as the rest of the elements\nin the pipeline. It should be at least in the PAUSED state before it\ncan receive buffers and events.\nUnblock element1's source pad probe. This will let new data into\nelement4 and continue streaming.\nThe above algorithm works when the source pad is blocked, i.e. when\nthere is dataflow in the pipeline. If there is no dataflow, there is\nalso no point in changing the element (just yet) so this algorithm can\nbe used in the PAUSED state as well.\nThis example changes the video effect on a simple pipeline once per\nsecond:\nNote how we added videoconvert elements before and after the effect.\nThis is needed because some elements might operate in different\ncolorspaces; by inserting the conversion elements, we can help ensure\na proper format can be negotiated.\n\n\nBlock element1's source pad with a blocking pad probe. When the pad\nis blocked, the probe callback will be called.\n\n\nInside the block callback nothing is flowing between element1 and\nelement2 and nothing will flow until unblocked.\n\n\nUnlink element1 and element2.\n\n\nMake sure data is flushed out of element2. Some elements might\ninternally keep some data, you need to make sure not to lose any by\nforcing it out of element2. You can do this by pushing EOS into\nelement2, like this:\n\n\nPut an event probe on element2's source pad.\n\n\nSend EOS to element2's sink pad. This makes sure that all the data\ninside element2 is forced out.\n\n\nWait for the EOS event to appear on element2's source pad. When\nthe EOS is received, drop it and remove the event probe.\n\n\n\n\nUnlink element2 and element3. You can now also remove element2 from\nthe pipeline and set the state to NULL.\n\n\nAdd element4 to the pipeline, if not already added. Link element4\nand element3. Link element1 and element4.\n\n\nMake sure element4 is in the same state as the rest of the elements\nin the pipeline. It should be at least in the PAUSED state before it\ncan receive buffers and events.\n\n\nUnblock element1's source pad probe. This will let new data into\nelement4 and continue streaming.\n\n\n\n\nPut an event probe on element2's source pad.\n\n\nSend EOS to element2's sink pad. This makes sure that all the data\ninside element2 is forced out.\n\n\nWait for the EOS event to appear on element2's source pad. When\nthe EOS is received, drop it and remove the event probe.\n\n\n"});