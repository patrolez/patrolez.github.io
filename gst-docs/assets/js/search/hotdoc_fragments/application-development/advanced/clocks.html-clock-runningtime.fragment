fragment_downloaded_cb({"url":"application-development/advanced/clocks.html#clock-runningtime","fragment":"Clock running-time\nIn a typical computer, there are many sources that can be used as a time\nsource, e.g., the system time, soundcards, CPU performance counters, etc.\nFor this reason, GStreamer has many GstClock implementations available.\nNote that clock time doesn't have to start from 0 or any other known\nvalue. Some clocks start counting from a particular start date, others\nfrom the last reboot, etc.\nA GstClock returns the absolute-time according to that clock with\ngst_clock_get_time (). The absolute-time (or clock time) of a clock\nis monotonically increasing.\nA running-time is the difference between a previous snapshot of the\nabsolute-time called the base-time, and any other absolute-time.\nA GStreamer GstPipeline object maintains a GstClock object and a\nbase-time when it goes to the PLAYING state. The pipeline gives a handle\nto the selected GstClock to each element in the pipeline along with\nselected base-time. The pipeline will select a base-time in such a way\nthat the running-time reflects the total time spent in the PLAYING\nstate. As a result, when the pipeline is PAUSED, the running-time stands\nstill.\nBecause all objects in the pipeline have the same clock and base-time,\nthey can thus all calculate the running-time according to the pipeline\nclock.\n"});