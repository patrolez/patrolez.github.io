fragment_downloaded_cb({"url":"application-development/advanced/threads.html#scheduling-in-gstreamer","fragment":"Scheduling in GStreamer\nEach element in the GStreamer pipeline decides how it is going to be\nscheduled. Elements can choose if their pads are to be scheduled\npush-based or pull-based. An element can, for example, choose to start a\nthread to start pulling from the sink pad or/and start pushing on the\nsource pad. An element can also choose to use the upstream or downstream\nthread for its data processing in push and pull mode respectively.\nGStreamer does not pose any restrictions on how the element chooses to\nbe scheduled. See the Plugin Writer Guide for more details.\nWhat will happen in any case is that some elements will start a thread\nfor their data processing, called the “streaming threads”. The streaming\nthreads, or GstTask objects, are created from a GstTaskPool when the\nelement needs to make a streaming thread. In the next section we see how\nwe can receive notifications of the tasks and pools.\n"});