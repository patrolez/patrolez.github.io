fragment_downloaded_cb({"url":"application-development/advanced/dparams.html#getting-started","fragment":"Getting Started\nGStreamer properties are normally set using g_object_set(), but timing these\ncalls reliably so that the changes affect certain stream times is close to\nimpossible. The controller subsystem offers a lightweight way to adjust\nGObject properties over stream-time.\nThe controller takes time into account; it works by attaching\nGstControlSources to properties using control-bindings. Control-sources\nprovide values for a given time-stamp that are usually in the range of 0.0 to 1.0.\nControl-bindings map the control-value to the GObject property they are bound\nto, converting the type and scaling to the target property's value range. At\nrun-time the elements continuously pull value changes for the current\nstream-time to update the GObject properties. GStreamer already includes a\nfew different GstControlSources and control-bindings, but applications can\ndefine their own by sub-classing the respective base classes.\nMost parts of the controller mechanism are implemented in GstObject.\nThe base classes for GstControlSources and control-bindings are also included\nin the core library but the existing implementations are contained within\nthe gstcontroller library, so you need to include these headers in your\napplication's source file as needed:\nBeyond including the proper headers, your application should link to the\ngstreamer-controller shared library. To get the required compiler and\nlinker flags, you can use:\n"});