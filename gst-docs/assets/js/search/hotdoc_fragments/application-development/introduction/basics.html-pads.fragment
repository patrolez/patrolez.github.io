fragment_downloaded_cb({"url":"application-development/introduction/basics.html#pads","fragment":"Pads\nPads are an element's input and output, where you can connect other\nelements. They are used to negotiate links and data flow between\nelements in GStreamer. A pad can be viewed as a “plug” or “port” on an\nelement where links may be made with other elements, and through which\ndata can flow to or from those elements. Pads have specific data\nhandling capabilities: a pad can restrict the type of data that flows\nthrough it. Links are only allowed between two pads when the allowed\ndata types (capabilities) of the two pads are compatible. Data types are\nnegotiated between pads using a process called caps negotiation. Data\ntypes are described by GstCaps.\nAn analogy may be helpful here. A pad is similar to a plug or jack on a\nphysical device. Consider, for example, a home theater system consisting\nof an audio amplifier, a DVD player, and a (silent) video projector. Linking\nthe DVD player to the amplifier is allowed because both devices have\naudio jacks, and linking the projector to the DVD player is allowed\nbecause both devices have compatible video jacks. Links between the\nprojector and the amplifier may not be made because the projector and\namplifier have different types of jacks. Pads in GStreamer serve the\nsame purpose as the jacks in the home theater system.\nFor the most part, all data in GStreamer flows one way through a link\nbetween elements. Data flows out of one element through one or more\nsource pads, and elements accept incoming data through one or more\nsink pads. Source and sink elements have only source and sink pads,\nrespectively. Data usually means buffers (described by the\nGstBuffer\nobject) and events (described by the\nGstEvent\nobject).\n"});