fragment_downloaded_cb({"url":"application-development/introduction/basics.html#communication","fragment":"Communication\nGStreamer provides several mechanisms for communication and data\nexchange between the application and the pipeline.\nbuffers are objects for passing streaming data between elements in\nthe pipeline. Buffers always travel from sources to sinks\n(downstream).\nevents are objects sent between elements or from the application\nto elements. Events can travel upstream and downstream. Downstream\nevents can be synchronised to the data flow.\nmessages are objects posted by elements on the pipeline's message\nbus, where they will be held for collection by the application.\nMessages can be intercepted synchronously from the streaming thread\ncontext of the element posting the message, but are usually handled\nasynchronously by the application from the application's main\nthread. Messages are used to transmit information such as errors,\ntags, state changes, buffering state, redirects etc. from elements\nto the application in a thread-safe way.\nqueries allow applications to request information such as duration\nor current playback position from the pipeline. Queries are always\nanswered synchronously. Elements can also use queries to request\ninformation from their peer elements (such as the file size or\nduration). They can be used both ways within a pipeline, but\nupstream queries are more common.\n\n\n\nbuffers are objects for passing streaming data between elements in\nthe pipeline. Buffers always travel from sources to sinks\n(downstream).\n\n\nevents are objects sent between elements or from the application\nto elements. Events can travel upstream and downstream. Downstream\nevents can be synchronised to the data flow.\n\n\nmessages are objects posted by elements on the pipeline's message\nbus, where they will be held for collection by the application.\nMessages can be intercepted synchronously from the streaming thread\ncontext of the element posting the message, but are usually handled\nasynchronously by the application from the application's main\nthread. Messages are used to transmit information such as errors,\ntags, state changes, buffering state, redirects etc. from elements\nto the application in a thread-safe way.\n\n\nqueries allow applications to request information such as duration\nor current playback position from the pipeline. Queries are always\nanswered synchronously. Elements can also use queries to request\ninformation from their peer elements (such as the file size or\nduration). They can be used both ways within a pipeline, but\nupstream queries are more common.\n\n\n"});