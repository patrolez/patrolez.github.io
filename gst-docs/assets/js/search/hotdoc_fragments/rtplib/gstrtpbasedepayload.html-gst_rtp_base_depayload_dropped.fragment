fragment_downloaded_cb({"url":"rtplib/gstrtpbasedepayload.html#gst_rtp_base_depayload_dropped","fragment":"\n\tgst_rtp_base_depayload_dropped\n\n\n\tGstRtp.RTPBaseDepayload.prototype.dropped\n\n\n\tGstRtp.RTPBaseDepayload.dropped\n\nCalled from GstRTPBaseDepayload.process or\nGstRTPBaseDepayload.process_rtp_packet if the depayloader does not\nuse the current buffer for the output buffer. This will either drop\nthe delayed buffer or the last buffer from the header extension\ncache.\nA typical use-case is when the depayloader implementation is\ndropping an input RTP buffer while waiting for the first keyframe.\nMust be called with the stream lock held.\nParameters:\na GstRTPBaseDepayload\n\n\tSince\t\t\t: 1.24\n\t\t\nCalled from GstRTPBaseDepayload.process or\nGstRTPBaseDepayload.process_rtp_packet if the depayloader does not\nuse the current buffer for the output buffer. This will either drop\nthe delayed buffer or the last buffer from the header extension\ncache.\nA typical use-case is when the depayloader implementation is\ndropping an input RTP buffer while waiting for the first keyframe.\nMust be called with the stream lock held.\nParameters:\na GstRtp.RTPBaseDepayload\n\n\tSince\t\t\t: 1.24\n\t\t\nCalled from GstRTPBaseDepayload.process or\nGstRTPBaseDepayload.process_rtp_packet if the depayloader does not\nuse the current buffer for the output buffer. This will either drop\nthe delayed buffer or the last buffer from the header extension\ncache.\nA typical use-case is when the depayloader implementation is\ndropping an input RTP buffer while waiting for the first keyframe.\nMust be called with the stream lock held.\nParameters:\na GstRtp.RTPBaseDepayload\n\n\tSince\t\t\t: 1.24\n\t\t\n"});