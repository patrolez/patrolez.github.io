fragment_downloaded_cb({"url":"rtplib/gstrtpbasedepayload.html#gst_rtp_base_depayload_push","fragment":"\n\tgst_rtp_base_depayload_push\n\n\n\tGstRtp.RTPBaseDepayload.prototype.push\n\n\n\tGstRtp.RTPBaseDepayload.push\n\nPush out_buf to the peer of filter. This function takes ownership of\nout_buf.\nThis function will by default apply the last incoming timestamp on\nthe outgoing buffer when it didn't have a timestamp already.\nParameters:\na GstRTPBaseDepayload\na GstBuffer\na GstFlowReturn.\nPush out_buf to the peer of filter. This function takes ownership of\nout_buf.\nThis function will by default apply the last incoming timestamp on\nthe outgoing buffer when it didn't have a timestamp already.\nParameters:\na GstRtp.RTPBaseDepayload\na Gst.Buffer\na Gst.FlowReturn.\nPush out_buf to the peer of filter. This function takes ownership of\nout_buf.\nThis function will by default apply the last incoming timestamp on\nthe outgoing buffer when it didn't have a timestamp already.\nParameters:\na GstRtp.RTPBaseDepayload\na Gst.Buffer\na Gst.FlowReturn.\n"});