fragment_downloaded_cb({"url":"rtplib/gstrtphdrext.html#gst_rtp_header_extension_set_wants_update_non_rtp_src_caps","fragment":"\n\tgst_rtp_header_extension_set_wants_update_non_rtp_src_caps\n\n\n\tGstRtp.RTPHeaderExtension.prototype.set_wants_update_non_rtp_src_caps\n\n\n\tGstRtp.RTPHeaderExtension.set_wants_update_non_rtp_src_caps\n\nCall this function in a subclass from read to\ntell the depayloader whether the data just parsed from RTP packet require\nupdating its src (non-RTP) caps. If state is TRUE, GstRTPBaseDepayload will\neventually invoke gst_rtp_header_extension_update_non_rtp_src_caps to\nhave the caps update applied. Applying the update also flips the internal\n\"wants update\" flag back to FALSE.\nParameters:\na GstRTPHeaderExtension\nTRUE if caps update is needed\n\n\tSince\t\t\t: 1.20\n\t\t\nCall this function in a subclass from vfunc_read to\ntell the depayloader whether the data just parsed from RTP packet require\nupdating its src (non-RTP) caps. If state is TRUE, GstRtp.RTPBaseDepayload will\neventually invoke GstRtp.RTPHeaderExtension.prototype.update_non_rtp_src_caps to\nhave the caps update applied. Applying the update also flips the internal\n\"wants update\" flag back to FALSE.\nParameters:\na GstRtp.RTPHeaderExtension\nTRUE if caps update is needed\n\n\tSince\t\t\t: 1.20\n\t\t\nCall this function in a subclass from do_read to\ntell the depayloader whether the data just parsed from RTP packet require\nupdating its src (non-RTP) caps. If state is TRUE, GstRtp.RTPBaseDepayload will\neventually invoke GstRtp.RTPHeaderExtension.update_non_rtp_src_caps to\nhave the caps update applied. Applying the update also flips the internal\n\"wants update\" flag back to FALSE.\nParameters:\na GstRtp.RTPHeaderExtension\nTRUE if caps update is needed\n\n\tSince\t\t\t: 1.20\n\t\t\n"});