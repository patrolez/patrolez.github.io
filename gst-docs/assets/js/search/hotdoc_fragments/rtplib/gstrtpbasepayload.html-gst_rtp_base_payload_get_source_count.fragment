fragment_downloaded_cb({"url":"rtplib/gstrtpbasepayload.html#gst_rtp_base_payload_get_source_count","fragment":"\n\tgst_rtp_base_payload_get_source_count\n\n\n\tGstRtp.RTPBasePayload.prototype.get_source_count\n\n\n\tGstRtp.RTPBasePayload.get_source_count\n\nCount the total number of RTP sources found in the meta of buffer, which\nwill be automically added by gst_rtp_base_payload_allocate_output_buffer.\nIf source-info is FALSE the count will be 0.\nParameters:\na GstRTPBasePayload\na GstBuffer, typically the buffer to payload\nThe number of sources.\n\n\tSince\t\t\t: 1.16\n\t\t\nCount the total number of RTP sources found in the meta of buffer, which\nwill be automically added by GstRtp.RTPBasePayload.prototype.allocate_output_buffer.\nIf source-info is false the count will be 0.\nParameters:\na GstRtp.RTPBasePayload\na Gst.Buffer, typically the buffer to payload\nThe number of sources.\n\n\tSince\t\t\t: 1.16\n\t\t\nCount the total number of RTP sources found in the meta of buffer, which\nwill be automically added by GstRtp.RTPBasePayload.allocate_output_buffer.\nIf source_info is False the count will be 0.\nParameters:\na GstRtp.RTPBasePayload\na Gst.Buffer, typically the buffer to payload\nThe number of sources.\n\n\tSince\t\t\t: 1.16\n\t\t\n"});