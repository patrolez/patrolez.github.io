fragment_downloaded_cb({"url":"rtplib/gstrtpbaseaudiopayload.html#gst_rtp_base_audio_payload_push","fragment":"\n\tgst_rtp_base_audio_payload_push\n\n\n\tGstRtp.RTPBaseAudioPayload.prototype.push\n\n\n\tGstRtp.RTPBaseAudioPayload.push\n\nCreate an RTP buffer and store payload_len bytes of data as the\npayload. Set the timestamp on the new buffer to timestamp before pushing\nthe buffer downstream.\nParameters:\na GstRTPBasePayload\ndata to set as payload\nlength of payload\na GstClockTime\na GstFlowReturn\nCreate an RTP buffer and store payload_len bytes of data as the\npayload. Set the timestamp on the new buffer to timestamp before pushing\nthe buffer downstream.\nParameters:\na GstRtp.RTPBasePayload\ndata to set as payload\nlength of payload\na Number\na Gst.FlowReturn\nCreate an RTP buffer and store payload_len bytes of data as the\npayload. Set the timestamp on the new buffer to timestamp before pushing\nthe buffer downstream.\nParameters:\na GstRtp.RTPBasePayload\ndata to set as payload\nlength of payload\na int\na Gst.FlowReturn\n"});