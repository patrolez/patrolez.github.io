fragment_downloaded_cb({"url":"rtplib/gstrtpbuffer.html#gst_rtp_buffer_set_extension_data","fragment":"\n\tgst_rtp_buffer_set_extension_data\n\n\n\tGstRtp.RTPBuffer.prototype.set_extension_data\n\n\n\tGstRtp.RTPBuffer.set_extension_data\n\nSet the extension bit of the rtp buffer and fill in the bits and length of the\nextension header. If the existing extension data is not large enough, it will\nbe made larger.\nWill also shorten the extension data from 1.20.\nParameters:\nthe RTP packet\nthe bits specific for the extension\nthe length that counts the number of 32-bit words in\nthe extension, excluding the extension header ( therefore zero is a valid length)\nTrue if done.\nSet the extension bit of the rtp buffer and fill in the bits and length of the\nextension header. If the existing extension data is not large enough, it will\nbe made larger.\nWill also shorten the extension data from 1.20.\nParameters:\nthe RTP packet\nthe bits specific for the extension\nthe length that counts the number of 32-bit words in\nthe extension, excluding the extension header ( therefore zero is a valid length)\nTrue if done.\nSet the extension bit of the rtp buffer and fill in the bits and length of the\nextension header. If the existing extension data is not large enough, it will\nbe made larger.\nWill also shorten the extension data from 1.20.\nParameters:\nthe RTP packet\nthe bits specific for the extension\nthe length that counts the number of 32-bit words in\nthe extension, excluding the extension header ( therefore zero is a valid length)\nTrue if done.\n"});