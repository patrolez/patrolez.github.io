fragment_downloaded_cb({"url":"rtplib/gstrtpbasedepayload.html#gst_rtp_base_depayload_flush","fragment":"\n\tgst_rtp_base_depayload_flush\n\n\n\tGstRtp.RTPBaseDepayload.prototype.flush\n\n\n\tGstRtp.RTPBaseDepayload.flush\n\nIf GstRTPBaseDepayload.process or\nGstRTPBaseDepayload.process_rtp_packet drop an output buffer this\nfunction tells the base class to flush header extension cache as\nwell.\nThis will not drop an input RTP header marked as delayed from\ngst_rtp_base_depayload_delayed.\nIf keep_current is TRUE the current input RTP header will be kept\nand enqueued after flushing the previous input RTP headers.\nA typical use-case for keep_current is when the depayloader\nimplementation invalidates the current output buffer and starts a\nnew one with the current RTP input buffer.\nMust be called with the stream lock held.\nParameters:\na GstRTPBaseDepayload\nif the current RTP buffer shall be kept\n\n\tSince\t\t\t: 1.24\n\t\t\nIf GstRTPBaseDepayload.process or\nGstRTPBaseDepayload.process_rtp_packet drop an output buffer this\nfunction tells the base class to flush header extension cache as\nwell.\nThis will not drop an input RTP header marked as delayed from\nGstRtp.RTPBaseDepayload.prototype.delayed.\nIf keep_current is true the current input RTP header will be kept\nand enqueued after flushing the previous input RTP headers.\nA typical use-case for keep_current is when the depayloader\nimplementation invalidates the current output buffer and starts a\nnew one with the current RTP input buffer.\nMust be called with the stream lock held.\nParameters:\na GstRtp.RTPBaseDepayload\nif the current RTP buffer shall be kept\n\n\tSince\t\t\t: 1.24\n\t\t\nIf GstRTPBaseDepayload.process or\nGstRTPBaseDepayload.process_rtp_packet drop an output buffer this\nfunction tells the base class to flush header extension cache as\nwell.\nThis will not drop an input RTP header marked as delayed from\nGstRtp.RTPBaseDepayload.delayed.\nIf keep_current is True the current input RTP header will be kept\nand enqueued after flushing the previous input RTP headers.\nA typical use-case for keep_current is when the depayloader\nimplementation invalidates the current output buffer and starts a\nnew one with the current RTP input buffer.\nMust be called with the stream lock held.\nParameters:\na GstRtp.RTPBaseDepayload\nif the current RTP buffer shall be kept\n\n\tSince\t\t\t: 1.24\n\t\t\n"});