fragment_downloaded_cb({"url":"rtplib/gstrtphdrext.html#gst_rtp_header_extension_get_max_size","fragment":"\n\tgst_rtp_header_extension_get_max_size\n\n\n\tGstRtp.RTPHeaderExtension.prototype.get_max_size\n\n\n\tGstRtp.RTPHeaderExtension.get_max_size\n\nThis is used to know how much data a certain header extension will need for\nboth allocating the resulting data, and deciding how much payload data can\nbe generated.\nImplementations should return as accurate a value as is possible using the\ninformation given in the input buffer.\nParameters:\na GstRTPHeaderExtension\na GstBuffer\nthe maximum size of the data written by this extension\n\n\tSince\t\t\t: 1.20\n\t\t\nThis is used to know how much data a certain header extension will need for\nboth allocating the resulting data, and deciding how much payload data can\nbe generated.\nImplementations should return as accurate a value as is possible using the\ninformation given in the input buffer.\nParameters:\na GstRtp.RTPHeaderExtension\na Gst.Buffer\nthe maximum size of the data written by this extension\n\n\tSince\t\t\t: 1.20\n\t\t\nThis is used to know how much data a certain header extension will need for\nboth allocating the resulting data, and deciding how much payload data can\nbe generated.\nImplementations should return as accurate a value as is possible using the\ninformation given in the input buffer.\nParameters:\na GstRtp.RTPHeaderExtension\na Gst.Buffer\nthe maximum size of the data written by this extension\n\n\tSince\t\t\t: 1.20\n\t\t\n"});