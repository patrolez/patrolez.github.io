fragment_downloaded_cb({"url":"rtplib/gstrtpbuffer.html#gst_rtp_buffer_get_extension_onebyte_header","fragment":"\n\tgst_rtp_buffer_get_extension_onebyte_header\n\n\n\tGstRtp.RTPBuffer.prototype.get_extension_onebyte_header\n\n\n\tGstRtp.RTPBuffer.get_extension_onebyte_header\n\nParses RFC 5285 style header extensions with a one byte header. It will\nreturn the nth extension with the requested id.\nParameters:\nthe RTP packet\nThe ID of the header extension to be read (between 1 and 14).\nRead the nth extension packet with the requested ID\n(optional) (out) (array length=size) (element-type guint8) (transfer none):\nlocation for data\nthe size of the data in bytes\nTRUE if buffer had the requested header extension\nParses RFC 5285 style header extensions with a one byte header. It will\nreturn the nth extension with the requested id.\nParameters:\nthe RTP packet\nThe ID of the header extension to be read (between 1 and 14).\nRead the nth extension packet with the requested ID\nReturns a tuple made of:\nTRUE if buffer had the requested header extension\nTRUE if buffer had the requested header extension\nTRUE if buffer had the requested header extension\nParses RFC 5285 style header extensions with a one byte header. It will\nreturn the nth extension with the requested id.\nParameters:\nthe RTP packet\nThe ID of the header extension to be read (between 1 and 14).\nRead the nth extension packet with the requested ID\nReturns a tuple made of:\nTRUE if buffer had the requested header extension\nTRUE if buffer had the requested header extension\nTRUE if buffer had the requested header extension\n"});