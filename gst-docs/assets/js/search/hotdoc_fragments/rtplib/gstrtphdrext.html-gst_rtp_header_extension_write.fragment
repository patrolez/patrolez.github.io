fragment_downloaded_cb({"url":"rtplib/gstrtphdrext.html#gst_rtp_header_extension_write","fragment":"\n\tgst_rtp_header_extension_write\n\n\n\tGstRtp.RTPHeaderExtension.prototype.write\n\n\n\tGstRtp.RTPHeaderExtension.write\n\nWrites the RTP header extension to data using information available from\nthe input_meta.  data will be sized to be at least the value returned\nfrom gst_rtp_header_extension_get_max_size.\nParameters:\na GstRTPHeaderExtension\nthe input GstBuffer to read information from if necessary\nGstRTPHeaderExtensionFlags for how the extension should\nbe written\noutput RTP GstBuffer\nlocation to write the rtp header extension into\nsize of data\nthe size of the data written, < 0 on failure\n\n\tSince\t\t\t: 1.20\n\t\t\nWrites the RTP header extension to data using information available from\nthe input_meta.  data will be sized to be at least the value returned\nfrom GstRtp.RTPHeaderExtension.prototype.get_max_size.\nParameters:\na GstRtp.RTPHeaderExtension\nthe input Gst.Buffer to read information from if necessary\nGstRtp.RTPHeaderExtensionFlags for how the extension should\nbe written\noutput RTP Gst.Buffer\nlocation to write the rtp header extension into\nsize of data\nthe size of the data written, < 0 on failure\n\n\tSince\t\t\t: 1.20\n\t\t\nWrites the RTP header extension to data using information available from\nthe input_meta.  data will be sized to be at least the value returned\nfrom GstRtp.RTPHeaderExtension.get_max_size.\nParameters:\na GstRtp.RTPHeaderExtension\nthe input Gst.Buffer to read information from if necessary\nGstRtp.RTPHeaderExtensionFlags for how the extension should\nbe written\noutput RTP Gst.Buffer\nlocation to write the rtp header extension into\nsize of data\nthe size of the data written, < 0 on failure\n\n\tSince\t\t\t: 1.20\n\t\t\n"});