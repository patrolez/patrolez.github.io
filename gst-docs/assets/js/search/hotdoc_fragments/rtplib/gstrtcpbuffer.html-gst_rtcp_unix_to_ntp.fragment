fragment_downloaded_cb({"url":"rtplib/gstrtcpbuffer.html#gst_rtcp_unix_to_ntp","fragment":"\n\tgst_rtcp_unix_to_ntp\n\n\n\tGstRtp.prototype.rtcp_unix_to_ntp\n\n\n\tGstRtp.rtcp_unix_to_ntp\n\nConverts a UNIX timestamp in nanoseconds to an NTP time. The caller should\npass a value with nanoseconds since 1970. The NTP time will, in the upper\n32 bits, contain the number of seconds since 1900 and, in the lower 32\nbits, the fractional seconds. The resulting value can be used as an ntptime\nfor constructing SR RTCP packets.\nParameters:\nan UNIX timestamp in nanoseconds\nthe NTP time for unixtime.\nConverts a UNIX timestamp in nanoseconds to an NTP time. The caller should\npass a value with nanoseconds since 1970. The NTP time will, in the upper\n32 bits, contain the number of seconds since 1900 and, in the lower 32\nbits, the fractional seconds. The resulting value can be used as an ntptime\nfor constructing SR RTCP packets.\nParameters:\nan UNIX timestamp in nanoseconds\nthe NTP time for unixtime.\nConverts a UNIX timestamp in nanoseconds to an NTP time. The caller should\npass a value with nanoseconds since 1970. The NTP time will, in the upper\n32 bits, contain the number of seconds since 1900 and, in the lower 32\nbits, the fractional seconds. The resulting value can be used as an ntptime\nfor constructing SR RTCP packets.\nParameters:\nan UNIX timestamp in nanoseconds\nthe NTP time for unixtime.\n"});