fragment_downloaded_cb({"url":"rtplib/gstrtpbuffer.html#gst_rtp_buffer_new_allocate","fragment":"\n\tgst_rtp_buffer_new_allocate\n\n\n\tGstRtp.RTPBuffer.prototype.new_allocate\n\n\n\tGstRtp.RTPBuffer.new_allocate\n\nAllocate a new GstBuffer with enough data to hold an RTP packet with\ncsrc_count CSRCs, a payload length of payload_len and padding of pad_len.\nAll other RTP header fields will be set to 0/FALSE.\nParameters:\nthe length of the payload\nthe amount of padding\nthe number of CSRC entries\nA newly allocated buffer that can hold an RTP packet with given\nparameters.\nAllocate a new Gst.Buffer with enough data to hold an RTP packet with\ncsrc_count CSRCs, a payload length of payload_len and padding of pad_len.\nAll other RTP header fields will be set to 0/FALSE.\nParameters:\nthe length of the payload\nthe amount of padding\nthe number of CSRC entries\nA newly allocated buffer that can hold an RTP packet with given\nparameters.\nAllocate a new Gst.Buffer with enough data to hold an RTP packet with\ncsrc_count CSRCs, a payload length of payload_len and padding of pad_len.\nAll other RTP header fields will be set to 0/FALSE.\nParameters:\nthe length of the payload\nthe amount of padding\nthe number of CSRC entries\nA newly allocated buffer that can hold an RTP packet with given\nparameters.\n"});