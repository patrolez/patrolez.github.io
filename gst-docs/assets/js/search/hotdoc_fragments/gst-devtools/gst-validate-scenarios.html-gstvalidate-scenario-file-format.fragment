fragment_downloaded_cb({"url":"gst-devtools/gst-validate-scenarios.html#gstvalidate-scenario-file-format","fragment":"GstValidate Scenario File Format\nTo be able to define a list of actions to execute on a GstPipeline,\na dedicated file format is used. The name of the scenario is the name of\nthe file without its .scenario extension. The scenario file format is\nbased on the GstStructure serialized format which is a basic, type\naware, key value format. It takes the type of the action in the first\ncomma separated field, and then some key value pairs in the form\nparameter=value separated by commas. The values type will be guessed\nif not casted as in parameter=(string)value. You can force the type\nguessing system to actually know what type you want by giving it the\nright hints. For example to make sure the value is a double, you should\nadd a decimal (ie. 1 will be considered as a int, but 1.0 will be\nconsidered as a double and \"1.0\" will be considered as a string).\nFor example to represent a seek action, you should add the following\nline in the .scenario file.\nThe files to be used as scenario should have a .scenario extension and\nshould be placed either in\n$USER_DATA_DIR/gstreamer-1.0/validate/scenarios ,\n$GST_DATADIR/gstreamer-1.0/validate/scenarios or in a path defined in\nthe $GST_VALIDATE_SCENARIOS_PATH environment variable.\nEach line in the .scenario file represent an action (you can also use\n\\ at the end of a line write a single action on multiple lines).\nUsually you should start you scenario with a meta structure\nin order for the user to have more information about the\nscenario. It can contain a summary field which is a string explaining\nwhat the scenario does and then several info fields about the scenario.\nYou can find more info about it running:\nSo a basic scenario file that will seek three times and stop would look\nlike:\nMany action types have been implemented to help users define their own\nscenarios. For example there are:\nNOTE: This action actually posts a GST_MESSAGE_REQUEST_STATE\nmessage requesting GST_STATE_NULL on the bus and the application\nshould quit.\nTo get all the details about the registered action types, you can list\nthem all with:\nand to include transcoding specific action types:\nMany scenarios are distributed with gst-validate, you can list them\nall using:\nYou can find more information about the scenario implementation and\naction types in the GstValidateScenario section.\n\n\nseek: Seeks into the stream.\n\nplay: Set the pipeline state to GST_STATE_PLAYING.\n\npause: Set the pipeline state to GST_STATE_PAUSED.\n\nstop: Stop the execution of the pipeline.\n\n"});