fragment_downloaded_cb({"url":"gst-devtools/gst-validate-launcher.html#example-of-a-testsuite-implementation","fragment":"Example of a testsuite implementation\nTo implement a testsuite, you will have to write some simple python code\nthat defines the tests to be launched by gst-validate-launcher.\nIn this example, we will assume that you want to write a whole new\ntestsuite based on your own media samples and scenarios. The\nset of media files and the testsuite implementation file will be\nstructured as follow:\nYou should generate the .media_info files. To generate them for local\nfiles, you can use:\nFor remote streams, you should use\ngst-validate-media-check-1.0. For an http stream you can\nfor example do:\nThe gst-validate-launcher will use the generated .media_info and\n.stream_info files to validate the tests as those contain the\nnecessary information.\nThen you will need to write the testsuite.py file. You can for example\nimplement the following testsuite:\nOnce this is done, you've got a testsuite that will:\nRun playbin pipelines on file.mp4, file1.mkv and file2.ogv>\nexecuting play_15s and seek_backward scenarios\nTranscode file.mp4, file1.mkv and file2.ogv to h264 and\nmp3 in a MP4 container\nThe only thing to do to run the testsuite is:\n\n\nRun playbin pipelines on file.mp4, file1.mkv and file2.ogv>\nexecuting play_15s and seek_backward scenarios\n\n\nTranscode file.mp4, file1.mkv and file2.ogv to h264 and\nmp3 in a MP4 container\n\n\n"});