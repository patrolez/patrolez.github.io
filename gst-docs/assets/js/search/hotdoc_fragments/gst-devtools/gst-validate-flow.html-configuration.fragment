fragment_downloaded_cb({"url":"gst-devtools/gst-validate-flow.html#configuration","fragment":"Configuration\nIn order to use the plugin a validate configuration must be provided,\ncontaining a line starting by validateflow followed by a number of settings.\nEvery validateflow line creates a ValidateFlowOverride, which listens to a\ngiven pad. A test may have several validateflow lines, therefore having\nseveral overrides and listening to different pads with different settings.\n\n\npad: Required. Name of the pad that will be monitored.\n\nrecord-buffers: Default: false. Whether buffers will be logged. By default\nonly events are logged.\n\nbuffers-checksum: Default: 'none'. Define the type of checksums to be used\nvalid values are:\n\n\nnone: No checksum recorded\n\nas-id: Record checksum as 'ids' where the IDs are incremented on each new\nchecksum passed in\n\nmd5: md5 checksum\n\nsha1: sha1 checksum\n\nsha256: sha256 checksum\n\nsha512: sha512 checksum\n\nNote: for backward compatibility reasons, this can be passed as a\nboolean and it will default to 'sha1' if true, 'none' if false.\n\n\n\nignored-fields: Default: \"stream-start={ stream-id }\" (as they are often\nnon reproducible). Key with a serialized GstValueList(str) of fields to not\nrecord.\n\nlogged-fields: Default: NULL Key with a serialized GstValueList(str) of\nfields to record, eg. logged-event-fields=\"stream-start={flags}, caps={width, height, framerate}, buffer={pts}\". Overrides\nignored-event-fields for specified event types.\n\nignored-event-types: Default: { }. List of event type names to not record\n\nlogged-event-types: Default: NULL. List of event type names to not record,\nif noone provided, all events are logged, except the ones defined in the\nignored-event-types.\n\nexpectations-dir: Path to the directory where the expectations will be\nwritten if they don't exist, relative to the current working directory. By\ndefault the current working directory is used, but this setting is usually\nset automatically as part of the %(validateflow)s expansion to a correct\npath like ~/gst-validate/gst-integration-testsuites/flow-expectations/<test name>.\n\nactual-results-dir: Path to the directory where the events will be recorded.\nThe expectation file will be compared to this. By default the current working\ndirectory is used, but this setting is usually set automatically as part of\nthe %(validateflow)s expansion to the test log directory, i.e.\n~/gst-validate/logs/validate/launch_pipeline/<test name>.\n\ngenerate-expectations: Default: unset. When set to true the expectation\nfile will be written and no testing will be done and if set to false, the\nexpectation file will be required. If a validateflow config is used without\nspecifying any other parametters, the validateflow plugin will consider that\nall validateflow overrides will use that value.\n\n\n\nnone: No checksum recorded\n\nas-id: Record checksum as 'ids' where the IDs are incremented on each new\nchecksum passed in\n\nmd5: md5 checksum\n\nsha1: sha1 checksum\n\nsha256: sha256 checksum\n\nsha512: sha512 checksum\n\nNote: for backward compatibility reasons, this can be passed as a\nboolean and it will default to 'sha1' if true, 'none' if false.\n\n"});