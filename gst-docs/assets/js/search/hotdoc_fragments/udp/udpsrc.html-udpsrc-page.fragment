fragment_downloaded_cb({"url":"udp/udpsrc.html#udpsrc-page","fragment":"udpsrc\nudpsrc is a network source that reads UDP packets from the network.\nIt can be combined with RTP depayloaders to implement RTP streaming.\nThe udpsrc element supports automatic port allocation by setting the\nport property to 0. After setting the udpsrc to PAUSED, the\nallocated port can be obtained by reading the port property.\nudpsrc can read from multicast groups by setting the multicast-group\nproperty to the IP address of the multicast group.\nAlternatively one can provide a custom socket to udpsrc with the socket\nproperty, udpsrc will then not allocate a socket itself but use the provided\none.\nThe caps property is mainly used to give a type to the UDP packet\nso that they can be autoplugged in GStreamer pipelines. This is very useful\nfor RTP implementations where the contents of the UDP packets is transferred\nout-of-bounds using SDP or other means.\nThe buffer-size property is used to change the default kernel\nbuffersizes used for receiving packets. The buffer size may be increased for\nhigh-volume connections, or may be decreased to limit the possible backlog of\nincoming data. The system places an absolute limit on these values, on Linux,\nfor example, the default buffer size is typically 50K and can be increased to\nmaximally 100K.\nThe skip-first-bytes property is used to strip off an arbitrary\nnumber of bytes from the start of the raw udp packet and can be used to strip\noff proprietary header, for example.\nThe udpsrc is always a live source. It does however not provide a GstClock,\nthis is left for downstream elements such as an RTP session manager or demuxer\n(such as an MPEG demuxer). As with all live sources, the captured buffers\nwill have their timestamp set to the current running time of the pipeline.\nudpsrc implements a GstURIHandler interface that handles udp://host:port\ntype URIs.\nIf the timeout property is set to a value bigger than 0, udpsrc\nwill generate an element message named GstUDPSrcTimeout\nif no data was received in the given timeout.\nThe message's structure contains one field:\nThe message is typically used to detect that no UDP arrives in the receiver\nbecause it is blocked by a firewall.\nA custom file descriptor can be configured with the\nsocket property. The socket will be closed when setting\nthe element to READY by default. This behaviour can be overridden\nwith the close-socket property, in which case the\napplication is responsible for closing the file descriptor.\n\n\nguint64 timeout: the timeout in microseconds that expired when waiting for data.\n\n"});