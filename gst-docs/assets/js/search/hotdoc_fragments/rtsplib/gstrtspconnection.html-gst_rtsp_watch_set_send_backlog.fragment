fragment_downloaded_cb({"url":"rtsplib/gstrtspconnection.html#gst_rtsp_watch_set_send_backlog","fragment":"\n\tgst_rtsp_watch_set_send_backlog\n\n\n\tGstRtsp.RTSPWatch.prototype.set_send_backlog\n\n\n\tGstRtsp.RTSPWatch.set_send_backlog\n\nSet the maximum amount of bytes and messages that will be queued in watch.\nWhen the maximum amounts are exceeded, gst_rtsp_watch_write_data and\ngst_rtsp_watch_send_message will return GST_RTSP_ENOMEM.\nA value of 0 for bytes or messages means no limits.\nParameters:\na GstRTSPWatch\nmaximum bytes\nmaximum messages\n\n\tSince\t\t\t: 1.2\n\t\t\nSet the maximum amount of bytes and messages that will be queued in watch.\nWhen the maximum amounts are exceeded, GstRtsp.RTSPWatch.prototype.write_data and\nGstRtsp.RTSPWatch.prototype.send_message will return GstRtsp.RTSPResult.ENOMEM.\nA value of 0 for bytes or messages means no limits.\nParameters:\na GstRtsp.RTSPWatch\nmaximum bytes\nmaximum messages\n\n\tSince\t\t\t: 1.2\n\t\t\nSet the maximum amount of bytes and messages that will be queued in watch.\nWhen the maximum amounts are exceeded, GstRtsp.RTSPWatch.write_data and\nGstRtsp.RTSPWatch.send_message will return GstRtsp.RTSPResult.ENOMEM.\nA value of 0 for bytes or messages means no limits.\nParameters:\na GstRtsp.RTSPWatch\nmaximum bytes\nmaximum messages\n\n\tSince\t\t\t: 1.2\n\t\t\n"});