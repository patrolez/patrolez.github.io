fragment_downloaded_cb({"url":"camerabin/camerabin.html#customization","fragment":"Customization\nCamerabin provides various customization properties, allowing the user\nto set custom filters, selecting the viewfinder sink and formats to\nuse to encode the captured images/videos.\nGstEncodingProfiles are used to tell camerabin which formats it\nshould encode the captures to, those should be set to\nimage-profile and video-profile. Default is\njpeg for images, and ogg (theora and vorbis) for video. If a profile without\nan audio stream is set for video, audio will be disabled on recordings.\npreview-caps can be used to select which format preview\nimages should be posted on the GstBus. It has to be a raw video format.\nCamerabin has a camera-source property so applications can\nset their source that will provide buffers for the viewfinder and for\ncaptures. This camera source is a special type of source that has 3 pads.\nTo use a 'regular' source with a single pad you should use\nwrappercamerabinsrc, it will adapt your source and provide 3 pads.\nApplications can also select the desired viewfinder sink using\nviewfinder-sink, it is also possible to select the audio\nsource using audio-source.\nThe viewfinder resolution can be configured using\nviewfinder-caps, these GstCaps should be a subset of\nviewfinder-supported-caps.\nTo select the desired resolution for captures, camerabin provides\nimage-capture-caps and video-capture-caps,\nthese caps must be a subset of what the source can produce. The allowed\ncaps can be probed using image-capture-supported-caps and\nvideo-capture-supported-caps. In an analogous way, there\nare audio-capture-caps and\naudio-capture-supported-caps.\nCamerabin also allows applications to insert custom GstElement on any\nof its branches: video capture, image capture, viewfinder and preview.\nCheck video-filter, image-filter,\nviewfinder-filter and preview-filter.\n"});