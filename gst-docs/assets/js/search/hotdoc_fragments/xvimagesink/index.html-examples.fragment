fragment_downloaded_cb({"url":"xvimagesink/index.html#examples","fragment":"Examples\nA pipeline to test hardware scaling.\nWhen the test video signal appears you can resize the window and see that\nvideo frames are scaled through hardware (no extra CPU cost). By default\nthe image will never be distorted when scaled, instead black borders will\nbe added if needed.\nSame pipeline with force-aspect-ratio property set to\nfalse. You can observe that no borders are drawn around the scaled image\nnow and it will be distorted to fill the entire frame instead of respecting\nthe aspect ratio.\nA pipeline to test navigation events.\nWhile moving the mouse pointer over the test signal you will see a black box\nfollowing the mouse pointer. If you press the mouse button somewhere on the\nvideo and release it somewhere else a green box will appear where you pressed\nthe button and a red one where you released it. (The navigationtest element\nis part of gst-plugins-good.) You can observe here that even if the images\nare scaled through hardware the pointer coordinates are converted back to the\noriginal video frame geometry so that the box can be drawn to the correct\nposition. This also handles borders correctly, limiting coordinates to the\nimage area\nThis is faking a 4/3 pixel aspect ratio caps on video frames produced by\nvideotestsrc, in most cases the pixel aspect ratio of the display will be\n1/1. This means that XvImageSink will have to do the scaling to convert\nincoming frames to a size that will match the display pixel aspect ratio\n(from 320x240 to 320x180 in this case).\nDemonstrates how to use the colorbalance interface.\n"});