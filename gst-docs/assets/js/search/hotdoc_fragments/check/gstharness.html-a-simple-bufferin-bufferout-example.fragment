fragment_downloaded_cb({"url":"check/gstharness.html#a-simple-bufferin-bufferout-example","fragment":"A simple buffer-in buffer-out example\nAnother main feature of the GstHarness is its integration with the\nGstTestClock. Operating the GstTestClock can be very challenging, but\nGstHarness simplifies some of the most desired actions a lot, like wanting\nto manually advance the clock while at the same time releasing a GstClockID\nthat is waiting, with functions like gst_harness_crank_single_clock_wait.\nGstHarness also supports sub-harnesses, as a way of generating and\nvalidating data. A sub-harness is another GstHarness that is managed by\nthe \"parent\" harness, and can either be created by using the standard\ngst_harness_new type functions directly on the (GstHarness *)->src_harness,\nor using the much more convenient gst_harness_add_src or\ngst_harness_add_sink_parse. If you have a decoder-element you want to test,\n(like vp8dec) it can be very useful to add a src-harness with both a\nsrc-element (videotestsrc) and an encoder (vp8enc) to feed the decoder data\nwith different configurations, by simply doing:\nand then feeding it data with:\n"});