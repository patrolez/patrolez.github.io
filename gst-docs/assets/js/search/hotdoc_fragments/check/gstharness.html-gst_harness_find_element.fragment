fragment_downloaded_cb({"url":"check/gstharness.html#gst_harness_find_element","fragment":"\n\tgst_harness_find_element\n\n\n\tGstCheck.Harness.prototype.find_element\n\n\n\tGstCheck.Harness.find_element\n\nMost useful in conjunction with gst_harness_new_parse, this will scan the\nGstElement inside the GstHarness, and check if any of them matches\nelement_name. Typical usecase being that you need to access one of the\nharnessed elements for properties and/or signals.\nMT safe.\nParameters:\na GstHarness\na gchar with a GstElementFactory name\na GstElement or NULL if not found\n\n\tSince\t\t\t: 1.6\n\t\t\nMost useful in conjunction with gst_harness_new_parse, this will scan the\nGst.Element inside the GstCheck.Harness, and check if any of them matches\nelement_name. Typical usecase being that you need to access one of the\nharnessed elements for properties and/or signals.\nMT safe.\nParameters:\na GstCheck.Harness\na String with a Gst.ElementFactory name\na Gst.Element or null if not found\n\n\tSince\t\t\t: 1.6\n\t\t\nMost useful in conjunction with gst_harness_new_parse, this will scan the\nGst.Element inside the GstCheck.Harness, and check if any of them matches\nelement_name. Typical usecase being that you need to access one of the\nharnessed elements for properties and/or signals.\nMT safe.\nParameters:\na GstCheck.Harness\na int with a Gst.ElementFactory name\na Gst.Element or None if not found\n\n\tSince\t\t\t: 1.6\n\t\t\n"});