fragment_downloaded_cb({"url":"check/gsttestclock.html#gst_test_clock_crank","fragment":"\n\tgst_test_clock_crank\n\n\n\tGstCheck.TestClock.prototype.crank\n\n\n\tGstCheck.TestClock.crank\n\nA \"crank\" consists of three steps:\n1: Wait for a GstClockID to be registered with the GstTestClock.\n2: Advance the GstTestClock to the time the GstClockID is waiting, unless\nthe clock time is already passed the clock id (Since: 1.18).\n3: Release the GstClockID wait.\nA \"crank\" can be though of as the notion of\nmanually driving the clock forward to its next logical step.\nReturn: TRUE if the crank was successful, FALSE otherwise.\nMT safe.\nParameters:\nGstTestClock to crank\n\n\tSince\t\t\t: 1.8\n\t\t\nA \"crank\" consists of three steps:\n1: Wait for a Object to be registered with the GstCheck.TestClock.\n2: Advance the GstCheck.TestClock to the time the Object is waiting, unless\nthe clock time is already passed the clock id (Since: 1.18).\n3: Release the Object wait.\nA \"crank\" can be though of as the notion of\nmanually driving the clock forward to its next logical step.\nReturn: true if the crank was successful, false otherwise.\nMT safe.\nParameters:\nGstCheck.TestClock to crank\n\n\tSince\t\t\t: 1.8\n\t\t\nA \"crank\" consists of three steps:\n1: Wait for a object to be registered with the GstCheck.TestClock.\n2: Advance the GstCheck.TestClock to the time the object is waiting, unless\nthe clock time is already passed the clock id (Since: 1.18).\n3: Release the object wait.\nA \"crank\" can be though of as the notion of\nmanually driving the clock forward to its next logical step.\nReturn: True if the crank was successful, False otherwise.\nMT safe.\nParameters:\nGstCheck.TestClock to crank\n\n\tSince\t\t\t: 1.8\n\t\t\n"});