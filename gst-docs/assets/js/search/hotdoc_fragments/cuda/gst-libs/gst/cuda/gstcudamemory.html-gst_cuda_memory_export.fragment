fragment_downloaded_cb({"url":"cuda/gst-libs/gst/cuda/gstcudamemory.html#gst_cuda_memory_export","fragment":"\n\tgst_cuda_memory_export\n\n\n\tGstCuda.CudaMemory.prototype.export\n\n\n\tGstCuda.CudaMemory.export\n\nExports virtual memory handle to OS specific handle.\nOn Windows, os_handle should be pointer to HANDLE (i.e., void **), and\npointer to file descriptor (i.e., int *) on Linux.\nThe returned os_handle is owned by mem and therefore caller shouldn't\nclose the handle.\nParameters:\na GstCudaMemory\na pointer to OS handle\nTRUE if successful\n\n\tSince\t\t\t: 1.24\n\t\t\nExports virtual memory handle to OS specific handle.\nOn Windows, os_handle should be pointer to HANDLE (i.e., void **), and\npointer to file descriptor (i.e., int *) on Linux.\nThe returned os_handle is owned by mem and therefore caller shouldn't\nclose the handle.\nParameters:\na GstCuda.CudaMemory\nReturns a tuple made of:\ntrue if successful\ntrue if successful\n\n\tSince\t\t\t: 1.24\n\t\t\nExports virtual memory handle to OS specific handle.\nOn Windows, os_handle should be pointer to HANDLE (i.e., void **), and\npointer to file descriptor (i.e., int *) on Linux.\nThe returned os_handle is owned by mem and therefore caller shouldn't\nclose the handle.\nParameters:\na GstCuda.CudaMemory\nReturns a tuple made of:\nTrue if successful\nTrue if successful\n\n\tSince\t\t\t: 1.24\n\t\t\n"});