fragment_downloaded_cb({"url":"plugin-development/element-types/n-to-one.html#writing-a-nto1-element-or-muxer","fragment":"Writing a N-to-1 Element or Muxer\nN-to-1 elements have been previously mentioned and discussed in both\nRequest and Sometimes pads and in\nDifferent scheduling modes. The main noteworthy\nthing about N-to-1 elements is that each pad is push-based in its own\nthread, and the N-to-1 element synchronizes those streams by\nexpected-timestamp-based logic. This means it lets all streams wait\nexcept for the one that provides the earliest next-expected timestamp.\nWhen that stream has passed one buffer, the next\nearliest-expected-timestamp is calculated, and we start back where we\nwere, until all streams have reached EOS. There is a helper base class,\ncalled GstCollectPads, that will help you to do this.\nNote, however, that this helper class will only help you with grabbing a\nbuffer from each input and giving you the one with earliest timestamp.\nIf you need anything more difficult, such as \"don't-grab-a-new-buffer\nuntil a given timestamp\" or something like that, you'll need to do this\nyourself.\n"});