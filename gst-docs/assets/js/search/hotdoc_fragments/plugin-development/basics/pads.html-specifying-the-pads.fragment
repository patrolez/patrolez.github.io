fragment_downloaded_cb({"url":"plugin-development/basics/pads.html#specifying-the-pads","fragment":"Specifying the pads\nAs explained before, pads are the port through which data goes in and\nout of your element, and that makes them a very important item in the\nprocess of element creation. In the boilerplate code, we have seen how\nstatic pad templates take care of registering pad templates with the\nelement class. Here, we will see how to create actual elements, use an\n_event ()-function to configure for a particular format and how to register\nfunctions to let data flow through the element.\nIn the element _init () function, you create the pad from the pad\ntemplate that has been registered with the element class in the\n_class_init () function. After creating the pad, you have to set a\n_chain () function pointer that will receive and process the input\ndata on the sinkpad. You can optionally also set an _event () function\npointer and a _query () function pointer. Alternatively, pads can also\noperate in looping mode, which means that they can pull data themselves.\nMore on this topic later. After that, you have to register the pad with\nthe element. This happens like this:\n"});