fragment_downloaded_cb({"url":"plugin-development/basics/states.html#what-are-states","fragment":"What are states?\nA state describes whether the element instance is initialized, whether\nit is ready to transfer data and whether it is currently handling data.\nThere are four states defined in GStreamer:\nGST_STATE_NULL\nGST_STATE_READY\nGST_STATE_PAUSED\nGST_STATE_PLAYING\nwhich will from now on be referred to simply as “NULL”, “READY”,\n“PAUSED” and “PLAYING”.\nGST_STATE_NULL is the default state of an element. In this state, it\nhas not allocated any runtime resources, it has not loaded any runtime\nlibraries and it can obviously not handle data.\nGST_STATE_READY is the next state that an element can be in. In the\nREADY state, an element has all default resources (runtime-libraries,\nruntime-memory) allocated. However, it has not yet allocated or defined\nanything that is stream-specific. When going from NULL to READY state\n(GST_STATE_CHANGE_NULL_TO_READY), an element should allocate any\nnon-stream-specific resources and should load runtime-loadable libraries\n(if any). When going the other way around (from READY to NULL,\nGST_STATE_CHANGE_READY_TO_NULL), an element should unload these\nlibraries and free all allocated resources. Examples of such resources\nare hardware devices. Note that files are generally streams, and these\nshould thus be considered as stream-specific resources; therefore, they\nshould not be allocated in this state.\nGST_STATE_PAUSED is the state in which an element is ready to accept\nand handle data. For most elements this state is the same as PLAYING.\nThe only exception to this rule are sink elements. Sink elements only\naccept one single buffer of data and then block. At this point the\npipeline is 'prerolled' and ready to render data immediately.\nGST_STATE_PLAYING is the highest state that an element can be in. For\nmost elements this state is exactly the same as PAUSED, they accept and\nprocess events and buffers with data. Only sink elements need to\ndifferentiate between PAUSED and PLAYING state. In PLAYING state, sink\nelements actually render incoming data, e.g. output audio to a sound\ncard or render video pictures to an image sink.\n\n\nGST_STATE_NULL\n\n\nGST_STATE_READY\n\n\nGST_STATE_PAUSED\n\n\nGST_STATE_PLAYING\n\n\n"});