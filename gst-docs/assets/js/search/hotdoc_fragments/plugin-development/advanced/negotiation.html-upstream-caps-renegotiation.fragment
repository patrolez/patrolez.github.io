fragment_downloaded_cb({"url":"plugin-development/advanced/negotiation.html#upstream-caps-renegotiation","fragment":"Upstream caps (re)negotiation\nUpstream negotiation's primary use is to renegotiate (part of) an\nalready-negotiated pipeline to a new format. Some practical examples\ninclude to select a different video size because the size of the video\nwindow changed, and the video output itself is not capable of rescaling,\nor because the audio channel configuration changed.\nUpstream caps renegotiation is requested by sending a\nGST_EVENT_RECONFIGURE event upstream. The idea is that it will\ninstruct the upstream element to reconfigure its caps by doing a new\nquery for the allowed caps and then choosing a new caps. The element\nthat sends out the RECONFIGURE event would influence the selection of\nthe new caps by returning the new preferred caps from its\nGST_QUERY_CAPS query function. The RECONFIGURE event will set the\nGST_PAD_FLAG_NEED_RECONFIGURE on all pads that it travels over.\nIt is important to note here that different elements actually have\ndifferent responsibilities here:\nElements that want to propose a new format upstream need to first\ncheck if the new caps are acceptable upstream with an ACCEPT_CAPS\nquery. Then they would send a RECONFIGURE event and be prepared to\nanswer the CAPS query with the new preferred format. It should be\nnoted that when there is no upstream element that can (or wants) to\nrenegotiate, the element needs to deal with the currently configured\nformat.\nElements that operate in transform negotiation according to\nTransform negotiation pass the RECONFIGURE\nevent upstream. Because these elements simply do a fixed transform\nbased on the upstream caps, they need to send the event upstream so\nthat it can select a new format.\nElements that operate in fixed negotiation (Fixed\nnegotiation) drop the RECONFIGURE event. These\nelements can't reconfigure and their output caps don't depend on the\nupstream caps so the event can be dropped.\nElements that can be reconfigured on the source pad (source pads\nimplementing dynamic negotiation in Dynamic\nnegotiation) should check its\nNEED_RECONFIGURE flag with gst_pad_check_reconfigure () and it\nshould start renegotiation when the function returns TRUE.\n\n\nElements that want to propose a new format upstream need to first\ncheck if the new caps are acceptable upstream with an ACCEPT_CAPS\nquery. Then they would send a RECONFIGURE event and be prepared to\nanswer the CAPS query with the new preferred format. It should be\nnoted that when there is no upstream element that can (or wants) to\nrenegotiate, the element needs to deal with the currently configured\nformat.\n\n\nElements that operate in transform negotiation according to\nTransform negotiation pass the RECONFIGURE\nevent upstream. Because these elements simply do a fixed transform\nbased on the upstream caps, they need to send the event upstream so\nthat it can select a new format.\n\n\nElements that operate in fixed negotiation (Fixed\nnegotiation) drop the RECONFIGURE event. These\nelements can't reconfigure and their output caps don't depend on the\nupstream caps so the event can be dropped.\n\n\nElements that can be reconfigured on the source pad (source pads\nimplementing dynamic negotiation in Dynamic\nnegotiation) should check its\nNEED_RECONFIGURE flag with gst_pad_check_reconfigure () and it\nshould start renegotiation when the function returns TRUE.\n\n\n"});