fragment_downloaded_cb({"url":"plugin-development/advanced/allocation.html#gstbufferpool","fragment":"GstBufferPool\nThe GstBufferPool object provides a convenient base class for managing\nlists of reusable buffers. Essential for this object is that all the\nbuffers have the same properties such as size, padding, metadata and\nalignment.\nA GstBufferPool can be configured to manage a minimum and maximum\namount of buffers of a specific size. It can also be configured to use a\nspecific GstAllocator for the memory of the buffers. There is also\nsupport in the bufferpool to enable bufferpool specific options, such as\nadding GstMeta to the pool's buffers or enabling specific padding on the\nbuffers' memory.\nA GstBufferPool can be either inactivate or active. In the inactive state, you\ncan configure the pool. In the active state, you can't change the\nconfiguration anymore but you can acquire and release buffers from/to\nthe pool.\nIn the following sections we take a look at how you can use a GstBufferPool.\n"});