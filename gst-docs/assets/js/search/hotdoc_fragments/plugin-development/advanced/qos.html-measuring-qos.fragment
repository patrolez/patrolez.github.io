fragment_downloaded_cb({"url":"plugin-development/advanced/qos.html#measuring-qos","fragment":"Measuring QoS\nElements that synchronize buffers on the pipeline clock will usually\nmeasure the current QoS. They will also need to keep some statistics in\norder to generate the QOS event.\nFor each buffer that arrives in the sink, the element needs to calculate\nhow late or how early it was. This is called the jitter. Negative jitter\nvalues mean that the buffer was early, positive values mean that the\nbuffer was late. the jitter value gives an indication of how early/late\na buffer was.\nA synchronizing element will also need to calculate how much time\nelapsed between receiving two consecutive buffers. We call this the\nprocessing time because that is the amount of time it takes for the\nupstream element to produce/process the buffer. We can compare this\nprocessing time to the duration of the buffer to have a measurement of\nhow fast upstream can produce data, called the proportion. If, for\nexample, upstream can produce a buffer in 0.5 seconds of 1 second long,\nit is operating at twice the required speed. If, on the other hand, it\ntakes 2 seconds to produce a buffer with 1 seconds worth of data,\nupstream is producing buffers too slow and we won't be able to keep\nsynchronization. Usually, a running average is kept of the proportion.\nA synchronizing element also needs to measure its own performance in\norder to figure out if the performance problem is upstream of itself.\nThese measurements are used to construct a QOS event that is sent\nupstream. Note that a QoS event is sent for each buffer that arrives in\nthe sink.\n"});