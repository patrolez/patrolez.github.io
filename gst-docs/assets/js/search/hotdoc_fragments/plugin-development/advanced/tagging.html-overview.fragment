fragment_downloaded_cb({"url":"plugin-development/advanced/tagging.html#overview","fragment":"Overview\nTags are pieces of information stored in a stream that are not the\ncontent itself, but they rather describe the content. Most media\ncontainer formats support tagging in one way or another. Ogg uses\nVorbisComment for this, MP3 uses ID3, AVI and WAV use RIFF's INFO list\nchunk, etc. GStreamer provides a general way for elements to read tags\nfrom the stream and expose this to the user. The tags (at least the\nmetadata) will be part of the stream inside the pipeline. The\nconsequence of this is that transcoding of files from one format to\nanother will automatically preserve tags, as long as the input and\noutput format elements both support tagging.\nTags are separated in two categories in GStreamer, even though\napplications won't notice anything of this. The first are called\nmetadata, the second are called streaminfo. Metadata are tags that\ndescribe the non-technical parts of stream content. They can be changed\nwithout needing to re-encode the stream completely. Examples are\n“author”, “title” or “album”. The container format might still need\nto be re-written for the tags to fit in, though. Streaminfo, on the\nother hand, are tags that describe the stream contents technically. To\nchange them, the stream needs to be re-encoded. Examples are “codec” or\n“bitrate”. Note that some container formats (like ID3) store various\nstreaminfo tags as metadata in the file container, which means that they\ncan be changed so that they don't match the content in the file any\nmore. Still, they are called metadata because technically, they can be\nchanged without re-encoding the whole stream, even though that makes\nthem invalid. Files with such metadata tags will have the same tag\ntwice: once as metadata, once as streaminfo.\nThere is no special name for tag reading elements in GStreamer. There\nare specialised elements (e.g. id3demux) that do nothing besides tag\nreading, but any GStreamer element may extract tags while processing\ndata, and most decoders, demuxers and parsers do.\nA tag writer is called\nTagSetter. An element\nsupporting both can be used in a tag editor for quick tag changing\n(note: in-place tag editing is still poorly supported at the time of\nwriting and usually requires tag extraction/stripping and remuxing of\nthe stream with new tags).\n"});