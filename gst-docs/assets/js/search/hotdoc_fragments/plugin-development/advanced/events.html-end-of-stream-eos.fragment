fragment_downloaded_cb({"url":"plugin-development/advanced/events.html#end-of-stream-eos","fragment":"End of Stream (EOS)\nEnd-of-stream events are sent if the stream that an element sends out is\nfinished. An element receiving this event (from upstream, so it receives\nit on its sinkpad) will generally just process any buffered data (if\nthere is any) and then forward the event further downstream. The\ngst_pad_event_default () takes care of all this, so most elements do\nnot need to support this event. Exceptions are elements that explicitly\nneed to close a resource down on EOS, and N-to-1 elements. Note that the\nstream itself is not a resource that should be closed down on EOS!\nApplications might seek back to a point before EOS and continue playing\nagain.\nThe EOS event has no properties, which makes it one of the simplest\nevents in GStreamer. It is created using the gst_event_new_eos()\nfunction.\nIt is important to note that only elements driving the pipeline should\never send an EOS event. If your element is chain-based, it is not\ndriving the pipeline. Chain-based elements should just return\nGST_FLOW_EOS from their chain function at the end of the stream (or\nthe configured segment), the upstream element that is driving the\npipeline will then take care of sending the EOS event (or alternatively\npost a SEGMENT_DONE message on the bus depending on the mode of\noperation). If you are implementing your own source element, you also do\nnot need to ever manually send an EOS event, you should also just return\nGST_FLOW_EOS in your create or fill function (assuming your element\nderives from GstBaseSrc or GstPushSrc).\n"});