fragment_downloaded_cb({"url":"videorate/index.html#videorate-page","fragment":"videorate\nThis element takes an incoming stream of timestamped video frames.\nIt will produce a perfect stream that matches the source pad's framerate.\nThe correction is performed by dropping and duplicating frames, no fancy\nalgorithm is used to interpolate frames (yet).\nBy default the element will simply negotiate the same framerate on its\nsource and sink pad.\nThis operation is useful to link to elements that require a perfect stream.\nTypical examples are formats that do not store timestamps for video frames,\nbut only store a framerate, like Ogg and AVI.\nA conversion to a specific framerate can be forced by using filtered caps on\nthe source pad.\nThe properties in, out, duplicate\nand drop can be read to obtain information about number of\ninput frames, output frames, dropped frames (i.e. the number of unused input\nframes) and duplicated frames (i.e. the number of times an input frame was\nduplicated, beside being used normally).\nAn input stream that needs no adjustments will thus never have dropped or\nduplicated frames.\nWhen the silent property is set to FALSE, a GObject property\nnotification will be emitted whenever one of the duplicate or\ndrop values changes.\nThis can potentially cause performance degradation.\nNote that property notification will happen from the streaming thread, so\napplications should be prepared for this.\nThe property rate allows the modification of video speed by a\ncertain factor. It must not be confused with framerate. Think of rate as\nspeed and framerate as flow.\n"});