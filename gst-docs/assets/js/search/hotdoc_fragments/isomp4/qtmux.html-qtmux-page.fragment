fragment_downloaded_cb({"url":"isomp4/qtmux.html#qtmux-page","fragment":"qtmux\nThis element merges streams (audio and video) into QuickTime(.mov) files.\nThe following background intends to explain why various similar muxers\nare present in this plugin.\nThe QuickTime file format specification\nserved as basis for the MP4 file format specification (mp4mux), and as such\nthe QuickTime file structure is nearly identical to the so-called ISO Base\nMedia file format defined in ISO 14496-12 (except for some media specific\nparts).\nIn turn, the latter ISO Base Media format was further specialized as a\nMotion JPEG-2000 file format in ISO 15444-3 (mj2mux)\nand in various 3GPP(2) specs (gppmux).\nThe fragmented file features defined (only) in ISO Base Media are used by\nISMV files making up (a.o.) Smooth Streaming (ismlmux).\nA few properties (#GstBaseQTMux:movie-timescale, trak-timescale,\ntrak-timescale) allow adjusting some technical parameters,\nwhich might be useful in (rare) cases to resolve compatibility issues in\nsome situations.\nSome other properties influence the result more fundamentally.\nA typical mov/mp4 file's metadata (aka moov) is located at the end of the\nfile, somewhat contrary to this usually being called \"the header\".\nHowever, a faststart file will (with some effort) arrange this to\nbe located near start of the file, which then allows it e.g. to be played\nwhile downloading. Alternatively, rather than having one chunk of metadata at\nstart (or end), there can be some metadata at start and most of the other\ndata can be spread out into fragments of fragment-duration.\nIf such fragmented layout is intended for streaming purposes, then\nstreamable allows foregoing to add index metadata (at the end of\nfile).\nWhen the maximum duration to be recorded can be known in advance, qtmux\nalso supports a 'Robust Muxing' mode. In robust muxing mode,  space for the\nheaders are reserved at the start of muxing, and rewritten at a configurable\ninterval, so that the output file is always playable, even if the recording\nis interrupted uncleanly by a crash. Robust muxing mode requires a seekable\noutput, such as filesink, because it needs to rewrite the start of the file.\nTo enable robust muxing mode, set the reserved-moov-update-period\nand reserved-max-duration property. Also present is the\nreserved-bytes-per-sec property, which can be increased if\nfor some reason the default is not large enough and the initial reserved\nspace for headers is too small. Applications can monitor the\nreserved-duration-remaining property to see how close to full\nthe reserved space is becoming.\nApplications that wish to be able to use/edit a file while it is being\nwritten to by live content, can use the \"Robust Prefill Muxing\" mode. That\nmode is a variant of the \"Robust Muxing\" mode in that it will pre-allocate a\ncompletely valid header from the start for all tracks (i.e. it appears as\nthough the file is \"reserved-max-duration\" long with all samples\npresent). This mode can be enabled by setting the\nreserved-moov-update-period and reserved-prefill\nproperties. Note that this mode is only possible with input streams that have\na fixed sample size (such as raw audio and Prores Video) and that don't\nhave reordered samples.\n"});