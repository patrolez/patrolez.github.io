fragment_downloaded_cb({"url":"tutorials/basic/concepts.html#element-creation","fragment":"Element creation\nWe will skip GStreamer initialization, since it is the same as the\nprevious tutorial:\nAs seen in this code, new elements can be created\nwith gst_element_factory_make(). The first parameter is the type of\nelement to create (Basic tutorial 14: Handy\nelements shows a\nfew common types, and Basic tutorial 10: GStreamer\ntools shows how to\nobtain the list of all available types). The second parameter is the\nname we want to give to this particular instance. Naming your elements\nis useful to retrieve them later if you didn't keep a pointer (and for\nmore meaningful debug output). If you pass NULL for the name, however,\nGStreamer will provide a unique name for you.\nFor this tutorial we create two elements: a videotestsrc and\nan autovideosink. There are no filter elements. Hence, the pipeline would\nlook like the following:\n\nFigure 2. Pipeline built in this tutorial\nvideotestsrc is a source element (it produces data), which creates a\ntest video pattern. This element is useful for debugging purposes (and\ntutorials) and is not usually found in real applications.\nautovideosink is a sink element (it consumes data), which displays on\na window the images it receives. There exist several video sinks,\ndepending on the operating system, with a varying range of capabilities.\nautovideosink automatically selects and instantiates the best one, so\nyou do not have to worry with the details, and your code is more\nplatform-independent.\n"});