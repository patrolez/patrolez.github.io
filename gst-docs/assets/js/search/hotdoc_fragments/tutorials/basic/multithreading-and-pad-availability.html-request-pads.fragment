fragment_downloaded_cb({"url":"tutorials/basic/multithreading-and-pad-availability.html#request-pads","fragment":"Request pads\nIn Basic tutorial 3: Dynamic\npipelines we saw\nan element (uridecodebin) which had no pads to begin with, and they\nappeared as data started to flow and the element learned about the\nmedia. These are called Sometimes Pads, and contrast with the\nregular pads which are always available and are called Always Pads.\nThe third kind of pad is the Request Pad, which is created on\ndemand. The classical example is the tee element, which has one sink\npad and no initial source pads: they need to be requested and then\ntee adds them. In this way, an input stream can be replicated any\nnumber of times. The disadvantage is that linking elements with Request\nPads is not as automatic, as linking Always Pads, as the walkthrough for\nthis example will show.\nAlso, to request (or release) pads in the PLAYING or PAUSED states, you\nneed to take additional cautions (Pad blocking) which are not described\nin this tutorial. It is safe to request (or release) pads in the NULL or\nREADY states, though.\nWithout further delay, let's see the code.\n"});