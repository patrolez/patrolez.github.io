fragment_downloaded_cb({"url":"tutorials/basic/dynamic-pipelines.html#signals","fragment":"Signals\nGSignals are a crucial point in GStreamer. They allow you to be\nnotified (by means of a callback) when something interesting has\nhappened. Signals are identified by a name, and each GObject has its\nown signals.\nIn this line, we are attaching to the “pad-added” signal of our source\n(an uridecodebin element). To do so, we use g_signal_connect() and\nprovide the callback function to be used (pad_added_handler) and a\ndata pointer. GStreamer does nothing with this data pointer, it just\nforwards it to the callback so we can share information with it. In this\ncase, we pass a pointer to the CustomData structure we built specially\nfor this purpose.\nThe signals that a GstElement generates can be found in its\ndocumentation or using the gst-inspect-1.0 tool as described in Basic\ntutorial 10: GStreamer\ntools.\nWe are now ready to go! Just set the pipeline to the PLAYING state and\nstart listening to the bus for interesting messages (like ERROR or EOS),\njust like in the previous tutorials.\n"});