fragment_downloaded_cb({"url":"tutorials/basic/dynamic-pipelines.html#gstreamer-states","fragment":"GStreamer States\nWe already talked a bit about states when we said that playback does not\nstart until you bring the pipeline to the PLAYING state. We will\nintroduce here the rest of states and their meaning. There are 4 states\nin GStreamer:\nYou can only move between adjacent ones, this is, you can't go from NULL\nto PLAYING, you have to go through the intermediate READY and PAUSED\nstates. If you set the pipeline to PLAYING, though, GStreamer will make\nthe intermediate transitions for you.\nWe added this piece of code that listens to bus messages regarding state\nchanges and prints them on screen to help you understand the\ntransitions. Every element puts messages on the bus regarding its\ncurrent state, so we filter them out and only listen to messages coming\nfrom the pipeline.\nMost applications only need to worry about going to PLAYING to start\nplayback, then to PAUSED to perform a pause, and then back to NULL at\nprogram exit to free all resources.\n\n\n\n State\n Description\n\n\n\n\n NULL\n\n the NULL state or initial state of an element.\n\n\n READY\n\n the element is ready to go to PAUSED.\n\n\n PAUSED\n\n the element is PAUSED, it is ready to accept and process data. Sink elements however only accept one buffer and then block.\n\n\n PLAYING\n\n the element is PLAYING, the clock is running and the data is flowing.\n\n\n\n"});