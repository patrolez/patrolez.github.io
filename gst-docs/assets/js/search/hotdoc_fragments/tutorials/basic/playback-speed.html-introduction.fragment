fragment_downloaded_cb({"url":"tutorials/basic/playback-speed.html#introduction","fragment":"Introduction\nFast-forward is the technique that plays a media at a speed higher than\nits normal (intended) speed; whereas slow-motion uses a speed lower than\nthe intended one. Reverse playback does the same thing but backwards,\nfrom the end of the stream to the beginning.\nAll these techniques do is change the playback rate, which is a variable\nequal to 1.0 for normal playback, greater than 1.0 (in absolute value)\nfor fast modes, lower than 1.0 (in absolute value) for slow modes,\npositive for forward playback and negative for reverse playback.\nGStreamer provides two mechanisms to change the playback rate: Step\nEvents and Seek Events. Step Events allow skipping a given amount of\nmedia besides changing the subsequent playback rate (only to positive\nvalues). Seek Events, additionally, allow jumping to any position in the\nstream and set positive and negative playback rates.\nIn Basic tutorial 4: Time management seek\nevents have already been shown, using a helper function to hide their\ncomplexity. This tutorial explains a bit more how to use these events.\nStep Events are a more convenient way of changing the playback rate,\ndue to the reduced number of parameters needed to create them;\nhowever, they have some downsides, so Seek Events are used in this\ntutorial instead. Step events only affect the sink (at the end of the\npipeline), so they will only work if the rest of the pipeline can\nsupport going at a different speed, Seek events go all the way through\nthe pipeline so every element can react to them. The upside of Step\nevents is that they are much faster to act. Step events are also\nunable to change the playback direction.\nTo use these events, they are created and then passed onto the pipeline,\nwhere they propagate upstream until they reach an element that can\nhandle them. If an event is passed onto a bin element like playbin,\nit will simply feed the event to all its sinks, which will result in\nmultiple seeks being performed. The common approach is to retrieve one\nof playbinâ€™s sinks through the video-sink or\naudio-sink properties and feed the event directly into the sink.\nFrame stepping is a technique that allows playing a video frame by\nframe. It is implemented by pausing the pipeline, and then sending Step\nEvents to skip one frame each time.\n"});