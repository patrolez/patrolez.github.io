fragment_downloaded_cb({"url":"tutorials/basic/debugging-tools.html#the-debug-log","fragment":"The debug log\nGStreamer and its plugins are full of debug traces, this is, places in\nthe code where a particularly interesting piece of information is\nprinted to the console, along with time stamping, process, category,\nsource code file, function and element information.\nThe debug output is controlled with the GST_DEBUG environment\nvariable. Hereâ€™s an example with GST_DEBUG=2:\nAs you can see, this is quite a bit of information. In fact, the\nGStreamer debug log is so verbose, that when fully enabled it can render\napplications unresponsive (due to the console scrolling) or fill up\nmegabytes of text files (when redirected to a file). For this reason,\nthe logs are categorized, and you seldom need to enable all categories\nat once.\nThe first category is the Debug Level, which is a number specifying the\namount of desired output:\nTo enable debug output, set the GST_DEBUG environment variable to the\ndesired debug level. All levels below that will also be shown (i.e., if\nyou set GST_DEBUG=2, you will get both ERROR and\nWARNING messages).\nFurthermore, each plugin or part of the GStreamer defines its own\ncategory, so you can specify a debug level for each individual category.\nFor example, GST_DEBUG=2,audiotestsrc:6, will use Debug Level 6 for\nthe audiotestsrc element, and 2 for all the others.\nThe GST_DEBUG environment variable, then, is a comma-separated list of\ncategory:level pairs, with an optional level at the beginning,\nrepresenting the default debug level for all categories.\nThe '*' wildcard is also available. For example\nGST_DEBUG=2,audio*:6 will use Debug Level 6 for all categories\nstarting with the word audio. GST_DEBUG=*:2 is equivalent to\nGST_DEBUG=2.\nUse gst-launch-1.0 --gst-debug-help to obtain the list of all\nregistered categories. Bear in mind that each plugin registers its own\ncategories, so, when installing or removing plugins, this list can\nchange.\nUse GST_DEBUG when the error information posted on the GStreamer bus\ndoes not help you nail down a problem. It is common practice to redirect\nthe output log to a file, and then examine it later, searching for\nspecific messages.\nGStreamer allows for custom debugging information handlers but when\nusing the default one, the content of each line in the debug output\nlooks like:\nAnd this is how the information formatted:\n"});