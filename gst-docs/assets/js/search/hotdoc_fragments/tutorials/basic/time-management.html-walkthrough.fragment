fragment_downloaded_cb({"url":"tutorials/basic/time-management.html#walkthrough","fragment":"Walkthrough\nWe start by defining a structure to contain all our information, so we\ncan pass it around to other functions. In particular, in this example we\nmove the message handling code to its own function\nhandle_message because it is growing a bit too big.\nWe then build a pipeline composed of a single element, a\nplaybin, which we already saw in Basic tutorial 1: Hello\nworld!. However,\nplaybin is in itself a pipeline, and in this case it is the only\nelement in the pipeline, so we directly use the playbin element. We\nwill skip the details: the URI of the clip is given to playbin via\nthe URI property and the pipeline is set to the playing state.\nPreviously we did not provide a timeout to\ngst_bus_timed_pop_filtered(), meaning that it didn't return until a\nmessage was received. Now we use a timeout of 100 milliseconds, so, if\nno message is received during one tenth of a second, the function will return\nNULL. We are going to use this logic to update our “UI”.\nNote that the desired timeout must be specified as a GstClockTime, hence,\nin nanoseconds. Numbers expressing different time units then, should be\nmultiplied by macros like GST_SECOND or GST_MSECOND. This also makes\nyour code more readable.\nIf we got a message, we process it in the handle_message function\n(next subsection), otherwise:\n"});