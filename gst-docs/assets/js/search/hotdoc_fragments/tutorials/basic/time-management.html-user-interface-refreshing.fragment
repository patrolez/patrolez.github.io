fragment_downloaded_cb({"url":"tutorials/basic/time-management.html#user-interface-refreshing","fragment":"User interface refreshing\nIf the pipeline is in PLAYING state, it is time to refresh the screen.\nWe don't want to do anything if we are not in PLAYING state, because\nmost queries would fail.\nWe get here approximately 10 times per second, a good enough refresh\nrate for our UI. We are going to print on screen the current media\nposition, which we can learn by querying the pipeline. This involves a\nfew steps that will be shown in the next subsection, but, since position\nand duration are common enough queries, GstElement offers easier,\nready-made alternatives:\ngst_element_query_position() hides the management of the query object\nand directly provides us with the result.\nNow is a good moment to know the length of the stream, with\nanother GstElement helper function: gst_element_query_duration()\nNote the usage of the GST_TIME_FORMAT and GST_TIME_ARGS macros to\nprovide a user-friendly representation of GStreamer times.\nNow we perform the seek, “simply” by\ncalling gst_element_seek_simple() on the pipeline. A lot of the\nintricacies of seeking are hidden in this method, which is a good\nthing!\nLet's review the parameters:\nGST_FORMAT_TIME indicates that we are specifying the destination in\ntime units. Other seek-formats use different units.\nThen come the GstSeekFlags, let's review the most common:\nGST_SEEK_FLAG_FLUSH: This discards all data currently in the pipeline\nbefore doing the seek. Might pause a bit while the pipeline is refilled\nand the new data starts to show up, but greatly increases the\n“responsiveness” of the application. If this flag is not provided,\n“stale” data might be shown for a while until the new position appears\nat the end of the pipeline.\nGST_SEEK_FLAG_KEY_UNIT: With most encoded video streams, seeking to\narbitrary positions is not possible but only to certain frames called Key Frames. When this\nflag is used, the seek will actually move to the closest key frame and\nstart producing data straight away. If this flag is not used, the\npipeline will move internally to the closest key frame (it has no other\nalternative) but data will not be shown until it reaches the requested\nposition. This last alternative is more accurate, but might take longer.\nGST_SEEK_FLAG_ACCURATE: Some media clips do not provide enough\nindexing information, meaning that seeking to arbitrary positions is\ntime-consuming. In these cases, GStreamer usually estimates the position\nto seek to, and usually works just fine. If this precision is not good\nenough for your case (you see seeks not going to the exact time you\nasked for), then provide this flag. Be warned that it might take longer\nto calculate the seeking position (very long, on some files).\nFinally, we provide the position to seek to. Since we asked\nfor GST_FORMAT_TIME, the value must be in nanoseconds so we express\nthe time in seconds, for simplicity, and then multiply by GST_SECOND.\n"});