fragment_downloaded_cb({"url":"tutorials/android/media-player.html#supporting-arbitrary-media-uris1","fragment":"Supporting arbitrary media URIs\nJava code will call gst_native_set_uri() whenever it wants to change\nthe playing URI (in this tutorial the URI never changes, but it could):\nWe first need to convert between the\nUTF16 encoding used by Java and\nthe Modified\nUTF8 used by\nGStreamer with\nGetStringUTFChars()\nand\nReleaseStringUTFChars().\nplaybin will only care about URI changes in the READY to PAUSED state\nchange, because the new URI might need a completely different playback\npipeline (think about switching from a local Matroska file to a remote\nOGG file: this would require, at least, different source and demuxing\nelements). Thus, before passing the new URI to playbin we set its\nstate to READY (if we were in PAUSED or PLAYING).\nplaybinâ€™s URI is exposed as a common GObject property, so we simply\nset it with g_object_set().\nWe then reset the clip duration, so it is re-queried later, and bring\nthe pipeline to the playing state it had before. In this last step, we\nalso take note of whether the new URI corresponds to a live source or\nnot. Live sources must not use buffering (otherwise latency is\nintroduced which is inacceptable for them), so we keep track of this\ninformation in the is_live variable.\n"});