fragment_downloaded_cb({"url":"tutorials/ios/a-basic-media-player.html#the-video-view-controller","fragment":"The Video View Controller\nThe ViewController class manages the UI, instantiates\nthe GStreamerBackend and also performs some UI-related tasks on its\nbehalf:\nDue to the extension of this code,\nthis view is collapsed by default. Click here to expandâ€¦\nVideoViewController.m\nSupporting arbitrary media URIs\nThe GStreamerBackend  provides the setUri() method so we can\nindicate the URI of the media to play. Since playbin will be taking\ncare of retrieving the media, we can use local or remote URIs\nindistinctly (file:// or http://, for example). From the UI code,\nthough, we want to keep track of whether the file is local or remote,\nbecause we will not offer the same functionalities. We keep track of\nthis in the is_local_media variable, which is set when the URI is set,\nin the gstreamerInitialized method:\nReporting media size\nEvery time the size of the media changes (which could happen mid-stream,\nfor some kind of streams), or when it is first detected,\nGStreamerBackend  calls our mediaSizeChanged() callback:\nHere we simply store the new size and ask the layout to be recalculated.\nAs we have already seen in iOS tutorial 2: A running pipeline,\nmethods which change the UI must be called from the main thread, and we\nare now in a callback from some GStreamer internal thread. Hence, the\nusage\nof dispatch_async().\n"});