fragment_downloaded_cb({"url":"tutorials/playback/short-cutting-the-pipeline.html#a-playbin-waveform-generator","fragment":"A playbin waveform generator\nCopy this code into a text file named playback-tutorial-3.c.\nplayback-tutorial-3.c\n![information] If you need help to compile this code, refer to the\nBuilding the tutorials section for your platform: [Mac] or\n[Windows] or use this specific command on Linux:\ngcc playback-tutorial-3.c -o playback-tutorial-3 `pkg-config --cflags --libs gstreamer-1.0 gstreamer-audio-1.0`\nIf you need help to run this code, refer to the Running the\ntutorials section for your platform: [Mac OS X], [Windows][1], for\n[iOS] or for [android].\nThis tutorial opens a window and displays a movie, with accompanying\naudio. The media is fetched from the Internet, so the window might\ntake a few seconds to appear, depending on your connection\nspeed. In the console window, you should see a message indicating\nwhere the media is being stored, and a text graph representing the\ndownloaded portions and the current position. A buffering message\nappears whenever buffering is required, which might never happen is\nyour network connection is fast enough\nRequired libraries: gstreamer-1.0 gstreamer-audio-1.0\nTo use an appsrc as the source for the pipeline, simply instantiate a\nplaybin and set its URI to appsrc://\nplaybin will create an internal appsrc element and fire the\nsource-setup signal to allow the application to configure\nit:\nIn particular, it is important to set the caps property of appsrc,\nsince, once the signal handler returns, playbin will instantiate the\nnext element in the pipeline according to these\ncaps:\nThe configuration of the appsrc is exactly the same as in\nBasic tutorial 8: Short-cutting the pipeline:\nthe caps are set to audio/x-raw, and two callbacks are registered,\nso the element can tell the application when it needs to start and stop\npushing data. See Basic tutorial 8: Short-cutting the pipeline\nfor more details.\nFrom this point onwards, playbin takes care of the rest of the\npipeline, and the application only needs to worry about generating more\ndata when told so.\nTo learn how data can be extracted from playbin using the\nappsink element, see Playback tutorial 7: Custom playbin sinks.\n"});