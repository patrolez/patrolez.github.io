fragment_downloaded_cb({"url":"tutorials/playback/digital-audio-pass-through.html#inner-workings-of-gstreamer-audio-sinks","fragment":"Inner workings of GStreamer audio sinks\nFirst off, digital audio output must be enabled at the system level. The\nmethod to achieve this depend on the operating system, but it generally\ninvolves going to the audio control panel and activating a checkbox\nreading “Digital Audio Output” or similar.\nThe main GStreamer audio sinks for each platform, Pulse Audio\n(pulsesink) for Linux, osxaudiosink for OS X and Direct Sound\n(directsoundsink) for Windows, detect when digital audio output is\navailable and change their input caps accordingly to accept encoded\ndata. For example, these elements typically accept audio/x-raw data:\nwhen digital audio output is enabled in the system, they may also\naccept audio/mpeg, audio/x-ac3, audio/x-eac3 or audio/x-dts.\nThen, when playbin builds the decoding pipeline, it realizes that the\naudio sink can be directly connected to the encoded data (typically\ncoming out of a demuxer), so there is no need for a decoder. This\nprocess is automatic and does not need any action from the application.\nOn Linux, there exist other audio sinks, like Alsa (alsasink) which\nwork differently (a “digital device” needs to be manually selected\nthrough the device property of the sink). Pulse Audio, though, is the\ncommonly preferred audio sink on Linux.\n"});