fragment_downloaded_cb({"url":"gst-rtsp-server/rtsp-media.html#gst_rtsp_media_lock","fragment":"\n\tgst_rtsp_media_lock\n\n\n\tGstRtspServer.RTSPMedia.prototype.lock\n\n\n\tGstRtspServer.RTSPMedia.lock\n\nLock the entire media. This is needed by callers such as rtsp_client to\nprotect the media when it is shared by many clients.\nThe lock prevents that concurrent clients alters the shared media,\nwhile one client already is working with it.\nTypically the lock is taken in external RTSP API calls that uses shared media\nsuch as DESCRIBE, SETUP, ANNOUNCE, TEARDOWN, PLAY, PAUSE.\nAs best practice take the lock as soon as the function get hold of a shared\nmedia object. Release the lock right before the function returns.\nParameters:\na GstRTSPMedia\n\n\tSince\t\t\t: 1.18\n\t\t\nLock the entire media. This is needed by callers such as rtsp_client to\nprotect the media when it is shared by many clients.\nThe lock prevents that concurrent clients alters the shared media,\nwhile one client already is working with it.\nTypically the lock is taken in external RTSP API calls that uses shared media\nsuch as DESCRIBE, SETUP, ANNOUNCE, TEARDOWN, PLAY, PAUSE.\nAs best practice take the lock as soon as the function get hold of a shared\nmedia object. Release the lock right before the function returns.\nParameters:\na GstRtspServer.RTSPMedia\n\n\tSince\t\t\t: 1.18\n\t\t\nLock the entire media. This is needed by callers such as rtsp_client to\nprotect the media when it is shared by many clients.\nThe lock prevents that concurrent clients alters the shared media,\nwhile one client already is working with it.\nTypically the lock is taken in external RTSP API calls that uses shared media\nsuch as DESCRIBE, SETUP, ANNOUNCE, TEARDOWN, PLAY, PAUSE.\nAs best practice take the lock as soon as the function get hold of a shared\nmedia object. Release the lock right before the function returns.\nParameters:\na GstRtspServer.RTSPMedia\n\n\tSince\t\t\t: 1.18\n\t\t\n"});