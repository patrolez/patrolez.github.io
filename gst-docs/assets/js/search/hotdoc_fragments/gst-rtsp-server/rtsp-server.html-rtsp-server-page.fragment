fragment_downloaded_cb({"url":"gst-rtsp-server/rtsp-server.html#rtsp-server-page","fragment":"rtsp server\nThe server object is the object listening for connections on a port and\ncreating GstRTSPClient objects to handle those connections.\nThe server will listen on the address set with gst_rtsp_server_set_address\nand the port or service configured with gst_rtsp_server_set_service.\nUse gst_rtsp_server_set_backlog to configure the amount of pending requests\nthat the server will keep. By default the server listens on the current\nnetwork (0.0.0.0) and port 8554.\nThe server will require an SSL connection when a TLS certificate has been\nset in the auth object with gst_rtsp_auth_set_tls_certificate.\nTo start the server, use gst_rtsp_server_attach to attach it to a\nGMainContext. For more control, gst_rtsp_server_create_source and\ngst_rtsp_server_create_socket can be used to get a GSource and GSocket\nrespectively.\ngst_rtsp_server_transfer_connection can be used to transfer an existing\nsocket to the RTSP server, for example from an HTTP server.\nOnce the server socket is attached to a mainloop, it will start accepting\nconnections. When a new connection is received, a new GstRTSPClient object\nis created to handle the connection. The new client will be configured with\nthe server GstRTSPAuth, GstRTSPMountPoints, GstRTSPSessionPool and\nGstRTSPThreadPool.\nThe server uses the configured GstRTSPThreadPool object to handle the\nremainder of the communication with this client.\nLast reviewed on 2013-07-11 (1.0.0)\n"});