fragment_downloaded_cb({"url":"gst-rtsp-server/rtsp-media.html#rtsp-media-page","fragment":"rtsp media\na GstRTSPMedia contains the complete GStreamer pipeline to manage the\nstreaming to the clients. The actual data transfer is done by the\nGstRTSPStream objects that are created and exposed by the GstRTSPMedia.\nThe GstRTSPMedia is usually created from a GstRTSPMediaFactory when the\nclient does a DESCRIBE or SETUP of a resource.\nA media is created with gst_rtsp_media_new that takes the element that will\nprovide the streaming elements. For each of the streams, a new GstRTSPStream\nobject needs to be made with the gst_rtsp_media_create_stream which takes\nthe payloader element and the source pad that produces the RTP stream.\nThe pipeline of the media is set to PAUSED with gst_rtsp_media_prepare. The\nprepare method will add rtpbin and sinks and sources to send and receive RTP\nand RTCP packets from the clients. Each stream srcpad is connected to an\ninput into the internal rtpbin.\nIt is also possible to dynamically create GstRTSPStream objects during the\nprepare phase. With gst_rtsp_media_get_status you can check the status of\nthe prepare phase.\nAfter the media is prepared, it is ready for streaming. It will usually be\nmanaged in a session with gst_rtsp_session_manage_media. See\nGstRTSPSession and GstRTSPSessionMedia.\nThe state of the media can be controlled with gst_rtsp_media_set_state ().\nSeeking can be done with gst_rtsp_media_seek, or gst_rtsp_media_seek_full\nor gst_rtsp_media_seek_trickmode for finer control of the seek.\nWith gst_rtsp_media_unprepare the pipeline is stopped and shut down. When\ngst_rtsp_media_set_eos_shutdown an EOS will be sent to the pipeline to\ncleanly shut down.\nWith gst_rtsp_media_set_shared, the media can be shared between multiple\nclients. With gst_rtsp_media_set_reusable you can control if the pipeline\ncan be prepared again after an unprepare.\nLast reviewed on 2013-07-11 (1.0.0)\n"});