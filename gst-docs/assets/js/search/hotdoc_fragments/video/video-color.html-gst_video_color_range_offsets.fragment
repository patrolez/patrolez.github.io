fragment_downloaded_cb({"url":"video/video-color.html#gst_video_color_range_offsets","fragment":"\n\tgst_video_color_range_offsets\n\n\n\tGstVideo.prototype.video_color_range_offsets\n\n\n\tGstVideo.video_color_range_offsets\n\nCompute the offset and scale values for each component of info. For each\ncomponent, (c[i] - offset[i]) / scale[i] will scale the component c[i] to the\nrange [0.0 .. 1.0].\nThe reverse operation (c[i] * scale[i]) + offset[i] can be used to convert\nthe component values in range [0.0 .. 1.0] back to their representation in\ninfo and range.\nParameters:\na GstVideoColorRange\na GstVideoFormatInfo\noutput offsets\noutput scale\nCompute the offset and scale values for each component of info. For each\ncomponent, (c[i] - offset[i]) / scale[i] will scale the component c[i] to the\nrange [0.0 .. 1.0].\nThe reverse operation (c[i] * scale[i]) + offset[i] can be used to convert\nthe component values in range [0.0 .. 1.0] back to their representation in\ninfo and range.\nParameters:\na GstVideo.VideoColorRange\na GstVideo.VideoFormatInfo\nCompute the offset and scale values for each component of info. For each\ncomponent, (c[i] - offset[i]) / scale[i] will scale the component c[i] to the\nrange [0.0 .. 1.0].\nThe reverse operation (c[i] * scale[i]) + offset[i] can be used to convert\nthe component values in range [0.0 .. 1.0] back to their representation in\ninfo and range.\nParameters:\na GstVideo.VideoColorRange\na GstVideo.VideoFormatInfo\n"});