fragment_downloaded_cb({"url":"video/gstvideoaggregator.html#GstVideoAggregatorClass::aggregate_frames","fragment":"\n\taggregate_frames\n\n\n\tvfunc_aggregate_frames\n\n\n\tdo_aggregate_frames\n\nLets subclasses aggregate frames that are ready. Subclasses\nshould iterate the GstElement.sinkpads and use the already\nmapped GstVideoFrame from gst_video_aggregator_pad_get_prepared_frame\nor directly use the GstBuffer from gst_video_aggregator_pad_get_current_buffer\nif it needs to map the buffer in a special way. The result of the\naggregation should land in outbuffer.\nParameters:\nLets subclasses aggregate frames that are ready. Subclasses\nshould iterate the GstElement.sinkpads and use the already\nmapped GstVideo.VideoFrame from GstVideo.VideoAggregatorPad.prototype.get_prepared_frame\nor directly use the Gst.Buffer from GstVideo.VideoAggregatorPad.prototype.get_current_buffer\nif it needs to map the buffer in a special way. The result of the\naggregation should land in outbuffer.\nParameters:\nLets subclasses aggregate frames that are ready. Subclasses\nshould iterate the GstElement.sinkpads and use the already\nmapped GstVideo.VideoFrame from GstVideo.VideoAggregatorPad.get_prepared_frame\nor directly use the Gst.Buffer from GstVideo.VideoAggregatorPad.get_current_buffer\nif it needs to map the buffer in a special way. The result of the\naggregation should land in outbuffer.\nParameters:\n"});