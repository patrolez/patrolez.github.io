fragment_downloaded_cb({"url":"video/video-info.html#gst_video_info_convert","fragment":"\n\tgst_video_info_convert\n\n\n\tGstVideo.VideoInfo.prototype.convert\n\n\n\tGstVideo.VideoInfo.convert\n\nConverts among various GstFormat types.  This function handles\nGST_FORMAT_BYTES, GST_FORMAT_TIME, and GST_FORMAT_DEFAULT.  For\nraw video, GST_FORMAT_DEFAULT corresponds to video frames.  This\nfunction can be used to handle pad queries of the type GST_QUERY_CONVERT.\nParameters:\na GstVideoInfo\nGstFormat of the src_value\nvalue to convert\nGstFormat of the dest_value\npointer to destination value\nTRUE if the conversion was successful.\nConverts among various Gst.Format types.  This function handles\nGST_FORMAT_BYTES, GST_FORMAT_TIME, and GST_FORMAT_DEFAULT.  For\nraw video, GST_FORMAT_DEFAULT corresponds to video frames.  This\nfunction can be used to handle pad queries of the type GST_QUERY_CONVERT.\nParameters:\na GstVideo.VideoInfo\nGst.Format of the src_value\nvalue to convert\nGst.Format of the dest_value\nReturns a tuple made of:\nTRUE if the conversion was successful.\nTRUE if the conversion was successful.\nConverts among various Gst.Format types.  This function handles\nGST_FORMAT_BYTES, GST_FORMAT_TIME, and GST_FORMAT_DEFAULT.  For\nraw video, GST_FORMAT_DEFAULT corresponds to video frames.  This\nfunction can be used to handle pad queries of the type GST_QUERY_CONVERT.\nParameters:\na GstVideo.VideoInfo\nGst.Format of the src_value\nvalue to convert\nGst.Format of the dest_value\nReturns a tuple made of:\nTRUE if the conversion was successful.\nTRUE if the conversion was successful.\n"});