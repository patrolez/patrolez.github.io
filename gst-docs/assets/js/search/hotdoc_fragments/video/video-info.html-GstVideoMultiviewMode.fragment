fragment_downloaded_cb({"url":"video/video-info.html#GstVideoMultiviewMode","fragment":"\n\tGstVideoMultiviewMode\n\nMembers\n\n\tGstVideo.VideoMultiviewMode\n\nMembers\n\n\tGstVideo.VideoMultiviewMode\n\nMembers\nAll possible stereoscopic 3D and multiview representations.\nIn conjunction with GstVideoMultiviewFlags, describes how\nmultiview content is being transported in the stream.\nA special value indicating\nno multiview information. Used in GstVideoInfo and other places to\nindicate that no specific multiview handling has been requested or\nprovided. This value is never carried on caps.\nAll frames are monoscopic.\nAll frames represent a left-eye view.\nAll frames represent a right-eye view.\nLeft and right eye views are\nprovided in the left and right half of the frame respectively.\nLeft and right eye\nviews are provided in the left and right half of the frame, but\nhave been sampled using quincunx method, with half-pixel offset\nbetween the 2 views.\nAlternating vertical\ncolumns of pixels represent the left and right eye view respectively.\nAlternating horizontal\nrows of pixels represent the left and right eye view respectively.\nThe top half of the frame\ncontains the left eye, and the bottom half the right eye.\nPixels are arranged with\nalternating pixels representing left and right eye views in a\ncheckerboard fashion.\nLeft and right eye views\nare provided in separate frames alternately.\nMultiple\nindependent views are provided in separate frames in sequence.\nThis method only applies to raw video buffers at the moment.\nSpecific view identification is via the GstVideoMultiviewMeta\nand GstVideoMeta(s) on raw video buffers.\nMultiple views are\nprovided as separate GstMemory framebuffers attached to each\nGstBuffer, described by the GstVideoMultiviewMeta\nand GstVideoMeta(s)\nAll possible stereoscopic 3D and multiview representations.\nIn conjunction with GstVideo.VideoMultiviewFlags, describes how\nmultiview content is being transported in the stream.\nA special value indicating\nno multiview information. Used in GstVideoInfo and other places to\nindicate that no specific multiview handling has been requested or\nprovided. This value is never carried on caps.\nAll frames are monoscopic.\nAll frames represent a left-eye view.\nAll frames represent a right-eye view.\nLeft and right eye views are\nprovided in the left and right half of the frame respectively.\nLeft and right eye\nviews are provided in the left and right half of the frame, but\nhave been sampled using quincunx method, with half-pixel offset\nbetween the 2 views.\nAlternating vertical\ncolumns of pixels represent the left and right eye view respectively.\nAlternating horizontal\nrows of pixels represent the left and right eye view respectively.\nThe top half of the frame\ncontains the left eye, and the bottom half the right eye.\nPixels are arranged with\nalternating pixels representing left and right eye views in a\ncheckerboard fashion.\nLeft and right eye views\nare provided in separate frames alternately.\nMultiple\nindependent views are provided in separate frames in sequence.\nThis method only applies to raw video buffers at the moment.\nSpecific view identification is via the GstVideoMultiviewMeta\nand GstVideo.VideoMeta(s) on raw video buffers.\nMultiple views are\nprovided as separate Gst.Memory framebuffers attached to each\nGst.Buffer, described by the GstVideoMultiviewMeta\nand GstVideo.VideoMeta(s)\nAll possible stereoscopic 3D and multiview representations.\nIn conjunction with GstVideo.VideoMultiviewFlags, describes how\nmultiview content is being transported in the stream.\nA special value indicating\nno multiview information. Used in GstVideoInfo and other places to\nindicate that no specific multiview handling has been requested or\nprovided. This value is never carried on caps.\nAll frames are monoscopic.\nAll frames represent a left-eye view.\nAll frames represent a right-eye view.\nLeft and right eye views are\nprovided in the left and right half of the frame respectively.\nLeft and right eye\nviews are provided in the left and right half of the frame, but\nhave been sampled using quincunx method, with half-pixel offset\nbetween the 2 views.\nAlternating vertical\ncolumns of pixels represent the left and right eye view respectively.\nAlternating horizontal\nrows of pixels represent the left and right eye view respectively.\nThe top half of the frame\ncontains the left eye, and the bottom half the right eye.\nPixels are arranged with\nalternating pixels representing left and right eye views in a\ncheckerboard fashion.\nLeft and right eye views\nare provided in separate frames alternately.\nMultiple\nindependent views are provided in separate frames in sequence.\nThis method only applies to raw video buffers at the moment.\nSpecific view identification is via the GstVideoMultiviewMeta\nand GstVideo.VideoMeta(s) on raw video buffers.\nMultiple views are\nprovided as separate Gst.Memory framebuffers attached to each\nGst.Buffer, described by the GstVideoMultiviewMeta\nand GstVideo.VideoMeta(s)\n"});