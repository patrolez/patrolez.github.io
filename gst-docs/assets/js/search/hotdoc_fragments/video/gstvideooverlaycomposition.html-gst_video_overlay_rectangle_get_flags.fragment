fragment_downloaded_cb({"url":"video/gstvideooverlaycomposition.html#gst_video_overlay_rectangle_get_flags","fragment":"\n\tgst_video_overlay_rectangle_get_flags\n\n\n\tGstVideo.VideoOverlayRectangle.prototype.get_flags\n\n\n\tGstVideo.VideoOverlayRectangle.get_flags\n\nRetrieves the flags associated with a GstVideoOverlayRectangle.\nThis is useful if the caller can handle both premultiplied alpha and\nnon premultiplied alpha, for example. By knowing whether the rectangle\nuses premultiplied or not, it can request the pixel data in the format\nit is stored in, to avoid unnecessary conversion.\nParameters:\na GstVideoOverlayRectangle\nthe GstVideoOverlayFormatFlags associated with the rectangle.\nRetrieves the flags associated with a GstVideo.VideoOverlayRectangle.\nThis is useful if the caller can handle both premultiplied alpha and\nnon premultiplied alpha, for example. By knowing whether the rectangle\nuses premultiplied or not, it can request the pixel data in the format\nit is stored in, to avoid unnecessary conversion.\nParameters:\na GstVideo.VideoOverlayRectangle\nthe GstVideo.VideoOverlayFormatFlags associated with the rectangle.\nRetrieves the flags associated with a GstVideo.VideoOverlayRectangle.\nThis is useful if the caller can handle both premultiplied alpha and\nnon premultiplied alpha, for example. By knowing whether the rectangle\nuses premultiplied or not, it can request the pixel data in the format\nit is stored in, to avoid unnecessary conversion.\nParameters:\na GstVideo.VideoOverlayRectangle\nthe GstVideo.VideoOverlayFormatFlags associated with the rectangle.\n"});