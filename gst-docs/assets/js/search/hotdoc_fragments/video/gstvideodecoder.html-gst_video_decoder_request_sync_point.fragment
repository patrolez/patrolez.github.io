fragment_downloaded_cb({"url":"video/gstvideodecoder.html#gst_video_decoder_request_sync_point","fragment":"\n\tgst_video_decoder_request_sync_point\n\n\n\tGstVideo.VideoDecoder.prototype.request_sync_point\n\n\n\tGstVideo.VideoDecoder.request_sync_point\n\nAllows the GstVideoDecoder subclass to request from the base class that\na new sync should be requested from upstream, and that frame was the frame\nwhen the subclass noticed that a new sync point is required. A reason for\nthe subclass to do this could be missing reference frames, for example.\nThe base class will then request a new sync point from upstream as long as\nthe time that passed since the last one is exceeding\nmin-force-key-unit-interval.\nThe subclass can signal via flags how the frames until the next sync point\nshould be handled:\nParameters:\na GstVideoDecoder\na GstVideoCodecFrame\nGstVideoDecoderRequestSyncPointFlags\n\n\tSince\t\t\t: 1.20\n\t\t\nAllows the GstVideo.VideoDecoder subclass to request from the base class that\na new sync should be requested from upstream, and that frame was the frame\nwhen the subclass noticed that a new sync point is required. A reason for\nthe subclass to do this could be missing reference frames, for example.\nThe base class will then request a new sync point from upstream as long as\nthe time that passed since the last one is exceeding\nmin-force-key-unit-interval.\nThe subclass can signal via flags how the frames until the next sync point\nshould be handled:\nParameters:\na GstVideo.VideoDecoder\na GstVideo.VideoCodecFrame\nGstVideo.VideoDecoderRequestSyncPointFlags\n\n\tSince\t\t\t: 1.20\n\t\t\nAllows the GstVideo.VideoDecoder subclass to request from the base class that\na new sync should be requested from upstream, and that frame was the frame\nwhen the subclass noticed that a new sync point is required. A reason for\nthe subclass to do this could be missing reference frames, for example.\nThe base class will then request a new sync point from upstream as long as\nthe time that passed since the last one is exceeding\nmin_force_key_unit_interval.\nThe subclass can signal via flags how the frames until the next sync point\nshould be handled:\nParameters:\na GstVideo.VideoDecoder\na GstVideo.VideoCodecFrame\nGstVideo.VideoDecoderRequestSyncPointFlags\n\n\tSince\t\t\t: 1.20\n\t\t\n\nIf GST_VIDEO_DECODER_REQUEST_SYNC_POINT_DISCARD_INPUT is selected then\nall following input frames until the next sync point are discarded.\nThis can be useful if the lack of a sync point will prevent all further\ndecoding and the decoder implementation is not very robust in handling\nmissing references frames.\nIf GST_VIDEO_DECODER_REQUEST_SYNC_POINT_CORRUPT_OUTPUT is selected\nthen all output frames following frame are marked as corrupted via\nGST_BUFFER_FLAG_CORRUPTED. Corrupted frames can be automatically\ndropped by the base class, see discard-corrupted-frames.\nSubclasses can manually mark frames as corrupted via GST_VIDEO_CODEC_FRAME_FLAG_CORRUPTED\nbefore calling gst_video_decoder_finish_frame.\n\n\nIf GstVideo.VideoDecoderRequestSyncPointFlags.DISCARD_INPUT is selected then\nall following input frames until the next sync point are discarded.\nThis can be useful if the lack of a sync point will prevent all further\ndecoding and the decoder implementation is not very robust in handling\nmissing references frames.\nIf GstVideo.VideoDecoderRequestSyncPointFlags.CORRUPT_OUTPUT is selected\nthen all output frames following frame are marked as corrupted via\nGst.BufferFlags.CORRUPTED. Corrupted frames can be automatically\ndropped by the base class, see discard-corrupted-frames.\nSubclasses can manually mark frames as corrupted via GstVideo.VideoCodecFrameFlags.CORRUPTED\nbefore calling GstVideo.VideoDecoder.prototype.finish_frame.\n\n\nIf GstVideo.VideoDecoderRequestSyncPointFlags.DISCARD_INPUT is selected then\nall following input frames until the next sync point are discarded.\nThis can be useful if the lack of a sync point will prevent all further\ndecoding and the decoder implementation is not very robust in handling\nmissing references frames.\nIf GstVideo.VideoDecoderRequestSyncPointFlags.CORRUPT_OUTPUT is selected\nthen all output frames following frame are marked as corrupted via\nGst.BufferFlags.CORRUPTED. Corrupted frames can be automatically\ndropped by the base class, see discard_corrupted_frames.\nSubclasses can manually mark frames as corrupted via GstVideo.VideoCodecFrameFlags.CORRUPTED\nbefore calling GstVideo.VideoDecoder.finish_frame.\n\n"});