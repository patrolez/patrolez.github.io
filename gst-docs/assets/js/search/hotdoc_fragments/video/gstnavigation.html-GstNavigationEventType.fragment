fragment_downloaded_cb({"url":"video/gstnavigation.html#GstNavigationEventType","fragment":"\n\tGstNavigationEventType\n\nMembers\n\n\tGstVideo.NavigationEventType\n\nMembers\n\n\tGstVideo.NavigationEventType\n\nMembers\nEnum values for the various events that an element implementing the\nGstNavigation interface might send up the pipeline. Touch events have been\ninspired by the libinput API, and have the same meaning here.\nReturned from\ngst_navigation_event_get_type when the passed event is not a navigation event.\nA key press event. Use\ngst_navigation_event_parse_key_event to extract the details from the event.\nA key release event. Use\ngst_navigation_event_parse_key_event to extract the details from the event.\nA mouse button press event. Use\ngst_navigation_event_parse_mouse_button_event to extract the details from the\nevent.\nA mouse button release event. Use\ngst_navigation_event_parse_mouse_button_event to extract the details from the\nevent.\nA mouse movement event. Use\ngst_navigation_event_parse_mouse_move_event to extract the details from the\nevent.\nA navigation command event. Use\ngst_navigation_event_parse_command to extract the details from the event.\nA mouse scroll event. Use gst_navigation_event_parse_mouse_scroll_event\nto extract the details from the event.\nAn event describing a new touch point, which will be assigned an identifier\nthat is unique to it for the duration of its movement on the screen.\nUse gst_navigation_event_parse_touch_event to extract the details\nfrom the event.\nAn event describing the movement of an active touch point across\nthe screen. Use gst_navigation_event_parse_touch_event to extract\nthe details from the event.\nAn event describing a removed touch point. After this event,\nits identifier may be reused for any new touch points.\nUse gst_navigation_event_parse_touch_up_event to extract the details\nfrom the event.\nAn event signaling the end of a sequence of simultaneous touch events.\nAn event cancelling all currently active touch points.\nEnum values for the various events that an element implementing the\nGstNavigation interface might send up the pipeline. Touch events have been\ninspired by the libinput API, and have the same meaning here.\nReturned from\nGstVideo.prototype.navigation_event_get_type when the passed event is not a navigation event.\nA key press event. Use\nGstVideo.prototype.navigation_event_parse_key_event to extract the details from the event.\nA key release event. Use\nGstVideo.prototype.navigation_event_parse_key_event to extract the details from the event.\nA mouse button press event. Use\nGstVideo.prototype.navigation_event_parse_mouse_button_event to extract the details from the\nevent.\nA mouse button release event. Use\nGstVideo.prototype.navigation_event_parse_mouse_button_event to extract the details from the\nevent.\nA mouse movement event. Use\nGstVideo.prototype.navigation_event_parse_mouse_move_event to extract the details from the\nevent.\nA navigation command event. Use\nGstVideo.prototype.navigation_event_parse_command to extract the details from the event.\nA mouse scroll event. Use GstVideo.prototype.navigation_event_parse_mouse_scroll_event\nto extract the details from the event.\nAn event describing a new touch point, which will be assigned an identifier\nthat is unique to it for the duration of its movement on the screen.\nUse GstVideo.prototype.navigation_event_parse_touch_event to extract the details\nfrom the event.\nAn event describing the movement of an active touch point across\nthe screen. Use GstVideo.prototype.navigation_event_parse_touch_event to extract\nthe details from the event.\nAn event describing a removed touch point. After this event,\nits identifier may be reused for any new touch points.\nUse GstVideo.prototype.navigation_event_parse_touch_up_event to extract the details\nfrom the event.\nAn event signaling the end of a sequence of simultaneous touch events.\nAn event cancelling all currently active touch points.\nEnum values for the various events that an element implementing the\nGstNavigation interface might send up the pipeline. Touch events have been\ninspired by the libinput API, and have the same meaning here.\nReturned from\nGstVideo.navigation_event_get_type when the passed event is not a navigation event.\nA key press event. Use\nGstVideo.navigation_event_parse_key_event to extract the details from the event.\nA key release event. Use\nGstVideo.navigation_event_parse_key_event to extract the details from the event.\nA mouse button press event. Use\nGstVideo.navigation_event_parse_mouse_button_event to extract the details from the\nevent.\nA mouse button release event. Use\nGstVideo.navigation_event_parse_mouse_button_event to extract the details from the\nevent.\nA mouse movement event. Use\nGstVideo.navigation_event_parse_mouse_move_event to extract the details from the\nevent.\nA navigation command event. Use\nGstVideo.navigation_event_parse_command to extract the details from the event.\nA mouse scroll event. Use GstVideo.navigation_event_parse_mouse_scroll_event\nto extract the details from the event.\nAn event describing a new touch point, which will be assigned an identifier\nthat is unique to it for the duration of its movement on the screen.\nUse GstVideo.navigation_event_parse_touch_event to extract the details\nfrom the event.\nAn event describing the movement of an active touch point across\nthe screen. Use GstVideo.navigation_event_parse_touch_event to extract\nthe details from the event.\nAn event describing a removed touch point. After this event,\nits identifier may be reused for any new touch points.\nUse GstVideo.navigation_event_parse_touch_up_event to extract the details\nfrom the event.\nAn event signaling the end of a sequence of simultaneous touch events.\nAn event cancelling all currently active touch points.\n"});