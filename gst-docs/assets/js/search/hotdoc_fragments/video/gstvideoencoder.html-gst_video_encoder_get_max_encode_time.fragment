fragment_downloaded_cb({"url":"video/gstvideoencoder.html#gst_video_encoder_get_max_encode_time","fragment":"\n\tgst_video_encoder_get_max_encode_time\n\n\n\tGstVideo.VideoEncoder.prototype.get_max_encode_time\n\n\n\tGstVideo.VideoEncoder.get_max_encode_time\n\nDetermines maximum possible encoding time for frame that will\nallow it to encode and arrive in time (as determined by QoS events).\nIn particular, a negative result means encoding in time is no longer possible\nand should therefore occur as soon/skippy as possible.\nIf no QoS events have been received from downstream, or if\nqos is disabled this function returns G_MAXINT64.\nParameters:\na GstVideoEncoder\na GstVideoCodecFrame\nmax decoding time.\n\n\tSince\t\t\t: 1.14\n\t\t\nDetermines maximum possible encoding time for frame that will\nallow it to encode and arrive in time (as determined by QoS events).\nIn particular, a negative result means encoding in time is no longer possible\nand should therefore occur as soon/skippy as possible.\nIf no QoS events have been received from downstream, or if\nqos is disabled this function returns GLib.MAXINT64.\nParameters:\na GstVideo.VideoEncoder\na GstVideo.VideoCodecFrame\nmax decoding time.\n\n\tSince\t\t\t: 1.14\n\t\t\nDetermines maximum possible encoding time for frame that will\nallow it to encode and arrive in time (as determined by QoS events).\nIn particular, a negative result means encoding in time is no longer possible\nand should therefore occur as soon/skippy as possible.\nIf no QoS events have been received from downstream, or if\nqos is disabled this function returns GLib.MAXINT64.\nParameters:\na GstVideo.VideoEncoder\na GstVideo.VideoCodecFrame\nmax decoding time.\n\n\tSince\t\t\t: 1.14\n\t\t\n"});