fragment_downloaded_cb({"url":"video/video-format.html#GstVideoFormatInfo","fragment":"\n\tGstVideoFormatInfo\n\nMembers\n\n\tGstVideo.VideoFormatInfo\n\nMembers\n\n\tGstVideo.VideoFormatInfo\n\nMembers\nInformation for a video format.\nGstVideoFormat\nstring representation of the format\nuse readable description of the format\nGstVideoFormatFlags\nThe number of bits used to pack data items. This can be less than 8\nwhen multiple pixels are stored in a byte. for values > 8 multiple bytes\nshould be read according to the endianness flag before applying the shift\nand mask.\nthe number of components in the video format.\nthe number of bits to shift away to get the component data\nthe depth in bits for each component\nthe pixel stride of each component. This is the amount of\nbytes to the pixel immediately to the right. When bits < 8, the stride is\nexpressed in bits. For 24-bit RGB, this would be 3 bytes, for example,\nwhile it would be 4 bytes for RGBx or ARGB.\nthe number of planes for this format. The number of planes can be\nless than the amount of components when multiple components are packed into\none plane.\nthe plane number where a component can be found\nthe offset in the plane where the first pixel of the components\ncan be found.\nsubsampling factor of the width for the component. Use\nGST_VIDEO_SUB_SCALE to scale a width.\nsubsampling factor of the height for the component. Use\nGST_VIDEO_SUB_SCALE to scale a height.\nthe format of the unpacked pixels. This format must have the\nGST_VIDEO_FORMAT_FLAG_UNPACK flag set.\nan unpack function for this format\nthe amount of lines that will be packed\nan pack function for this format\nThe tiling mode\nThe width of a tile, in bytes, represented as a shift. DEPRECATED,\nuse tile_info[] array instead.\nThe height of a tile, in bytes, represented as a shift. DEPREACTED,\nuse tile_info[] array instead.\nInformation about the tiles for each of the planes.\nInformation for a video format.\nGstVideo.VideoFormat\nstring representation of the format\nuse readable description of the format\nGstVideo.VideoFormatFlags\nThe number of bits used to pack data items. This can be less than 8\nwhen multiple pixels are stored in a byte. for values > 8 multiple bytes\nshould be read according to the endianness flag before applying the shift\nand mask.\nthe number of components in the video format.\nthe number of bits to shift away to get the component data\nthe depth in bits for each component\nthe pixel stride of each component. This is the amount of\nbytes to the pixel immediately to the right. When bits < 8, the stride is\nexpressed in bits. For 24-bit RGB, this would be 3 bytes, for example,\nwhile it would be 4 bytes for RGBx or ARGB.\nthe number of planes for this format. The number of planes can be\nless than the amount of components when multiple components are packed into\none plane.\nthe plane number where a component can be found\nthe offset in the plane where the first pixel of the components\ncan be found.\nsubsampling factor of the width for the component. Use\nGST_VIDEO_SUB_SCALE to scale a width.\nsubsampling factor of the height for the component. Use\nGST_VIDEO_SUB_SCALE to scale a height.\nthe format of the unpacked pixels. This format must have the\nGstVideo.VideoFormatFlags.UNPACK flag set.\nan unpack function for this format\nthe amount of lines that will be packed\nan pack function for this format\nThe tiling mode\nThe width of a tile, in bytes, represented as a shift. DEPRECATED,\nuse tile_info[] array instead.\nThe height of a tile, in bytes, represented as a shift. DEPREACTED,\nuse tile_info[] array instead.\nInformation about the tiles for each of the planes.\nInformation for a video format.\nGstVideo.VideoFormat\nstring representation of the format\nuse readable description of the format\nGstVideo.VideoFormatFlags\nThe number of bits used to pack data items. This can be less than 8\nwhen multiple pixels are stored in a byte. for values > 8 multiple bytes\nshould be read according to the endianness flag before applying the shift\nand mask.\nthe number of components in the video format.\nthe number of bits to shift away to get the component data\nthe depth in bits for each component\nthe pixel stride of each component. This is the amount of\nbytes to the pixel immediately to the right. When bits < 8, the stride is\nexpressed in bits. For 24-bit RGB, this would be 3 bytes, for example,\nwhile it would be 4 bytes for RGBx or ARGB.\nthe number of planes for this format. The number of planes can be\nless than the amount of components when multiple components are packed into\none plane.\nthe plane number where a component can be found\nthe offset in the plane where the first pixel of the components\ncan be found.\nsubsampling factor of the width for the component. Use\nGST_VIDEO_SUB_SCALE to scale a width.\nsubsampling factor of the height for the component. Use\nGST_VIDEO_SUB_SCALE to scale a height.\nthe format of the unpacked pixels. This format must have the\nGstVideo.VideoFormatFlags.UNPACK flag set.\nan unpack function for this format\nthe amount of lines that will be packed\nan pack function for this format\nThe tiling mode\nThe width of a tile, in bytes, represented as a shift. DEPRECATED,\nuse tile_info[] array instead.\nThe height of a tile, in bytes, represented as a shift. DEPREACTED,\nuse tile_info[] array instead.\nInformation about the tiles for each of the planes.\n"});