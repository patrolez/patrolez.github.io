fragment_downloaded_cb({"url":"video/gstnavigation.html#gstnavigation-page","fragment":"GstNavigation\nThe Navigation interface is used for creating and injecting navigation\nrelated events such as mouse button presses, cursor motion and key presses.\nThe associated library also provides methods for parsing received events, and\nfor sending and receiving navigation related bus events. One main usecase is\nDVD menu navigation.\nThe main parts of the API are:\nThe GstNavigation interface, implemented by elements which provide an\napplication with the ability to create and inject navigation events into\nthe pipeline.\nGstNavigation event handling API. GstNavigation events are created in\nresponse to calls on a GstNavigation interface implementation, and sent in\nthe pipeline. Upstream elements can use the navigation event API functions\nto parse the contents of received messages.\nGstNavigation message handling API. GstNavigation messages may be sent on\nthe message bus to inform applications of navigation related changes in the\npipeline, such as the mouse moving over a clickable region, or the set of\navailable angles changing.\nThe GstNavigation message functions provide functions for creating and\nparsing custom bus messages for signaling GstNavigation changes.\n\n\nThe GstNavigation interface, implemented by elements which provide an\napplication with the ability to create and inject navigation events into\nthe pipeline.\n\n\nGstNavigation event handling API. GstNavigation events are created in\nresponse to calls on a GstNavigation interface implementation, and sent in\nthe pipeline. Upstream elements can use the navigation event API functions\nto parse the contents of received messages.\n\n\nGstNavigation message handling API. GstNavigation messages may be sent on\nthe message bus to inform applications of navigation related changes in the\npipeline, such as the mouse moving over a clickable region, or the set of\navailable angles changing.\n\n\n"});