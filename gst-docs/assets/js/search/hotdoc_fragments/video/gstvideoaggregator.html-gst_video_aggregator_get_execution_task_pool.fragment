fragment_downloaded_cb({"url":"video/gstvideoaggregator.html#gst_video_aggregator_get_execution_task_pool","fragment":"\n\tgst_video_aggregator_get_execution_task_pool\n\n\n\tGstVideo.VideoAggregator.prototype.get_execution_task_pool\n\n\n\tGstVideo.VideoAggregator.get_execution_task_pool\n\nThe returned GstTaskPool is used internally for performing parallel\nvideo format conversions/scaling/etc during the\nprepare_frame_start() process.\nSubclasses can add their own operation to perform using the returned\nGstTaskPool during aggregate_frames().\nParameters:\nthe GstVideoAggregator\nthe GstTaskPool that can be used by subclasses\nfor performing concurrent operations\n\n\tSince\t\t\t: 1.20\n\t\t\nThe returned Gst.TaskPool is used internally for performing parallel\nvideo format conversions/scaling/etc during the\nvfunc_prepare_frame_start() process.\nSubclasses can add their own operation to perform using the returned\nGst.TaskPool during vfunc_aggregate_frames().\nParameters:\nthe GstVideo.VideoAggregator\nthe Gst.TaskPool that can be used by subclasses\nfor performing concurrent operations\n\n\tSince\t\t\t: 1.20\n\t\t\nThe returned Gst.TaskPool is used internally for performing parallel\nvideo format conversions/scaling/etc during the\ndo_prepare_frame_start() process.\nSubclasses can add their own operation to perform using the returned\nGst.TaskPool during do_aggregate_frames().\nParameters:\nthe GstVideo.VideoAggregator\nthe Gst.TaskPool that can be used by subclasses\nfor performing concurrent operations\n\n\tSince\t\t\t: 1.20\n\t\t\n"});