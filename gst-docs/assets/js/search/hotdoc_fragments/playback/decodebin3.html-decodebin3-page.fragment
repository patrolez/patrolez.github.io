fragment_downloaded_cb({"url":"playback/decodebin3.html#decodebin3-page","fragment":"decodebin3\nGstBin that auto-magically constructs a decoding pipeline using available\ndecoders and demuxers via auto-plugging. The output is raw audio, video\nor subtitle streams.\ndecodebin3 differs from the previous decodebin (decodebin2) in important ways:\nsupports publication and selection of stream information via\nGstStreamCollection messages and GST_EVENT_SELECT_STREAMS events.\ndynamically switches stream connections internally, and\nreuses decoder elements when stream selections change, so that in\nthe normal case it maintains 1 decoder of each type (video/audio/subtitle)\nand only creates new elements when streams change and an existing decoder\nis not capable of handling the new format.\nsupports multiple input pads for the parallel decoding of auxiliary streams\nnot muxed with the primary stream.\ndoes not handle network stream buffering. decodebin3 expects that network stream\nbuffering is handled upstream, before data is passed to it.\n\n\nsupports publication and selection of stream information via\nGstStreamCollection messages and GST_EVENT_SELECT_STREAMS events.\n\n\ndynamically switches stream connections internally, and\nreuses decoder elements when stream selections change, so that in\nthe normal case it maintains 1 decoder of each type (video/audio/subtitle)\nand only creates new elements when streams change and an existing decoder\nis not capable of handling the new format.\n\n\nsupports multiple input pads for the parallel decoding of auxiliary streams\nnot muxed with the primary stream.\n\n\ndoes not handle network stream buffering. decodebin3 expects that network stream\nbuffering is handled upstream, before data is passed to it.\n\n\n"});