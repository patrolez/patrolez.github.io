fragment_downloaded_cb({"url":"gstreamer/gstbin.html#gst_bin_find_unlinked_pad","fragment":"\n\tgst_bin_find_unlinked_pad\n\n\n\tGst.Bin.prototype.find_unlinked_pad\n\n\n\tGst.Bin.find_unlinked_pad\n\nRecursively looks for elements with an unlinked pad of the given\ndirection within the specified bin and returns an unlinked pad\nif one is found, or NULL otherwise. If a pad is found, the caller\nowns a reference to it and should use gst_object_unref on the\npad when it is not needed any longer.\nParameters:\nbin in which to look for elements with unlinked pads\nwhether to look for an unlinked source or sink pad\nunlinked pad of the given\ndirection.\nRecursively looks for elements with an unlinked pad of the given\ndirection within the specified bin and returns an unlinked pad\nif one is found, or null otherwise. If a pad is found, the caller\nowns a reference to it and should use Gst.Object.prototype.unref on the\npad when it is not needed any longer.\nParameters:\nbin in which to look for elements with unlinked pads\nwhether to look for an unlinked source or sink pad\nunlinked pad of the given\ndirection.\nRecursively looks for elements with an unlinked pad of the given\ndirection within the specified bin and returns an unlinked pad\nif one is found, or None otherwise. If a pad is found, the caller\nowns a reference to it and should use Gst.Object.unref on the\npad when it is not needed any longer.\nParameters:\nbin in which to look for elements with unlinked pads\nwhether to look for an unlinked source or sink pad\nunlinked pad of the given\ndirection.\n"});