fragment_downloaded_cb({"url":"gstreamer/gststructure.html#gst_structure_to_string","fragment":"\n\tgst_structure_to_string\n\n\n\tGst.Structure.prototype.to_string\n\n\n\tGst.Structure.to_string\n\nConverts structure to a human-readable string representation.\nFor debugging purposes its easier to do something like this: |[ GST_LOG (\"structure is %\" GST_PTR_FORMAT, structure);\n]|\nThis prints the structure in human readable form.\nThis function will lead to unexpected results when there are nested GstCaps\n/ GstStructure deeper than one level, you should user\ngst_structure_serialize instead for those cases.\nFree-function: g_free\nParameters:\na GstStructure\na pointer to string allocated by g_malloc.\ng_free after usage.\nConverts structure to a human-readable string representation.\nFor debugging purposes its easier to do something like this: |[ GST_LOG (\"structure is %\" GST_PTR_FORMAT, structure);\n]|\nThis prints the structure in human readable form.\nThis function will lead to unexpected results when there are nested Gst.Caps\n/ Gst.Structure deeper than one level, you should user\nGst.Structure.prototype.serialize instead for those cases.\nFree-function: g_free\nParameters:\na Gst.Structure\na pointer to string allocated by GLib.prototype.malloc.\nGLib.prototype.free after usage.\nConverts structure to a human-readable string representation.\nFor debugging purposes its easier to do something like this: |[ GST_LOG (\"structure is %\" GST_PTR_FORMAT, structure);\n]|\nThis prints the structure in human readable form.\nThis function will lead to unexpected results when there are nested Gst.Caps\n/ Gst.Structure deeper than one level, you should user\nGst.Structure.serialize instead for those cases.\nFree-function: g_free\nParameters:\na Gst.Structure\na pointer to string allocated by GLib.malloc.\nGLib.free after usage.\n"});