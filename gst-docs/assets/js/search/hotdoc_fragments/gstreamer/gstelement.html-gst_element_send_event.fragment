fragment_downloaded_cb({"url":"gstreamer/gstelement.html#gst_element_send_event","fragment":"\n\tgst_element_send_event\n\n\n\tGst.Element.prototype.send_event\n\n\n\tGst.Element.send_event\n\nSends an event to an element. If the element doesn't implement an\nevent handler, the event will be pushed on a random linked sink pad for\ndownstream events or a random linked source pad for upstream events.\nThis function takes ownership of the provided event so you should\ngst_event_ref it if you want to reuse the event after this call.\nMT safe.\nParameters:\na GstElement to send the event to.\nthe GstEvent to send to the element.\nTRUE if the event was handled. Events that trigger a preroll (such\nas flushing seeks and steps) will emit GST_MESSAGE_ASYNC_DONE.\nSends an event to an element. If the element doesn't implement an\nevent handler, the event will be pushed on a random linked sink pad for\ndownstream events or a random linked source pad for upstream events.\nThis function takes ownership of the provided event so you should\ngst_event_ref (not introspectable) it if you want to reuse the event after this call.\nMT safe.\nParameters:\na Gst.Element to send the event to.\nthe Gst.Event to send to the element.\ntrue if the event was handled. Events that trigger a preroll (such\nas flushing seeks and steps) will emit Gst.MessageType.ASYNC_DONE.\nSends an event to an element. If the element doesn't implement an\nevent handler, the event will be pushed on a random linked sink pad for\ndownstream events or a random linked source pad for upstream events.\nThis function takes ownership of the provided event so you should\ngst_event_ref (not introspectable) it if you want to reuse the event after this call.\nMT safe.\nParameters:\na Gst.Element to send the event to.\nthe Gst.Event to send to the element.\nTrue if the event was handled. Events that trigger a preroll (such\nas flushing seeks and steps) will emit Gst.MessageType.ASYNC_DONE.\n"});