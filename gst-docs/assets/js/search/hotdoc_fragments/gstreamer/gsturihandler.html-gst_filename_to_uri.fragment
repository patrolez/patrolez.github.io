fragment_downloaded_cb({"url":"gstreamer/gsturihandler.html#gst_filename_to_uri","fragment":"\n\tgst_filename_to_uri\n\n\n\tGst.prototype.filename_to_uri\n\n\n\tGst.filename_to_uri\n\nSimilar to g_filename_to_uri, but attempts to handle relative file paths\nas well. Before converting filename into an URI, it will be prefixed by\nthe current working directory if it is a relative path, and then the path\nwill be canonicalised so that it doesn't contain any './' or '../' segments.\nOn Windows filename should be in UTF-8 encoding.\nParameters:\nabsolute or relative file name path\npointer to error, or NULL\nnewly-allocated URI string, or NULL on error. The caller must\nfree the URI string with g_free when no longer needed.\nSimilar to GLib.prototype.filename_to_uri, but attempts to handle relative file paths\nas well. Before converting filename into an URI, it will be prefixed by\nthe current working directory if it is a relative path, and then the path\nwill be canonicalised so that it doesn't contain any './' or '../' segments.\nOn Windows filename should be in UTF-8 encoding.\nParameters:\nabsolute or relative file name path\nnewly-allocated URI string, or NULL on error. The caller must\nfree the URI string with GLib.prototype.free when no longer needed.\nSimilar to GLib.filename_to_uri, but attempts to handle relative file paths\nas well. Before converting filename into an URI, it will be prefixed by\nthe current working directory if it is a relative path, and then the path\nwill be canonicalised so that it doesn't contain any './' or '../' segments.\nOn Windows filename should be in UTF-8 encoding.\nParameters:\nabsolute or relative file name path\nnewly-allocated URI string, or NULL on error. The caller must\nfree the URI string with GLib.free when no longer needed.\n"});