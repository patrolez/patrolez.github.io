fragment_downloaded_cb({"url":"gstreamer/gstallocator.html#GstAllocatorFlags","fragment":"\n\tGstAllocatorFlags\n\nMembers\n\n\tGst.AllocatorFlags\n\nMembers\n\n\tGst.AllocatorFlags\n\nMembers\nFlags for allocators.\nThe allocator has a custom alloc function.\nOnly elements designed to work with this allocator should be using it,\nother elements should ignore it from allocation propositions.\nThis implies GST_ALLOCATOR_FLAG_NO_COPY.\nWhen copying a GstMemory allocated with this allocator, the copy will\ninstead be allocated using the default allocator. Use this when allocating a\nnew memory is an heavy opperation that should only be done with a\nGstBufferPool for example.\nfirst flag that can be used for custom purposes\nFlags for allocators.\nThe allocator has a custom alloc function.\nOnly elements designed to work with this allocator should be using it,\nother elements should ignore it from allocation propositions.\nThis implies Gst.AllocatorFlags.NO_COPY.\nWhen copying a Gst.Memory allocated with this allocator, the copy will\ninstead be allocated using the default allocator. Use this when allocating a\nnew memory is an heavy opperation that should only be done with a\nGst.BufferPool for example.\nfirst flag that can be used for custom purposes\nFlags for allocators.\nThe allocator has a custom alloc function.\nOnly elements designed to work with this allocator should be using it,\nother elements should ignore it from allocation propositions.\nThis implies Gst.AllocatorFlags.NO_COPY.\nWhen copying a Gst.Memory allocated with this allocator, the copy will\ninstead be allocated using the default allocator. Use this when allocating a\nnew memory is an heavy opperation that should only be done with a\nGst.BufferPool for example.\nfirst flag that can be used for custom purposes\n"});