fragment_downloaded_cb({"url":"gstreamer/gstvalue.html#gst_value_can_union","fragment":"\n\tgst_value_can_union\n\n\n\tGst.prototype.value_can_union\n\n\n\tGst.value_can_union\n\nDetermines if value1 and value2 can be non-trivially unioned.\nAny two values can be trivially unioned by adding both of them\nto a GstValueList.  However, certain types have the possibility\nto be unioned in a simpler way.  For example, an integer range\nand an integer can be unioned if the integer is a subset of the\ninteger range.  If there is the possibility that two values can\nbe unioned, this function returns TRUE.\nParameters:\na value to union\nanother value to union\nTRUE if there is a function allowing the two values to\nbe unioned.\nDetermines if value1 and value2 can be non-trivially unioned.\nAny two values can be trivially unioned by adding both of them\nto a GstValueList.  However, certain types have the possibility\nto be unioned in a simpler way.  For example, an integer range\nand an integer can be unioned if the integer is a subset of the\ninteger range.  If there is the possibility that two values can\nbe unioned, this function returns true.\nParameters:\na value to union\nanother value to union\ntrue if there is a function allowing the two values to\nbe unioned.\nDetermines if value1 and value2 can be non-trivially unioned.\nAny two values can be trivially unioned by adding both of them\nto a GstValueList.  However, certain types have the possibility\nto be unioned in a simpler way.  For example, an integer range\nand an integer can be unioned if the integer is a subset of the\ninteger range.  If there is the possibility that two values can\nbe unioned, this function returns True.\nParameters:\na value to union\nanother value to union\nTrue if there is a function allowing the two values to\nbe unioned.\n"});