fragment_downloaded_cb({"url":"gstreamer/gstquery.html#gst_query_take","fragment":"\n\tgst_query_take\n\n\n\tGst.prototype.query_take\n\n\n\tGst.query_take\n\nModifies a pointer to a GstQuery to point to a different GstQuery. This\nfunction is similar to gst_query_replace except that it takes ownership of\nnew_query.\nEither new_query or the GstQuery pointed to by old_query may be NULL.\nParameters:\npointer to a\npointer to a GstQuery to be stolen.\npointer to a GstQuery that will\nreplace the query pointed to by old_query.\nTRUE if new_query was different from old_query\n\n\tSince\t\t\t: 1.16\n\t\t\nModifies a pointer to a Gst.Query to point to a different Gst.Query. This\nfunction is similar to gst_query_replace (not introspectable) except that it takes ownership of\nnew_query.\nEither new_query or the Gst.Query pointed to by old_query may be null.\nParameters:\npointer to a\npointer to a Gst.Query to be stolen.\npointer to a Gst.Query that will\nreplace the query pointed to by old_query.\nReturns a tuple made of:\ntrue if new_query was different from old_query\ntrue if new_query was different from old_query\n\n\tSince\t\t\t: 1.16\n\t\t\nModifies a pointer to a Gst.Query to point to a different Gst.Query. This\nfunction is similar to gst_query_replace (not introspectable) except that it takes ownership of\nnew_query.\nEither new_query or the Gst.Query pointed to by old_query may be None.\nParameters:\npointer to a\npointer to a Gst.Query to be stolen.\npointer to a Gst.Query that will\nreplace the query pointed to by old_query.\nReturns a tuple made of:\nTrue if new_query was different from old_query\nTrue if new_query was different from old_query\n\n\tSince\t\t\t: 1.16\n\t\t\n"});