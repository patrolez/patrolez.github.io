fragment_downloaded_cb({"url":"gstreamer/gstpad.html#gst_pad_get_stream_id","fragment":"\n\tgst_pad_get_stream_id\n\n\n\tGst.Pad.prototype.get_stream_id\n\n\n\tGst.Pad.get_stream_id\n\nReturns the current stream-id for the pad, or NULL if none has been\nset yet, i.e. the pad has not received a stream-start event yet.\nThis is a convenience wrapper around gst_pad_get_sticky_event and\ngst_event_parse_stream_start.\nThe returned stream-id string should be treated as an opaque string, its\ncontents should not be interpreted.\nParameters:\nA source GstPad\na newly-allocated copy of the stream-id for\npad, or NULL.  g_free the returned string when no longer\nneeded.\n\n\tSince\t\t\t: 1.2\n\t\t\nReturns the current stream-id for the pad, or null if none has been\nset yet, i.e. the pad has not received a stream-start event yet.\nThis is a convenience wrapper around Gst.Pad.prototype.get_sticky_event and\nGst.Event.prototype.parse_stream_start.\nThe returned stream-id string should be treated as an opaque string, its\ncontents should not be interpreted.\nParameters:\nA source Gst.Pad\na newly-allocated copy of the stream-id for\npad, or null.  GLib.prototype.free the returned string when no longer\nneeded.\n\n\tSince\t\t\t: 1.2\n\t\t\nReturns the current stream-id for the pad, or None if none has been\nset yet, i.e. the pad has not received a stream-start event yet.\nThis is a convenience wrapper around Gst.Pad.get_sticky_event and\nGst.Event.parse_stream_start.\nThe returned stream-id string should be treated as an opaque string, its\ncontents should not be interpreted.\nParameters:\nA source Gst.Pad\na newly-allocated copy of the stream-id for\npad, or None.  GLib.free the returned string when no longer\nneeded.\n\n\tSince\t\t\t: 1.2\n\t\t\n"});