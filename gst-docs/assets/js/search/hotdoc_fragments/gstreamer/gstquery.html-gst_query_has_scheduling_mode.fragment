fragment_downloaded_cb({"url":"gstreamer/gstquery.html#gst_query_has_scheduling_mode","fragment":"\n\tgst_query_has_scheduling_mode\n\n\n\tGst.Query.prototype.has_scheduling_mode\n\n\n\tGst.Query.has_scheduling_mode\n\nCheck if query has scheduling mode set.\nWhen checking if upstream supports pull mode, it is usually not\nenough to just check for GST_PAD_MODE_PULL with this function, you\nalso want to check whether the scheduling flags returned by\ngst_query_parse_scheduling have the seeking flag set (meaning\nrandom access is supported, not only sequential pulls).\nParameters:\na GST_QUERY_SCHEDULING type query GstQuery\nthe scheduling mode\nTRUE when mode is in the list of scheduling modes.\nCheck if query has scheduling mode set.\nWhen checking if upstream supports pull mode, it is usually not\nenough to just check for GST_PAD_MODE_PULL with this function, you\nalso want to check whether the scheduling flags returned by\nGst.Query.prototype.parse_scheduling have the seeking flag set (meaning\nrandom access is supported, not only sequential pulls).\nParameters:\na GST_QUERY_SCHEDULING type query Gst.Query\nthe scheduling mode\ntrue when mode is in the list of scheduling modes.\nCheck if query has scheduling mode set.\nWhen checking if upstream supports pull mode, it is usually not\nenough to just check for GST_PAD_MODE_PULL with this function, you\nalso want to check whether the scheduling flags returned by\nGst.Query.parse_scheduling have the seeking flag set (meaning\nrandom access is supported, not only sequential pulls).\nParameters:\na GST_QUERY_SCHEDULING type query Gst.Query\nthe scheduling mode\nTrue when mode is in the list of scheduling modes.\n"});