fragment_downloaded_cb({"url":"gstreamer/gstelement.html#gst_element_link","fragment":"\n\tgst_element_link\n\n\n\tGst.Element.prototype.link\n\n\n\tGst.Element.link\n\nLinks src to dest. The link must be from source to\ndestination; the other direction will not be tried. The function looks for\nexisting pads that aren't linked yet. It will request new pads if necessary.\nSuch pads need to be released manually when unlinking.\nIf multiple links are possible, only one is established.\nMake sure you have added your elements to a bin or pipeline with\ngst_bin_add before trying to link them.\nParameters:\na GstElement containing the source pad.\nthe GstElement containing the destination pad.\nTRUE if the elements could be linked, FALSE otherwise.\nLinks src to dest. The link must be from source to\ndestination; the other direction will not be tried. The function looks for\nexisting pads that aren't linked yet. It will request new pads if necessary.\nSuch pads need to be released manually when unlinking.\nIf multiple links are possible, only one is established.\nMake sure you have added your elements to a bin or pipeline with\nGst.Bin.prototype.add before trying to link them.\nParameters:\na Gst.Element containing the source pad.\nthe Gst.Element containing the destination pad.\ntrue if the elements could be linked, false otherwise.\nLinks src to dest. The link must be from source to\ndestination; the other direction will not be tried. The function looks for\nexisting pads that aren't linked yet. It will request new pads if necessary.\nSuch pads need to be released manually when unlinking.\nIf multiple links are possible, only one is established.\nMake sure you have added your elements to a bin or pipeline with\nGst.Bin.add before trying to link them.\nParameters:\na Gst.Element containing the source pad.\nthe Gst.Element containing the destination pad.\nTrue if the elements could be linked, False otherwise.\n"});