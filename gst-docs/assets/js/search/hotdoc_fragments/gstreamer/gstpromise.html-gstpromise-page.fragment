fragment_downloaded_cb({"url":"gstreamer/gstpromise.html#gstpromise-page","fragment":"GstPromise\nThe GstPromise object implements the container for values that may\nbe available later. i.e. a Future or a Promise in\nhttps://en.wikipedia.org/wiki/Futures_and_promises.\nAs with all Future/Promise-like functionality, there is the concept of the\nproducer of the value and the consumer of the value.\nA GstPromise is created with gst_promise_new by the consumer and passed\nto the producer to avoid thread safety issues with the change callback.\nA GstPromise can be replied to with a value (or an error) by the producer\nwith gst_promise_reply. The exact value returned is defined by the API\ncontract of the producer and NULL may be a valid reply.\ngst_promise_interrupt is for the consumer to\nindicate to the producer that the value is not needed anymore and producing\nthat value can stop.  The GST_PROMISE_RESULT_EXPIRED state set by a call\nto gst_promise_expire indicates to the consumer that a value will never\nbe produced and is intended to be called by a third party that implements\nsome notion of message handling such as GstBus.\nA callback can also be installed at GstPromise creation for\nresult changes with gst_promise_new_with_change_func.\nThe change callback can be used to chain GstPromise's together as in the\nfollowing example.\nEach GstPromise starts out with a GstPromiseResult of\nGST_PROMISE_RESULT_PENDING and only ever transitions once\ninto one of the other GstPromiseResult's.\nIn order to support multi-threaded code, gst_promise_reply,\ngst_promise_interrupt and gst_promise_expire may all be from\ndifferent threads with some restrictions and the final result of the promise\nis whichever call is made first.  There are two restrictions on ordering:\nThe change function set with gst_promise_new_with_change_func is\ncalled directly from either the gst_promise_reply,\ngst_promise_interrupt or gst_promise_expire and can be called\nfrom an arbitrary thread.  GstPromise using APIs can restrict this to\na single thread or a subset of threads but that is entirely up to the API\nthat uses GstPromise.\n"});