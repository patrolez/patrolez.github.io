fragment_downloaded_cb({"url":"gstreamer/gstelement.html#gst_element_lost_state","fragment":"\n\tgst_element_lost_state\n\n\n\tGst.Element.prototype.lost_state\n\n\n\tGst.Element.lost_state\n\nBrings the element to the lost state. The current state of the\nelement is copied to the pending state so that any call to\ngst_element_get_state will return GST_STATE_CHANGE_ASYNC.\nAn ASYNC_START message is posted. If the element was PLAYING, it will\ngo to PAUSED. The element will be restored to its PLAYING state by\nthe parent pipeline when it prerolls again.\nThis is mostly used for elements that lost their preroll buffer\nin the GST_STATE_PAUSED or GST_STATE_PLAYING state after a flush,\nthey will go to their pending state again when a new preroll buffer is\nqueued. This function can only be called when the element is currently\nnot in error or an async state change.\nThis function is used internally and should normally not be called from\nplugins or applications.\nParameters:\na GstElement the state is lost of\nBrings the element to the lost state. The current state of the\nelement is copied to the pending state so that any call to\nGst.Element.prototype.get_state will return Gst.StateChangeReturn.ASYNC.\nAn ASYNC_START message is posted. If the element was PLAYING, it will\ngo to PAUSED. The element will be restored to its PLAYING state by\nthe parent pipeline when it prerolls again.\nThis is mostly used for elements that lost their preroll buffer\nin the Gst.State.PAUSED or Gst.State.PLAYING state after a flush,\nthey will go to their pending state again when a new preroll buffer is\nqueued. This function can only be called when the element is currently\nnot in error or an async state change.\nThis function is used internally and should normally not be called from\nplugins or applications.\nParameters:\na Gst.Element the state is lost of\nBrings the element to the lost state. The current state of the\nelement is copied to the pending state so that any call to\nGst.Element.get_state will return Gst.StateChangeReturn.ASYNC.\nAn ASYNC_START message is posted. If the element was PLAYING, it will\ngo to PAUSED. The element will be restored to its PLAYING state by\nthe parent pipeline when it prerolls again.\nThis is mostly used for elements that lost their preroll buffer\nin the Gst.State.PAUSED or Gst.State.PLAYING state after a flush,\nthey will go to their pending state again when a new preroll buffer is\nqueued. This function can only be called when the element is currently\nnot in error or an async state change.\nThis function is used internally and should normally not be called from\nplugins or applications.\nParameters:\na Gst.Element the state is lost of\n"});