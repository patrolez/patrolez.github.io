fragment_downloaded_cb({"url":"gstreamer/gstcaps.html#GstCapsIntersectMode","fragment":"\n\tGstCapsIntersectMode\n\nMembers\n\n\tGst.CapsIntersectMode\n\nMembers\n\n\tGst.CapsIntersectMode\n\nMembers\nModes of caps intersection\nGST_CAPS_INTERSECT_ZIG_ZAG tries to preserve overall order of both caps\nby iterating on the caps' structures as the following matrix shows:\nUsed when there is no explicit precedence of one caps over the other. e.g.\ntee's sink pad getcaps function, it will probe its src pad peers' for their\ncaps and intersect them with this mode.\nGST_CAPS_INTERSECT_FIRST is useful when an element wants to preserve\nanother element's caps priority order when intersecting with its own caps.\nExample: If caps1 is [A, B, C] and caps2 is [E, B, D, A], the result\nwould be [A, B], maintaining the first caps priority on the intersection.\nZig-zags over both caps.\nKeeps the first caps order.\nModes of caps intersection\nGst.CapsIntersectMode.ZIG_ZAG tries to preserve overall order of both caps\nby iterating on the caps' structures as the following matrix shows:\nUsed when there is no explicit precedence of one caps over the other. e.g.\ntee's sink pad getcaps function, it will probe its src pad peers' for their\ncaps and intersect them with this mode.\nGst.CapsIntersectMode.FIRST is useful when an element wants to preserve\nanother element's caps priority order when intersecting with its own caps.\nExample: If caps1 is [A, B, C] and caps2 is [E, B, D, A], the result\nwould be [A, B], maintaining the first caps priority on the intersection.\nZig-zags over both caps.\nKeeps the first caps order.\nModes of caps intersection\nGst.CapsIntersectMode.ZIG_ZAG tries to preserve overall order of both caps\nby iterating on the caps' structures as the following matrix shows:\nUsed when there is no explicit precedence of one caps over the other. e.g.\ntee's sink pad getcaps function, it will probe its src pad peers' for their\ncaps and intersect them with this mode.\nGst.CapsIntersectMode.FIRST is useful when an element wants to preserve\nanother element's caps priority order when intersecting with its own caps.\nExample: If caps1 is [A, B, C] and caps2 is [E, B, D, A], the result\nwould be [A, B], maintaining the first caps priority on the intersection.\nZig-zags over both caps.\nKeeps the first caps order.\n"});