fragment_downloaded_cb({"url":"gstreamer/gstplugin.html#gst_plugin_get_release_date_string","fragment":"\n\tgst_plugin_get_release_date_string\n\n\n\tGst.Plugin.prototype.get_release_date_string\n\n\n\tGst.Plugin.get_release_date_string\n\nGet the release date (and possibly time) in form of a string, if available.\nFor normal GStreamer plugin releases this will usually just be a date in\nthe form of \"YYYY-MM-DD\", while pre-releases and builds from git may contain\na time component after the date as well, in which case the string will be\nformatted like \"YYYY-MM-DDTHH:MMZ\" (e.g. \"2012-04-30T09:30Z\").\nThere may be plugins that do not have a valid release date set on them.\nParameters:\nplugin to get the release date of\nthe date string of the plugin, or NULL if not\navailable.\nGet the release date (and possibly time) in form of a string, if available.\nFor normal GStreamer plugin releases this will usually just be a date in\nthe form of \"YYYY-MM-DD\", while pre-releases and builds from git may contain\na time component after the date as well, in which case the string will be\nformatted like \"YYYY-MM-DDTHH:MMZ\" (e.g. \"2012-04-30T09:30Z\").\nThere may be plugins that do not have a valid release date set on them.\nParameters:\nplugin to get the release date of\nthe date string of the plugin, or null if not\navailable.\nGet the release date (and possibly time) in form of a string, if available.\nFor normal GStreamer plugin releases this will usually just be a date in\nthe form of \"YYYY-MM-DD\", while pre-releases and builds from git may contain\na time component after the date as well, in which case the string will be\nformatted like \"YYYY-MM-DDTHH:MMZ\" (e.g. \"2012-04-30T09:30Z\").\nThere may be plugins that do not have a valid release date set on them.\nParameters:\nplugin to get the release date of\nthe date string of the plugin, or None if not\navailable.\n"});