fragment_downloaded_cb({"url":"gstreamer/gstclock.html#GstClockClass::wait","fragment":"\n\twait\n\n\n\tvfunc_wait\n\n\n\tdo_wait\n\nPerform a blocking wait on the given GstClockEntry and return\nthe jitter.\nParameters:\nthe GstClock\nthe entry to wait on\na pointer that will contain the jitter\nthe result of the blocking wait. GST_CLOCK_EARLY will be returned\nif the current clock time is past the time of id, GST_CLOCK_OK if\nid was scheduled in time. GST_CLOCK_UNSCHEDULED if id was\nunscheduled with gst_clock_id_unschedule.\nPerform a blocking wait on the given Gst.ClockEntry and return\nthe jitter.\nParameters:\nthe Gst.Clock\nthe entry to wait on\nReturns a tuple made of:\nthe result of the blocking wait. Gst.ClockReturn.EARLY will be returned\nif the current clock time is past the time of id, Gst.ClockReturn.OK if\nid was scheduled in time. Gst.ClockReturn.UNSCHEDULED if id was\nunscheduled with Gst.Clock.prototype.id_unschedule.\nthe result of the blocking wait. Gst.ClockReturn.EARLY will be returned\nif the current clock time is past the time of id, Gst.ClockReturn.OK if\nid was scheduled in time. Gst.ClockReturn.UNSCHEDULED if id was\nunscheduled with Gst.Clock.prototype.id_unschedule.\nPerform a blocking wait on the given Gst.ClockEntry and return\nthe jitter.\nParameters:\nthe Gst.Clock\nthe entry to wait on\nReturns a tuple made of:\nthe result of the blocking wait. Gst.ClockReturn.EARLY will be returned\nif the current clock time is past the time of id, Gst.ClockReturn.OK if\nid was scheduled in time. Gst.ClockReturn.UNSCHEDULED if id was\nunscheduled with Gst.Clock.id_unschedule.\nthe result of the blocking wait. Gst.ClockReturn.EARLY will be returned\nif the current clock time is past the time of id, Gst.ClockReturn.OK if\nid was scheduled in time. Gst.ClockReturn.UNSCHEDULED if id was\nunscheduled with Gst.Clock.id_unschedule.\n"});