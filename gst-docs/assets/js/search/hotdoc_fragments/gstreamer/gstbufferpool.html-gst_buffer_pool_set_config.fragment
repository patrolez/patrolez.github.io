fragment_downloaded_cb({"url":"gstreamer/gstbufferpool.html#gst_buffer_pool_set_config","fragment":"\n\tgst_buffer_pool_set_config\n\n\n\tGst.BufferPool.prototype.set_config\n\n\n\tGst.BufferPool.set_config\n\nSets the configuration of the pool. If the pool is already configured, and\nthe configuration hasn't changed, this function will return TRUE. If the\npool is active, this method will return FALSE and active configuration\nwill remain. Buffers allocated from this pool must be returned or else this\nfunction will do nothing and return FALSE.\nconfig is a GstStructure that contains the configuration parameters for\nthe pool. A default and mandatory set of parameters can be configured with\ngst_buffer_pool_config_set_params, gst_buffer_pool_config_set_allocator\nand gst_buffer_pool_config_add_option.\nIf the parameters in config can not be set exactly, this function returns\nFALSE and will try to update as much state as possible. The new state can\nthen be retrieved and refined with gst_buffer_pool_get_config.\nThis function takes ownership of config.\nParameters:\na GstBufferPool\na GstStructure\nTRUE when the configuration could be set.\nSets the configuration of the pool. If the pool is already configured, and\nthe configuration hasn't changed, this function will return true. If the\npool is active, this method will return false and active configuration\nwill remain. Buffers allocated from this pool must be returned or else this\nfunction will do nothing and return false.\nconfig is a Gst.Structure that contains the configuration parameters for\nthe pool. A default and mandatory set of parameters can be configured with\nGst.BufferPool.prototype.config_set_params, Gst.BufferPool.prototype.config_set_allocator\nand Gst.BufferPool.prototype.config_add_option.\nIf the parameters in config can not be set exactly, this function returns\nfalse and will try to update as much state as possible. The new state can\nthen be retrieved and refined with Gst.BufferPool.prototype.get_config.\nThis function takes ownership of config.\nParameters:\na Gst.BufferPool\na Gst.Structure\ntrue when the configuration could be set.\nSets the configuration of the pool. If the pool is already configured, and\nthe configuration hasn't changed, this function will return True. If the\npool is active, this method will return False and active configuration\nwill remain. Buffers allocated from this pool must be returned or else this\nfunction will do nothing and return False.\nconfig is a Gst.Structure that contains the configuration parameters for\nthe pool. A default and mandatory set of parameters can be configured with\nGst.BufferPool.config_set_params, Gst.BufferPool.config_set_allocator\nand Gst.BufferPool.config_add_option.\nIf the parameters in config can not be set exactly, this function returns\nFalse and will try to update as much state as possible. The new state can\nthen be retrieved and refined with Gst.BufferPool.get_config.\nThis function takes ownership of config.\nParameters:\na Gst.BufferPool\na Gst.Structure\nTrue when the configuration could be set.\n"});