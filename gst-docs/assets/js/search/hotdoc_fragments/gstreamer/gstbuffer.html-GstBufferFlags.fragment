fragment_downloaded_cb({"url":"gstreamer/gstbuffer.html#GstBufferFlags","fragment":"\n\tGstBufferFlags\n\nMembers\n\n\tGst.BufferFlags\n\nMembers\n\n\tGst.BufferFlags\n\nMembers\nA set of buffer flags used to describe properties of a GstBuffer.\nthe buffer is live data and should be discarded in\nthe PAUSED state.\nthe buffer contains data that should be dropped\nbecause it will be clipped against the segment\nboundaries or because it does not contain data\nthat should be shown to the user.\nthe buffer marks a data discontinuity in the stream.\nThis typically occurs after a seek or a dropped buffer\nfrom a live or network source.\nthe buffer timestamps might have a discontinuity\nand this buffer is a good point to resynchronize.\nthe buffer data is corrupted.\nthe buffer contains a media specific marker. for\nvideo this is the end of a frame boundary, for audio\nthis is the start of a talkspurt. for RTP\npackets this matches the marker flag in the\nRTP packet header.\nthe buffer contains header information that is\nneeded to decode the following data.\nthe buffer has been created to fill a gap in the\nstream and contains media neutral data (elements can\nswitch to optimized code path that ignores the buffer\ncontent).\nthe buffer can be dropped without breaking the\nstream, for example to reduce bandwidth.\nthis unit cannot be decoded independently.\nthis flag is set when memory of the buffer\nis added/removed\nElements which write to disk or permanent storage should ensure the data\nis synced after writing the contents of this buffer.\nThis buffer is important and should not be dropped.\nThis can be used to mark important buffers, e.g. to flag RTP packets\ncarrying keyframes or codec setup data for RTP Forward Error Correction\npurposes, or to prevent still video frames from being dropped by elements\ndue to QoS.\nadditional media specific flags can be added starting from\nthis flag.\nA set of buffer flags used to describe properties of a Gst.Buffer.\nthe buffer is live data and should be discarded in\nthe PAUSED state.\nthe buffer contains data that should be dropped\nbecause it will be clipped against the segment\nboundaries or because it does not contain data\nthat should be shown to the user.\nthe buffer marks a data discontinuity in the stream.\nThis typically occurs after a seek or a dropped buffer\nfrom a live or network source.\nthe buffer timestamps might have a discontinuity\nand this buffer is a good point to resynchronize.\nthe buffer data is corrupted.\nthe buffer contains a media specific marker. for\nvideo this is the end of a frame boundary, for audio\nthis is the start of a talkspurt. for RTP\npackets this matches the marker flag in the\nRTP packet header.\nthe buffer contains header information that is\nneeded to decode the following data.\nthe buffer has been created to fill a gap in the\nstream and contains media neutral data (elements can\nswitch to optimized code path that ignores the buffer\ncontent).\nthe buffer can be dropped without breaking the\nstream, for example to reduce bandwidth.\nthis unit cannot be decoded independently.\nthis flag is set when memory of the buffer\nis added/removed\nElements which write to disk or permanent storage should ensure the data\nis synced after writing the contents of this buffer.\nThis buffer is important and should not be dropped.\nThis can be used to mark important buffers, e.g. to flag RTP packets\ncarrying keyframes or codec setup data for RTP Forward Error Correction\npurposes, or to prevent still video frames from being dropped by elements\ndue to QoS.\nadditional media specific flags can be added starting from\nthis flag.\nA set of buffer flags used to describe properties of a Gst.Buffer.\nthe buffer is live data and should be discarded in\nthe PAUSED state.\nthe buffer contains data that should be dropped\nbecause it will be clipped against the segment\nboundaries or because it does not contain data\nthat should be shown to the user.\nthe buffer marks a data discontinuity in the stream.\nThis typically occurs after a seek or a dropped buffer\nfrom a live or network source.\nthe buffer timestamps might have a discontinuity\nand this buffer is a good point to resynchronize.\nthe buffer data is corrupted.\nthe buffer contains a media specific marker. for\nvideo this is the end of a frame boundary, for audio\nthis is the start of a talkspurt. for RTP\npackets this matches the marker flag in the\nRTP packet header.\nthe buffer contains header information that is\nneeded to decode the following data.\nthe buffer has been created to fill a gap in the\nstream and contains media neutral data (elements can\nswitch to optimized code path that ignores the buffer\ncontent).\nthe buffer can be dropped without breaking the\nstream, for example to reduce bandwidth.\nthis unit cannot be decoded independently.\nthis flag is set when memory of the buffer\nis added/removed\nElements which write to disk or permanent storage should ensure the data\nis synced after writing the contents of this buffer.\nThis buffer is important and should not be dropped.\nThis can be used to mark important buffers, e.g. to flag RTP packets\ncarrying keyframes or codec setup data for RTP Forward Error Correction\npurposes, or to prevent still video frames from being dropped by elements\ndue to QoS.\nadditional media specific flags can be added starting from\nthis flag.\n"});