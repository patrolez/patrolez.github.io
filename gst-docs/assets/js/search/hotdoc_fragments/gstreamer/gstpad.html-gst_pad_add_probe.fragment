fragment_downloaded_cb({"url":"gstreamer/gstpad.html#gst_pad_add_probe","fragment":"\n\tgst_pad_add_probe\n\n\n\tGst.Pad.prototype.add_probe\n\n\n\tGst.Pad.add_probe\n\nBe notified of different states of pads. The provided callback is called for\nevery state that matches mask.\nProbes are called in groups: First GST_PAD_PROBE_TYPE_BLOCK probes are\ncalled, then others, then finally GST_PAD_PROBE_TYPE_IDLE. The only\nexception here are GST_PAD_PROBE_TYPE_IDLE probes that are called\nimmediately if the pad is already idle while calling gst_pad_add_probe.\nIn each of the groups, probes are called in the order in which they were\nadded.\nParameters:\nthe GstPad to add the probe to\nthe probe mask\nGstPadProbeCallback that will be called with notifications of\nthe pad state\nuser data passed to the callback\nGDestroyNotify for user_data\nan id or 0 if no probe is pending. The id can be used to remove the\nprobe with gst_pad_remove_probe. When using GST_PAD_PROBE_TYPE_IDLE it can\nhappen that the probe can be run immediately and if the probe returns\nGST_PAD_PROBE_REMOVE this functions returns 0.\nMT safe.\nBe notified of different states of pads. The provided callback is called for\nevery state that matches mask.\nProbes are called in groups: First GST_PAD_PROBE_TYPE_BLOCK probes are\ncalled, then others, then finally GST_PAD_PROBE_TYPE_IDLE. The only\nexception here are GST_PAD_PROBE_TYPE_IDLE probes that are called\nimmediately if the pad is already idle while calling Gst.Pad.prototype.add_probe.\nIn each of the groups, probes are called in the order in which they were\nadded.\nParameters:\nthe Gst.Pad to add the probe to\nthe probe mask\nGst.PadProbeCallback that will be called with notifications of\nthe pad state\nuser data passed to the callback\nan id or 0 if no probe is pending. The id can be used to remove the\nprobe with Gst.Pad.prototype.remove_probe. When using GST_PAD_PROBE_TYPE_IDLE it can\nhappen that the probe can be run immediately and if the probe returns\nGST_PAD_PROBE_REMOVE this functions returns 0.\nMT safe.\nBe notified of different states of pads. The provided callback is called for\nevery state that matches mask.\nProbes are called in groups: First GST_PAD_PROBE_TYPE_BLOCK probes are\ncalled, then others, then finally GST_PAD_PROBE_TYPE_IDLE. The only\nexception here are GST_PAD_PROBE_TYPE_IDLE probes that are called\nimmediately if the pad is already idle while calling Gst.Pad.add_probe.\nIn each of the groups, probes are called in the order in which they were\nadded.\nParameters:\nthe Gst.Pad to add the probe to\nthe probe mask\nGst.PadProbeCallback that will be called with notifications of\nthe pad state\nuser data passed to the callback\nan id or 0 if no probe is pending. The id can be used to remove the\nprobe with Gst.Pad.remove_probe. When using GST_PAD_PROBE_TYPE_IDLE it can\nhappen that the probe can be run immediately and if the probe returns\nGST_PAD_PROBE_REMOVE this functions returns 0.\nMT safe.\n"});