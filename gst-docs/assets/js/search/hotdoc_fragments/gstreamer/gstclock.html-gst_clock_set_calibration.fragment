fragment_downloaded_cb({"url":"gstreamer/gstclock.html#gst_clock_set_calibration","fragment":"\n\tgst_clock_set_calibration\n\n\n\tGst.Clock.prototype.set_calibration\n\n\n\tGst.Clock.set_calibration\n\nAdjusts the rate and time of clock. A rate of 1/1 is the normal speed of\nthe clock. Values bigger than 1/1 make the clock go faster.\ninternal and external are calibration parameters that arrange that\ngst_clock_get_time should have been external at internal time internal.\nThis internal time should not be in the future; that is, it should be less\nthan the value of gst_clock_get_internal_time when this function is called.\nSubsequent calls to gst_clock_get_time will return clock times computed as\nfollows:\nThis formula is implemented in gst_clock_adjust_unlocked. Of course, it\ntries to do the integer arithmetic as precisely as possible.\nNote that gst_clock_get_time always returns increasing values so when you\nmove the clock backwards, gst_clock_get_time will report the previous value\nuntil the clock catches up.\nParameters:\na GstClock to calibrate\na reference internal time\na reference external time\nthe numerator of the rate of the clock relative to its\ninternal time\nthe denominator of the rate of the clock\nAdjusts the rate and time of clock. A rate of 1/1 is the normal speed of\nthe clock. Values bigger than 1/1 make the clock go faster.\ninternal and external are calibration parameters that arrange that\nGst.Clock.prototype.get_time should have been external at internal time internal.\nThis internal time should not be in the future; that is, it should be less\nthan the value of Gst.Clock.prototype.get_internal_time when this function is called.\nSubsequent calls to Gst.Clock.prototype.get_time will return clock times computed as\nfollows:\nThis formula is implemented in Gst.Clock.prototype.adjust_unlocked. Of course, it\ntries to do the integer arithmetic as precisely as possible.\nNote that Gst.Clock.prototype.get_time always returns increasing values so when you\nmove the clock backwards, Gst.Clock.prototype.get_time will report the previous value\nuntil the clock catches up.\nParameters:\na Gst.Clock to calibrate\na reference internal time\na reference external time\nthe numerator of the rate of the clock relative to its\ninternal time\nthe denominator of the rate of the clock\nAdjusts the rate and time of clock. A rate of 1/1 is the normal speed of\nthe clock. Values bigger than 1/1 make the clock go faster.\ninternal and external are calibration parameters that arrange that\nGst.Clock.get_time should have been external at internal time internal.\nThis internal time should not be in the future; that is, it should be less\nthan the value of Gst.Clock.get_internal_time when this function is called.\nSubsequent calls to Gst.Clock.get_time will return clock times computed as\nfollows:\nThis formula is implemented in Gst.Clock.adjust_unlocked. Of course, it\ntries to do the integer arithmetic as precisely as possible.\nNote that Gst.Clock.get_time always returns increasing values so when you\nmove the clock backwards, Gst.Clock.get_time will report the previous value\nuntil the clock catches up.\nParameters:\na Gst.Clock to calibrate\na reference internal time\na reference external time\nthe numerator of the rate of the clock relative to its\ninternal time\nthe denominator of the rate of the clock\n"});