fragment_downloaded_cb({"url":"gstreamer/gstevent.html#GstEventType","fragment":"\n\tGstEventType\n\nMembers\n\n\tGst.EventType\n\nMembers\n\n\tGst.EventType\n\nMembers\nGstEventType lists the standard event types that can be sent in a pipeline.\nThe custom event types can be used for private messages between elements\nthat can't be expressed using normal\nGStreamer buffer passing semantics. Custom events carry an arbitrary\nGstStructure.\nSpecific custom events are distinguished by the name of the structure.\nunknown event.\nStart a flush operation. This event clears all data\nfrom the pipeline and unblock all streaming threads.\nStop a flush operation. This event resets the\nrunning-time of the pipeline.\nEvent to mark the start of a new stream. Sent before any\nother serialized event and only sent at the start of a new stream,\nnot after flushing seeks.\nGstCaps event. Notify the pad of a new media type.\nA new media segment follows in the dataflow. The\nsegment events contains information for clipping buffers and\nconverting buffer timestamps to running-time and\nstream-time.\nA new GstStreamCollection is available (Since: 1.10)\nA new set of metadata tags has been found in the stream.\nNotification of buffering requirements. Currently not\nused yet.\nAn event that sinks turn into a message. Used to\nsend messages that should be emitted in sync with\nrendering.\nIndicates that there is no more data for\nthe stream group ID in the message. Sent before EOS\nin some instances and should be handled mostly the same. (Since: 1.10)\nEnd-Of-Stream. No more data is to be expected to follow\nwithout either a STREAM_START event, or a FLUSH_STOP and a SEGMENT\nevent.\nAn event which indicates that a new table of contents (TOC)\nwas found or updated.\nAn event which indicates that new or updated\nencryption information has been found in the stream.\nMarks the end of a segment playback.\nMarks a gap in the datastream.\nNotify downstream that a playback rate override\nshould be applied as soon as possible. (Since: 1.18)\nA quality message. Used to indicate to upstream elements\nthat the downstream elements should adjust their processing\nrate.\nA request for a new playback position and rate.\nNavigation events are usually used for communicating\nuser requests, such as mouse or keyboard movements,\nto upstream elements.\nNotification of new latency adjustment. Sinks will use\nthe latency information to adjust their synchronisation.\nA request for stepping through the media. Sinks will usually\nexecute the step operation.\nA request for upstream renegotiating caps and reconfiguring.\nA request for a new playback position based on TOC\nentry's UID.\nA request to select one or more streams (Since: 1.10)\nSent by the pipeline to notify elements that handle the\ninstant-rate-change event about the running-time when\nthe rate multiplier should be applied (or was applied). (Since: 1.18)\nUpstream custom event\nDownstream custom event that travels in the\ndata flow.\nCustom out-of-band downstream event.\nCustom sticky downstream event.\nCustom upstream or downstream event.\nIn-band when travelling downstream.\nCustom upstream or downstream out-of-band event.\nGst.EventType lists the standard event types that can be sent in a pipeline.\nThe custom event types can be used for private messages between elements\nthat can't be expressed using normal\nGStreamer buffer passing semantics. Custom events carry an arbitrary\nGst.Structure.\nSpecific custom events are distinguished by the name of the structure.\nunknown event.\nStart a flush operation. This event clears all data\nfrom the pipeline and unblock all streaming threads.\nStop a flush operation. This event resets the\nrunning-time of the pipeline.\nEvent to mark the start of a new stream. Sent before any\nother serialized event and only sent at the start of a new stream,\nnot after flushing seeks.\nGst.Caps event. Notify the pad of a new media type.\nA new media segment follows in the dataflow. The\nsegment events contains information for clipping buffers and\nconverting buffer timestamps to running-time and\nstream-time.\nA new Gst.StreamCollection is available (Since: 1.10)\nA new set of metadata tags has been found in the stream.\nNotification of buffering requirements. Currently not\nused yet.\nAn event that sinks turn into a message. Used to\nsend messages that should be emitted in sync with\nrendering.\nIndicates that there is no more data for\nthe stream group ID in the message. Sent before EOS\nin some instances and should be handled mostly the same. (Since: 1.10)\nEnd-Of-Stream. No more data is to be expected to follow\nwithout either a STREAM_START event, or a FLUSH_STOP and a SEGMENT\nevent.\nAn event which indicates that a new table of contents (TOC)\nwas found or updated.\nAn event which indicates that new or updated\nencryption information has been found in the stream.\nMarks the end of a segment playback.\nMarks a gap in the datastream.\nNotify downstream that a playback rate override\nshould be applied as soon as possible. (Since: 1.18)\nA quality message. Used to indicate to upstream elements\nthat the downstream elements should adjust their processing\nrate.\nA request for a new playback position and rate.\nNavigation events are usually used for communicating\nuser requests, such as mouse or keyboard movements,\nto upstream elements.\nNotification of new latency adjustment. Sinks will use\nthe latency information to adjust their synchronisation.\nA request for stepping through the media. Sinks will usually\nexecute the step operation.\nA request for upstream renegotiating caps and reconfiguring.\nA request for a new playback position based on TOC\nentry's UID.\nA request to select one or more streams (Since: 1.10)\nSent by the pipeline to notify elements that handle the\ninstant-rate-change event about the running-time when\nthe rate multiplier should be applied (or was applied). (Since: 1.18)\nUpstream custom event\nDownstream custom event that travels in the\ndata flow.\nCustom out-of-band downstream event.\nCustom sticky downstream event.\nCustom upstream or downstream event.\nIn-band when travelling downstream.\nCustom upstream or downstream out-of-band event.\nGst.EventType lists the standard event types that can be sent in a pipeline.\nThe custom event types can be used for private messages between elements\nthat can't be expressed using normal\nGStreamer buffer passing semantics. Custom events carry an arbitrary\nGst.Structure.\nSpecific custom events are distinguished by the name of the structure.\nunknown event.\nStart a flush operation. This event clears all data\nfrom the pipeline and unblock all streaming threads.\nStop a flush operation. This event resets the\nrunning-time of the pipeline.\nEvent to mark the start of a new stream. Sent before any\nother serialized event and only sent at the start of a new stream,\nnot after flushing seeks.\nGst.Caps event. Notify the pad of a new media type.\nA new media segment follows in the dataflow. The\nsegment events contains information for clipping buffers and\nconverting buffer timestamps to running-time and\nstream-time.\nA new Gst.StreamCollection is available (Since: 1.10)\nA new set of metadata tags has been found in the stream.\nNotification of buffering requirements. Currently not\nused yet.\nAn event that sinks turn into a message. Used to\nsend messages that should be emitted in sync with\nrendering.\nIndicates that there is no more data for\nthe stream group ID in the message. Sent before EOS\nin some instances and should be handled mostly the same. (Since: 1.10)\nEnd-Of-Stream. No more data is to be expected to follow\nwithout either a STREAM_START event, or a FLUSH_STOP and a SEGMENT\nevent.\nAn event which indicates that a new table of contents (TOC)\nwas found or updated.\nAn event which indicates that new or updated\nencryption information has been found in the stream.\nMarks the end of a segment playback.\nMarks a gap in the datastream.\nNotify downstream that a playback rate override\nshould be applied as soon as possible. (Since: 1.18)\nA quality message. Used to indicate to upstream elements\nthat the downstream elements should adjust their processing\nrate.\nA request for a new playback position and rate.\nNavigation events are usually used for communicating\nuser requests, such as mouse or keyboard movements,\nto upstream elements.\nNotification of new latency adjustment. Sinks will use\nthe latency information to adjust their synchronisation.\nA request for stepping through the media. Sinks will usually\nexecute the step operation.\nA request for upstream renegotiating caps and reconfiguring.\nA request for a new playback position based on TOC\nentry's UID.\nA request to select one or more streams (Since: 1.10)\nSent by the pipeline to notify elements that handle the\ninstant-rate-change event about the running-time when\nthe rate multiplier should be applied (or was applied). (Since: 1.18)\nUpstream custom event\nDownstream custom event that travels in the\ndata flow.\nCustom out-of-band downstream event.\nCustom sticky downstream event.\nCustom upstream or downstream event.\nIn-band when travelling downstream.\nCustom upstream or downstream out-of-band event.\n"});