fragment_downloaded_cb({"url":"gstreamer/gstpadtemplate.html#gstpadtemplate-page","fragment":"GstPadTemplate\nPadtemplates describe the possible media types a pad or an elementfactory can\nhandle. This allows for both inspection of handled types before loading the\nelement plugin as well as identifying pads on elements that are not yet\ncreated (request or sometimes pads).\nPad and PadTemplates have GstCaps attached to it to describe the media type\nthey are capable of dealing with. gst_pad_template_get_caps or\nGST_PAD_TEMPLATE_CAPS are used to get the caps of a padtemplate. It's not\npossible to modify the caps of a padtemplate after creation.\nPadTemplates have a GstPadPresence property which identifies the lifetime\nof the pad and that can be retrieved with GST_PAD_TEMPLATE_PRESENCE. Also\nthe direction of the pad can be retrieved from the GstPadTemplate with\nGST_PAD_TEMPLATE_DIRECTION.\nThe GST_PAD_TEMPLATE_NAME_TEMPLATE () is important for GST_PAD_REQUEST pads\nbecause it has to be used as the name in the gst_element_request_pad_simple\ncall to instantiate a pad from this template.\nPadtemplates can be created with gst_pad_template_new or with\ngst_static_pad_template_get (), which creates a GstPadTemplate from a\nGstStaticPadTemplate that can be filled with the\nconvenient GST_STATIC_PAD_TEMPLATE macro.\nA padtemplate can be used to create a pad (see gst_pad_new_from_template\nor gst_pad_new_from_static_template ()) or to add to an element class\n(see gst_element_class_add_static_pad_template ()).\nThe following code example shows the code to create a pad from a padtemplate.\nThe following example shows you how to add the padtemplate to an\nelement class, this is usually done in the class_init of the class:\n"});