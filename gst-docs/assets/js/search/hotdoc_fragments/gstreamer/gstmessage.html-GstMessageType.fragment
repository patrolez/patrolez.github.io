fragment_downloaded_cb({"url":"gstreamer/gstmessage.html#GstMessageType","fragment":"\n\tGstMessageType\n\nMembers\n\n\tGst.MessageType\n\nMembers\n\n\tGst.MessageType\n\nMembers\nThe different message types that are available.\nan undefined message\nend-of-stream reached in a pipeline. The application will\nonly receive this message in the PLAYING state and every time it sets a\npipeline to PLAYING that is in the EOS state. The application can perform a\nflushing seek in the pipeline, which will undo the EOS state again.\nan error occurred. When the application receives an error\nmessage it should stop playback of the pipeline and not assume that more\ndata will be played. It is possible to specify a redirection url to the error\nmessages by setting a redirect-location field into the error message, application\nor high level bins might use the information as required.\na warning occurred.\nan info message occurred\na tag was found.\nthe pipeline is buffering. When the application\nreceives a buffering message in the PLAYING state for a non-live pipeline it\nmust PAUSE the pipeline until the buffering completes, when the percentage\nfield in the message is 100%. For live pipelines, no action must be\nperformed and the buffering percentage can be used to inform the user about\nthe progress.\na state change happened\nan element changed state in a streaming thread.\nThis message is deprecated.\na stepping operation finished.\nan element notifies its capability of providing\na clock. This message is used internally and\nnever forwarded to the application.\nThe current clock as selected by the pipeline became\nunusable. The pipeline will select a new clock on\nthe next PLAYING state change. The application\nshould set the pipeline to PAUSED and back to\nPLAYING when this message is received.\na new clock was selected in the pipeline.\nthe structure of the pipeline changed. This\nmessage is used internally and never forwarded to the application.\nstatus about a stream, emitted when it starts,\nstops, errors, etc..\nmessage posted by the application, possibly\nvia an application-specific element.\nelement-specific message, see the specific element's\ndocumentation\npipeline started playback of a segment. This\nmessage is used internally and never forwarded to the application.\npipeline completed playback of a segment. This\nmessage is forwarded to the application after all elements that posted\nGST_MESSAGE_SEGMENT_START posted a GST_MESSAGE_SEGMENT_DONE message.\nThe duration of a pipeline changed. The\napplication can get the new duration with a duration query.\nPosted by elements when their latency changes. The\napplication should recalculate and distribute a new latency.\nPosted by elements when they start an ASYNC\nGstStateChange. This message is not forwarded to the application but is used\ninternally.\nPosted by elements when they complete an ASYNC\nGstStateChange. The application will only receive this message from the toplevel\npipeline.\nPosted by elements when they want the pipeline to\nchange state. This message is a suggestion to the application which can\ndecide to perform the state change on (part of) the pipeline.\nA stepping operation was started.\nA buffer was dropped or an element changed its processing\nstrategy for Quality of Service reasons.\nA progress message.\nA new table of contents (TOC) was found or previously found TOC\nwas updated.\nMessage to request resetting the pipeline's\nrunning time from the pipeline. This is an internal message which\napplications will likely never receive.\nMessage indicating start of a new stream. Useful\ne.g. when using playbin in gapless playback mode, to get notified when\nthe next title actually starts playing (which will be some time after\nthe URI for the next title has been set).\nMessage indicating that an element wants a specific context (Since: 1.2)\nMessage indicating that an element created a context (Since: 1.2)\nMessage is an extended message type (see below).\nThese extended message IDs can't be used directly with mask-based API\nlike gst_bus_poll or gst_bus_timed_pop_filtered, but you can still\nfilter for GST_MESSAGE_EXTENDED and then check the result for the\nspecific type. (Since: 1.4)\nMessage indicating a GstDevice was added to\na GstDeviceProvider (Since: 1.4)\nMessage indicating a GstDevice was removed\nfrom a GstDeviceProvider (Since: 1.4)\nMessage indicating a GObject property has\nchanged (Since: 1.10)\nMessage indicating a new GstStreamCollection\nis available (Since: 1.10)\nMessage indicating the active selection of\nGstStream has changed (Since: 1.10)\nMessage indicating to request the application to\ntry to play the given URL(s). Useful if for example a HTTP 302/303\nresponse is received with a non-HTTP URL inside. (Since: 1.10)\nMessage indicating a GstDevice was changed\na GstDeviceProvider (Since: 1.16)\nMessage sent by elements to request the\nrunning time from the pipeline when an instant rate change should\nbe applied (which may be in the past when the answer arrives). (Since: 1.18)\nmask for all of the above messages.\nThe different message types that are available.\nan undefined message\nend-of-stream reached in a pipeline. The application will\nonly receive this message in the PLAYING state and every time it sets a\npipeline to PLAYING that is in the EOS state. The application can perform a\nflushing seek in the pipeline, which will undo the EOS state again.\nan error occurred. When the application receives an error\nmessage it should stop playback of the pipeline and not assume that more\ndata will be played. It is possible to specify a redirection url to the error\nmessages by setting a redirect-location field into the error message, application\nor high level bins might use the information as required.\na warning occurred.\nan info message occurred\na tag was found.\nthe pipeline is buffering. When the application\nreceives a buffering message in the PLAYING state for a non-live pipeline it\nmust PAUSE the pipeline until the buffering completes, when the percentage\nfield in the message is 100%. For live pipelines, no action must be\nperformed and the buffering percentage can be used to inform the user about\nthe progress.\na state change happened\nan element changed state in a streaming thread.\nThis message is deprecated.\na stepping operation finished.\nan element notifies its capability of providing\na clock. This message is used internally and\nnever forwarded to the application.\nThe current clock as selected by the pipeline became\nunusable. The pipeline will select a new clock on\nthe next PLAYING state change. The application\nshould set the pipeline to PAUSED and back to\nPLAYING when this message is received.\na new clock was selected in the pipeline.\nthe structure of the pipeline changed. This\nmessage is used internally and never forwarded to the application.\nstatus about a stream, emitted when it starts,\nstops, errors, etc..\nmessage posted by the application, possibly\nvia an application-specific element.\nelement-specific message, see the specific element's\ndocumentation\npipeline started playback of a segment. This\nmessage is used internally and never forwarded to the application.\npipeline completed playback of a segment. This\nmessage is forwarded to the application after all elements that posted\nGST_MESSAGE_SEGMENT_START posted a GST_MESSAGE_SEGMENT_DONE message.\nThe duration of a pipeline changed. The\napplication can get the new duration with a duration query.\nPosted by elements when their latency changes. The\napplication should recalculate and distribute a new latency.\nPosted by elements when they start an ASYNC\nGst.StateChange. This message is not forwarded to the application but is used\ninternally.\nPosted by elements when they complete an ASYNC\nGst.StateChange. The application will only receive this message from the toplevel\npipeline.\nPosted by elements when they want the pipeline to\nchange state. This message is a suggestion to the application which can\ndecide to perform the state change on (part of) the pipeline.\nA stepping operation was started.\nA buffer was dropped or an element changed its processing\nstrategy for Quality of Service reasons.\nA progress message.\nA new table of contents (TOC) was found or previously found TOC\nwas updated.\nMessage to request resetting the pipeline's\nrunning time from the pipeline. This is an internal message which\napplications will likely never receive.\nMessage indicating start of a new stream. Useful\ne.g. when using playbin in gapless playback mode, to get notified when\nthe next title actually starts playing (which will be some time after\nthe URI for the next title has been set).\nMessage indicating that an element wants a specific context (Since: 1.2)\nMessage indicating that an element created a context (Since: 1.2)\nMessage is an extended message type (see below).\nThese extended message IDs can't be used directly with mask-based API\nlike Gst.Bus.prototype.poll or Gst.Bus.prototype.timed_pop_filtered, but you can still\nfilter for GST_MESSAGE_EXTENDED and then check the result for the\nspecific type. (Since: 1.4)\nMessage indicating a Gst.Device was added to\na Gst.DeviceProvider (Since: 1.4)\nMessage indicating a Gst.Device was removed\nfrom a Gst.DeviceProvider (Since: 1.4)\nMessage indicating a GObject.Object property has\nchanged (Since: 1.10)\nMessage indicating a new Gst.StreamCollection\nis available (Since: 1.10)\nMessage indicating the active selection of\nGst.Stream has changed (Since: 1.10)\nMessage indicating to request the application to\ntry to play the given URL(s). Useful if for example a HTTP 302/303\nresponse is received with a non-HTTP URL inside. (Since: 1.10)\nMessage indicating a Gst.Device was changed\na Gst.DeviceProvider (Since: 1.16)\nMessage sent by elements to request the\nrunning time from the pipeline when an instant rate change should\nbe applied (which may be in the past when the answer arrives). (Since: 1.18)\nmask for all of the above messages.\nThe different message types that are available.\nan undefined message\nend-of-stream reached in a pipeline. The application will\nonly receive this message in the PLAYING state and every time it sets a\npipeline to PLAYING that is in the EOS state. The application can perform a\nflushing seek in the pipeline, which will undo the EOS state again.\nan error occurred. When the application receives an error\nmessage it should stop playback of the pipeline and not assume that more\ndata will be played. It is possible to specify a redirection url to the error\nmessages by setting a redirect-location field into the error message, application\nor high level bins might use the information as required.\na warning occurred.\nan info message occurred\na tag was found.\nthe pipeline is buffering. When the application\nreceives a buffering message in the PLAYING state for a non-live pipeline it\nmust PAUSE the pipeline until the buffering completes, when the percentage\nfield in the message is 100%. For live pipelines, no action must be\nperformed and the buffering percentage can be used to inform the user about\nthe progress.\na state change happened\nan element changed state in a streaming thread.\nThis message is deprecated.\na stepping operation finished.\nan element notifies its capability of providing\na clock. This message is used internally and\nnever forwarded to the application.\nThe current clock as selected by the pipeline became\nunusable. The pipeline will select a new clock on\nthe next PLAYING state change. The application\nshould set the pipeline to PAUSED and back to\nPLAYING when this message is received.\na new clock was selected in the pipeline.\nthe structure of the pipeline changed. This\nmessage is used internally and never forwarded to the application.\nstatus about a stream, emitted when it starts,\nstops, errors, etc..\nmessage posted by the application, possibly\nvia an application-specific element.\nelement-specific message, see the specific element's\ndocumentation\npipeline started playback of a segment. This\nmessage is used internally and never forwarded to the application.\npipeline completed playback of a segment. This\nmessage is forwarded to the application after all elements that posted\nGST_MESSAGE_SEGMENT_START posted a GST_MESSAGE_SEGMENT_DONE message.\nThe duration of a pipeline changed. The\napplication can get the new duration with a duration query.\nPosted by elements when their latency changes. The\napplication should recalculate and distribute a new latency.\nPosted by elements when they start an ASYNC\nGst.StateChange. This message is not forwarded to the application but is used\ninternally.\nPosted by elements when they complete an ASYNC\nGst.StateChange. The application will only receive this message from the toplevel\npipeline.\nPosted by elements when they want the pipeline to\nchange state. This message is a suggestion to the application which can\ndecide to perform the state change on (part of) the pipeline.\nA stepping operation was started.\nA buffer was dropped or an element changed its processing\nstrategy for Quality of Service reasons.\nA progress message.\nA new table of contents (TOC) was found or previously found TOC\nwas updated.\nMessage to request resetting the pipeline's\nrunning time from the pipeline. This is an internal message which\napplications will likely never receive.\nMessage indicating start of a new stream. Useful\ne.g. when using playbin in gapless playback mode, to get notified when\nthe next title actually starts playing (which will be some time after\nthe URI for the next title has been set).\nMessage indicating that an element wants a specific context (Since: 1.2)\nMessage indicating that an element created a context (Since: 1.2)\nMessage is an extended message type (see below).\nThese extended message IDs can't be used directly with mask-based API\nlike Gst.Bus.poll or Gst.Bus.timed_pop_filtered, but you can still\nfilter for GST_MESSAGE_EXTENDED and then check the result for the\nspecific type. (Since: 1.4)\nMessage indicating a Gst.Device was added to\na Gst.DeviceProvider (Since: 1.4)\nMessage indicating a Gst.Device was removed\nfrom a Gst.DeviceProvider (Since: 1.4)\nMessage indicating a GObject.Object property has\nchanged (Since: 1.10)\nMessage indicating a new Gst.StreamCollection\nis available (Since: 1.10)\nMessage indicating the active selection of\nGst.Stream has changed (Since: 1.10)\nMessage indicating to request the application to\ntry to play the given URL(s). Useful if for example a HTTP 302/303\nresponse is received with a non-HTTP URL inside. (Since: 1.10)\nMessage indicating a Gst.Device was changed\na Gst.DeviceProvider (Since: 1.16)\nMessage sent by elements to request the\nrunning time from the pipeline when an instant rate change should\nbe applied (which may be in the past when the answer arrives). (Since: 1.18)\nmask for all of the above messages.\n"});