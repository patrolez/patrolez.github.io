fragment_downloaded_cb({"url":"gstreamer/gstpad.html#GstPadProbeReturn","fragment":"\n\tGstPadProbeReturn\n\nMembers\n\n\tGst.PadProbeReturn\n\nMembers\n\n\tGst.PadProbeReturn\n\nMembers\nDifferent return values for the GstPadProbeCallback.\ndrop data in data probes. For push mode this means that\nthe data item is not sent downstream. For pull mode, it means that\nthe data item is not passed upstream. In both cases, no other probes\nare called for this item and GST_FLOW_OK or TRUE is returned to the\ncaller.\nnormal probe return value. This leaves the probe in\nplace, and defers decisions about dropping or passing data to other\nprobes, if any. If there are no other probes, the default behaviour\nfor the probe type applies ('block' for blocking probes,\nand 'pass' for non-blocking probes).\nremove this probe, passing the data. For blocking probes\nthis will cause data flow to unblock, unless there are also other\nblocking probes installed.\npass the data item in the block probe and block on the\nnext item. Note, that if there are multiple pad probes installed and\nany probe returns PASS, the data will be passed.\nData has been handled in the probe and will not be\nforwarded further. For events and buffers this is the same behaviour as\nGST_PAD_PROBE_DROP (except that in this case you need to unref the buffer\nor event yourself). For queries it will also return TRUE to the caller.\nThe probe can also modify the GstFlowReturn value by using the\nGST_PAD_PROBE_INFO_FLOW_RETURN() accessor.\nNote that the resulting query must contain valid entries.\nSince: 1.6\nDifferent return values for the Gst.PadProbeCallback.\ndrop data in data probes. For push mode this means that\nthe data item is not sent downstream. For pull mode, it means that\nthe data item is not passed upstream. In both cases, no other probes\nare called for this item and Gst.FlowReturn.OK or true is returned to the\ncaller.\nnormal probe return value. This leaves the probe in\nplace, and defers decisions about dropping or passing data to other\nprobes, if any. If there are no other probes, the default behaviour\nfor the probe type applies ('block' for blocking probes,\nand 'pass' for non-blocking probes).\nremove this probe, passing the data. For blocking probes\nthis will cause data flow to unblock, unless there are also other\nblocking probes installed.\npass the data item in the block probe and block on the\nnext item. Note, that if there are multiple pad probes installed and\nany probe returns PASS, the data will be passed.\nData has been handled in the probe and will not be\nforwarded further. For events and buffers this is the same behaviour as\nGst.PadProbeReturn.DROP (except that in this case you need to unref the buffer\nor event yourself). For queries it will also return true to the caller.\nThe probe can also modify the Gst.FlowReturn value by using the\nGST_PAD_PROBE_INFO_FLOW_RETURN (not introspectable)() accessor.\nNote that the resulting query must contain valid entries.\nSince: 1.6\nDifferent return values for the Gst.PadProbeCallback.\ndrop data in data probes. For push mode this means that\nthe data item is not sent downstream. For pull mode, it means that\nthe data item is not passed upstream. In both cases, no other probes\nare called for this item and Gst.FlowReturn.OK or True is returned to the\ncaller.\nnormal probe return value. This leaves the probe in\nplace, and defers decisions about dropping or passing data to other\nprobes, if any. If there are no other probes, the default behaviour\nfor the probe type applies ('block' for blocking probes,\nand 'pass' for non-blocking probes).\nremove this probe, passing the data. For blocking probes\nthis will cause data flow to unblock, unless there are also other\nblocking probes installed.\npass the data item in the block probe and block on the\nnext item. Note, that if there are multiple pad probes installed and\nany probe returns PASS, the data will be passed.\nData has been handled in the probe and will not be\nforwarded further. For events and buffers this is the same behaviour as\nGst.PadProbeReturn.DROP (except that in this case you need to unref the buffer\nor event yourself). For queries it will also return True to the caller.\nThe probe can also modify the Gst.FlowReturn value by using the\nGST_PAD_PROBE_INFO_FLOW_RETURN (not introspectable)() accessor.\nNote that the resulting query must contain valid entries.\nSince: 1.6\n"});