fragment_downloaded_cb({"url":"gstreamer/gstbufferpool.html#GstBufferPoolClass::alloc_buffer","fragment":"\n\talloc_buffer\n\n\n\tvfunc_alloc_buffer\n\n\n\tdo_alloc_buffer\n\nAllocate a buffer. the default implementation allocates\nbuffers from the configured memory allocator and with the configured\nparameters. All metadata that is present on the allocated buffer will\nbe marked as GST_META_FLAG_POOLED and GST_META_FLAG_LOCKED and will\nnot be removed from the buffer in reset_buffer.\nThe buffer should have the GST_BUFFER_FLAG_TAG_MEMORY cleared.\nParameters:\nthe GstBufferPool\na location for a GstBuffer\nparameters.\na GstFlowReturn to indicate whether the allocation was\nsuccessful.\nAllocate a buffer. the default implementation allocates\nbuffers from the configured memory allocator and with the configured\nparameters. All metadata that is present on the allocated buffer will\nbe marked as Gst.MetaFlags.POOLED and Gst.MetaFlags.LOCKED and will\nnot be removed from the buffer in vfunc_reset_buffer.\nThe buffer should have the Gst.BufferFlags.TAG_MEMORY cleared.\nParameters:\nthe Gst.BufferPool\nparameters.\nReturns a tuple made of:\na Gst.FlowReturn to indicate whether the allocation was\nsuccessful.\na Gst.FlowReturn to indicate whether the allocation was\nsuccessful.\nAllocate a buffer. the default implementation allocates\nbuffers from the configured memory allocator and with the configured\nparameters. All metadata that is present on the allocated buffer will\nbe marked as Gst.MetaFlags.POOLED and Gst.MetaFlags.LOCKED and will\nnot be removed from the buffer in do_reset_buffer.\nThe buffer should have the Gst.BufferFlags.TAG_MEMORY cleared.\nParameters:\nthe Gst.BufferPool\nparameters.\nReturns a tuple made of:\na Gst.FlowReturn to indicate whether the allocation was\nsuccessful.\na Gst.FlowReturn to indicate whether the allocation was\nsuccessful.\n"});