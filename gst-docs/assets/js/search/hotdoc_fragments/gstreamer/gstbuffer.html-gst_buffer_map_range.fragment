fragment_downloaded_cb({"url":"gstreamer/gstbuffer.html#gst_buffer_map_range","fragment":"\n\tgst_buffer_map_range\n\n\n\tGst.Buffer.prototype.map_range\n\n\n\tGst.Buffer.map_range\n\nFills info with the GstMapInfo of length merged memory blocks\nstarting at idx in buffer. When length is -1, all memory blocks starting\nfrom idx are merged and mapped.\nflags describe the desired access of the memory. When flags is\nGST_MAP_WRITE, buffer should be writable (as returned from\ngst_buffer_is_writable).\nWhen buffer is writable but the memory isn't, a writable copy will\nautomatically be created and returned. The readonly copy of the buffer memory\nwill then also be replaced with this writable copy.\nThe memory in info should be unmapped with gst_buffer_unmap after usage.\nParameters:\na GstBuffer.\nan index\na length\ninfo about the mapping\nflags for the mapping\nTRUE if the map succeeded and info contains valid\ndata.\nFills info with the Gst.MapInfo of length merged memory blocks\nstarting at idx in buffer. When length is -1, all memory blocks starting\nfrom idx are merged and mapped.\nflags describe the desired access of the memory. When flags is\nGst.MapFlags.WRITE, buffer should be writable (as returned from\ngst_buffer_is_writable (not introspectable)).\nWhen buffer is writable but the memory isn't, a writable copy will\nautomatically be created and returned. The readonly copy of the buffer memory\nwill then also be replaced with this writable copy.\nThe memory in info should be unmapped with Gst.Buffer.prototype.unmap after usage.\nParameters:\na Gst.Buffer.\nan index\na length\nflags for the mapping\nReturns a tuple made of:\ntrue if the map succeeded and info contains valid\ndata.\ntrue if the map succeeded and info contains valid\ndata.\nFills info with the Gst.MapInfo of length merged memory blocks\nstarting at idx in buffer. When length is -1, all memory blocks starting\nfrom idx are merged and mapped.\nflags describe the desired access of the memory. When flags is\nGst.MapFlags.WRITE, buffer should be writable (as returned from\ngst_buffer_is_writable (not introspectable)).\nWhen buffer is writable but the memory isn't, a writable copy will\nautomatically be created and returned. The readonly copy of the buffer memory\nwill then also be replaced with this writable copy.\nThe memory in info should be unmapped with Gst.Buffer.unmap after usage.\nParameters:\na Gst.Buffer.\nan index\na length\nflags for the mapping\nReturns a tuple made of:\nTrue if the map succeeded and info contains valid\ndata.\nTrue if the map succeeded and info contains valid\ndata.\n"});