fragment_downloaded_cb({"url":"gstreamer/gsterror.html#GstStreamError","fragment":"\n\tGstStreamError\n\nMembers\n\n\tGst.StreamError\n\nMembers\n\n\tGst.StreamError\n\nMembers\nStream errors are for anything related to the stream being processed:\nformat errors, media type errors, ...\nThey're typically used by decoders, demuxers, converters, ...\na general error which doesn't fit in any other\ncategory.  Make sure you add a custom message to the error call.\ndo not use this except as a placeholder for\ndeciding where to go while developing code.\nuse this when you do not want to implement\nthis functionality yet.\nused when the element doesn't know the\nstream's type.\nused when the element doesn't handle this type\nof stream.\nused when there's no codec to handle the\nstream's type.\nused when decoding fails.\nused when encoding fails.\nused when demuxing fails.\nused when muxing fails.\nused when the stream is of the wrong format\n(for example, wrong caps).\nused when the stream is encrypted and can't be\ndecrypted because this is not supported by the element.\nused when the stream is encrypted and\ncan't be decrypted because no suitable key is available.\nthe number of stream error types.\nStream errors are for anything related to the stream being processed:\nformat errors, media type errors, ...\nThey're typically used by decoders, demuxers, converters, ...\na general error which doesn't fit in any other\ncategory.  Make sure you add a custom message to the error call.\ndo not use this except as a placeholder for\ndeciding where to go while developing code.\nuse this when you do not want to implement\nthis functionality yet.\nused when the element doesn't know the\nstream's type.\nused when the element doesn't handle this type\nof stream.\nused when there's no codec to handle the\nstream's type.\nused when decoding fails.\nused when encoding fails.\nused when demuxing fails.\nused when muxing fails.\nused when the stream is of the wrong format\n(for example, wrong caps).\nused when the stream is encrypted and can't be\ndecrypted because this is not supported by the element.\nused when the stream is encrypted and\ncan't be decrypted because no suitable key is available.\nthe number of stream error types.\nStream errors are for anything related to the stream being processed:\nformat errors, media type errors, ...\nThey're typically used by decoders, demuxers, converters, ...\na general error which doesn't fit in any other\ncategory.  Make sure you add a custom message to the error call.\ndo not use this except as a placeholder for\ndeciding where to go while developing code.\nuse this when you do not want to implement\nthis functionality yet.\nused when the element doesn't know the\nstream's type.\nused when the element doesn't handle this type\nof stream.\nused when there's no codec to handle the\nstream's type.\nused when decoding fails.\nused when encoding fails.\nused when demuxing fails.\nused when muxing fails.\nused when the stream is of the wrong format\n(for example, wrong caps).\nused when the stream is encrypted and can't be\ndecrypted because this is not supported by the element.\nused when the stream is encrypted and\ncan't be decrypted because no suitable key is available.\nthe number of stream error types.\n"});