fragment_downloaded_cb({"url":"gstreamer/gstevent.html#gst_event_new_eos","fragment":"\n\tgst_event_new_eos\n\n\n\tGst.Event.prototype.new_eos\n\n\n\tGst.Event.new_eos\n\nCreate a new EOS event. The eos event can only travel downstream\nsynchronized with the buffer flow. Elements that receive the EOS\nevent on a pad can return GST_FLOW_EOS as a GstFlowReturn\nwhen data after the EOS event arrives.\nThe EOS event will travel down to the sink elements in the pipeline\nwhich will then post the GST_MESSAGE_EOS on the bus after they have\nfinished playing any buffered data.\nWhen all sinks have posted an EOS message, an EOS message is\nforwarded to the application.\nThe EOS event itself will not cause any state transitions of the pipeline.\nthe new EOS event.\nCreate a new EOS event. The eos event can only travel downstream\nsynchronized with the buffer flow. Elements that receive the EOS\nevent on a pad can return Gst.FlowReturn.EOS as a Gst.FlowReturn\nwhen data after the EOS event arrives.\nThe EOS event will travel down to the sink elements in the pipeline\nwhich will then post the Gst.MessageType.EOS on the bus after they have\nfinished playing any buffered data.\nWhen all sinks have posted an EOS message, an EOS message is\nforwarded to the application.\nThe EOS event itself will not cause any state transitions of the pipeline.\nthe new EOS event.\nCreate a new EOS event. The eos event can only travel downstream\nsynchronized with the buffer flow. Elements that receive the EOS\nevent on a pad can return Gst.FlowReturn.EOS as a Gst.FlowReturn\nwhen data after the EOS event arrives.\nThe EOS event will travel down to the sink elements in the pipeline\nwhich will then post the Gst.MessageType.EOS on the bus after they have\nfinished playing any buffered data.\nWhen all sinks have posted an EOS message, an EOS message is\nforwarded to the application.\nThe EOS event itself will not cause any state transitions of the pipeline.\nthe new EOS event.\n"});