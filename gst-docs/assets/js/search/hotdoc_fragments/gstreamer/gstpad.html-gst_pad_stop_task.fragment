fragment_downloaded_cb({"url":"gstreamer/gstpad.html#gst_pad_stop_task","fragment":"\n\tgst_pad_stop_task\n\n\n\tGst.Pad.prototype.stop_task\n\n\n\tGst.Pad.stop_task\n\nStop the task of pad. This function will also make sure that the\nfunction executed by the task will effectively stop if not called\nfrom the GstTaskFunction.\nThis function will deadlock if called from the GstTaskFunction of\nthe task. Use gst_task_pause instead.\nRegardless of whether the pad has a task, the stream lock is acquired and\nreleased so as to ensure that streaming through this pad has finished.\nParameters:\nthe GstPad to stop the task of\na TRUE if the task could be stopped or FALSE on error.\nStop the task of pad. This function will also make sure that the\nfunction executed by the task will effectively stop if not called\nfrom the GstTaskFunction.\nThis function will deadlock if called from the GstTaskFunction of\nthe task. Use Gst.Task.prototype.pause instead.\nRegardless of whether the pad has a task, the stream lock is acquired and\nreleased so as to ensure that streaming through this pad has finished.\nParameters:\nthe Gst.Pad to stop the task of\na true if the task could be stopped or false on error.\nStop the task of pad. This function will also make sure that the\nfunction executed by the task will effectively stop if not called\nfrom the GstTaskFunction.\nThis function will deadlock if called from the GstTaskFunction of\nthe task. Use Gst.Task.pause instead.\nRegardless of whether the pad has a task, the stream lock is acquired and\nreleased so as to ensure that streaming through this pad has finished.\nParameters:\nthe Gst.Pad to stop the task of\na True if the task could be stopped or False on error.\n"});