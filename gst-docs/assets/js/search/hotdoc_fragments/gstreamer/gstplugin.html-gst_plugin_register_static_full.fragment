fragment_downloaded_cb({"url":"gstreamer/gstplugin.html#gst_plugin_register_static_full","fragment":"\n\tgst_plugin_register_static_full\n\n\n\tGst.Plugin.prototype.register_static_full\n\n\n\tGst.Plugin.register_static_full\n\nRegisters a static plugin, ie. a plugin which is private to an application\nor library and contained within the application or library (as opposed to\nbeing shipped as a separate module file) with a GstPluginInitFullFunc\nwhich allows user data to be passed to the callback function (useful\nfor bindings).\nYou must make sure that GStreamer has been initialised (with gst_init or\nvia gst_init_get_option_group) before calling this function.\nParameters:\nthe major version number of the GStreamer core that the\nplugin was compiled for, you can just use GST_VERSION_MAJOR here\nthe minor version number of the GStreamer core that the\nplugin was compiled for, you can just use GST_VERSION_MINOR here\na unique name of the plugin (ideally prefixed with an application- or\nlibrary-specific namespace prefix in order to avoid name conflicts in\ncase a similar plugin with the same name ever gets added to GStreamer)\ndescription of the plugin\npointer to the init function with user data\nof this plugin.\nversion string of the plugin\neffective license of plugin. Must be one of the approved licenses\n(see GstPluginDesc above) or the plugin will not be registered.\nsource module plugin belongs to\nshipped package plugin belongs to\nURL to provider of plugin\ngpointer to user data\nTRUE if the plugin was registered correctly, otherwise FALSE.\nRegisters a static plugin, ie. a plugin which is private to an application\nor library and contained within the application or library (as opposed to\nbeing shipped as a separate module file) with a Gst.PluginInitFullFunc\nwhich allows user data to be passed to the callback function (useful\nfor bindings).\nYou must make sure that GStreamer has been initialised (with Gst.prototype.init or\nvia gst_init_get_option_group (not introspectable)) before calling this function.\nParameters:\nthe major version number of the GStreamer core that the\nplugin was compiled for, you can just use GST_VERSION_MAJOR here\nthe minor version number of the GStreamer core that the\nplugin was compiled for, you can just use GST_VERSION_MINOR here\na unique name of the plugin (ideally prefixed with an application- or\nlibrary-specific namespace prefix in order to avoid name conflicts in\ncase a similar plugin with the same name ever gets added to GStreamer)\ndescription of the plugin\npointer to the init function with user data\nof this plugin.\nversion string of the plugin\neffective license of plugin. Must be one of the approved licenses\n(see Gst.PluginDesc above) or the plugin will not be registered.\nsource module plugin belongs to\nshipped package plugin belongs to\nURL to provider of plugin\ngpointer to user data\ntrue if the plugin was registered correctly, otherwise false.\nRegisters a static plugin, ie. a plugin which is private to an application\nor library and contained within the application or library (as opposed to\nbeing shipped as a separate module file) with a Gst.PluginInitFullFunc\nwhich allows user data to be passed to the callback function (useful\nfor bindings).\nYou must make sure that GStreamer has been initialised (with Gst.init or\nvia gst_init_get_option_group (not introspectable)) before calling this function.\nParameters:\nthe major version number of the GStreamer core that the\nplugin was compiled for, you can just use GST_VERSION_MAJOR here\nthe minor version number of the GStreamer core that the\nplugin was compiled for, you can just use GST_VERSION_MINOR here\na unique name of the plugin (ideally prefixed with an application- or\nlibrary-specific namespace prefix in order to avoid name conflicts in\ncase a similar plugin with the same name ever gets added to GStreamer)\ndescription of the plugin\npointer to the init function with user data\nof this plugin.\nversion string of the plugin\neffective license of plugin. Must be one of the approved licenses\n(see Gst.PluginDesc above) or the plugin will not be registered.\nsource module plugin belongs to\nshipped package plugin belongs to\nURL to provider of plugin\ngpointer to user data\nTrue if the plugin was registered correctly, otherwise False.\n"});