fragment_downloaded_cb({"url":"gstreamer/gsttoc.html#gsttoc-page","fragment":"GstToc\nGstToc functions are used to create/free GstToc and GstTocEntry structures.\nAlso they are used to convert GstToc into GstStructure and vice versa.\nGstToc lets you to inform other elements in pipeline or application that playing\nsource has some kind of table of contents (TOC). These may be chapters, editions,\nangles or other types. For example: DVD chapters, Matroska chapters or cue sheet\nTOC. Such TOC will be useful for applications to display instead of just a\nplaylist.\nUsing TOC is very easy. Firstly, create GstToc structure which represents root\ncontents of the source. You can also attach TOC-specific tags to it. Then fill\nit with GstTocEntry entries by appending them to the GstToc using\ngst_toc_append_entry, and appending subentries to a GstTocEntry using\ngst_toc_entry_append_sub_entry.\nNote that root level of the TOC can contain only either editions or chapters. You\nshould not mix them together at the same level. Otherwise you will get serialization\n/deserialization errors. Make sure that no one of the entries has negative start and\nstop values.\nUse gst_event_new_toc to create a new TOC GstEvent, and gst_event_parse_toc to\nparse received TOC event. Use gst_event_new_toc_select to create a new TOC select GstEvent,\nand gst_event_parse_toc_select to parse received TOC select event. The same rule for\nthe GstMessage: gst_message_new_toc to create new TOC GstMessage, and\ngst_message_parse_toc to parse received TOC message.\nTOCs can have global scope or current scope. Global scope TOCs contain\nall entries that can possibly be selected using a toc select event, and\nare what an application is usually interested in. TOCs with current scope\nonly contain the parts of the TOC relevant to the currently selected/playing\nstream; the current scope TOC is used by downstream elements such as muxers\nto write correct TOC entries when transcoding files, for example. When\nplaying a DVD, the global TOC would contain a hierarchy of all titles,\nchapters and angles, for example, while the current TOC would only contain\nthe chapters for the currently playing title if playback of a specific\ntitle was requested.\nApplications and plugins should not rely on TOCs having a certain kind of\nstructure, but should allow for different alternatives. For example, a\nsimple CUE sheet embedded in a file may be presented as a flat list of\ntrack entries, or could have a top-level edition node (or some other\nalternative type entry) with track entries underneath that node; or even\nmultiple top-level edition nodes (or some other alternative type entries)\neach with track entries underneath, in case the source file has extracted\na track listing from different sources).\n"});