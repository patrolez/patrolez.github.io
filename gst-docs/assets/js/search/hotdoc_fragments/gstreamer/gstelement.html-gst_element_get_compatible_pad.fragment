fragment_downloaded_cb({"url":"gstreamer/gstelement.html#gst_element_get_compatible_pad","fragment":"\n\tgst_element_get_compatible_pad\n\n\n\tGst.Element.prototype.get_compatible_pad\n\n\n\tGst.Element.get_compatible_pad\n\nLooks for an unlinked pad to which the given pad can link. It is not\nguaranteed that linking the pads will work, though it should work in most\ncases.\nThis function will first attempt to find a compatible unlinked ALWAYS pad,\nand if none can be found, it will request a compatible REQUEST pad by looking\nat the templates of element.\nParameters:\na GstElement in which the pad should be found.\nthe GstPad to find a compatible one for.\nthe GstCaps to use as a filter.\nthe GstPad to which a link\ncan be made, or NULL if one cannot be found. gst_object_unref\nafter usage.\nLooks for an unlinked pad to which the given pad can link. It is not\nguaranteed that linking the pads will work, though it should work in most\ncases.\nThis function will first attempt to find a compatible unlinked ALWAYS pad,\nand if none can be found, it will request a compatible REQUEST pad by looking\nat the templates of element.\nParameters:\na Gst.Element in which the pad should be found.\nthe Gst.Pad to find a compatible one for.\nthe Gst.Caps to use as a filter.\nthe Gst.Pad to which a link\ncan be made, or null if one cannot be found. Gst.Object.prototype.unref\nafter usage.\nLooks for an unlinked pad to which the given pad can link. It is not\nguaranteed that linking the pads will work, though it should work in most\ncases.\nThis function will first attempt to find a compatible unlinked ALWAYS pad,\nand if none can be found, it will request a compatible REQUEST pad by looking\nat the templates of element.\nParameters:\na Gst.Element in which the pad should be found.\nthe Gst.Pad to find a compatible one for.\nthe Gst.Caps to use as a filter.\nthe Gst.Pad to which a link\ncan be made, or None if one cannot be found. Gst.Object.unref\nafter usage.\n"});