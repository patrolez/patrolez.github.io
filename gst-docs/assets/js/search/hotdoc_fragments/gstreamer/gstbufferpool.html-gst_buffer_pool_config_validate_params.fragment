fragment_downloaded_cb({"url":"gstreamer/gstbufferpool.html#gst_buffer_pool_config_validate_params","fragment":"\n\tgst_buffer_pool_config_validate_params\n\n\n\tGst.BufferPool.prototype.config_validate_params\n\n\n\tGst.BufferPool.config_validate_params\n\nValidates that changes made to config are still valid in the context of the\nexpected parameters. This function is a helper that can be used to validate\nchanges made by a pool to a config when gst_buffer_pool_set_config\nreturns FALSE. This expects that caps haven't changed and that\nmin_buffers aren't lower then what we initially expected.\nThis does not check if options or allocator parameters are still valid,\nwon't check if size have changed, since changing the size is valid to adapt\npadding.\nParameters:\na GstBufferPool configuration\nthe excepted caps of buffers\nthe expected size of each buffer, not including prefix and padding\nthe expected minimum amount of buffers to allocate.\nthe expect maximum amount of buffers to allocate or 0 for unlimited.\nTRUE, if the parameters are valid in this context.\n\n\tSince\t\t\t: 1.4\n\t\t\nValidates that changes made to config are still valid in the context of the\nexpected parameters. This function is a helper that can be used to validate\nchanges made by a pool to a config when Gst.BufferPool.prototype.set_config\nreturns false. This expects that caps haven't changed and that\nmin_buffers aren't lower then what we initially expected.\nThis does not check if options or allocator parameters are still valid,\nwon't check if size have changed, since changing the size is valid to adapt\npadding.\nParameters:\na Gst.BufferPool configuration\nthe excepted caps of buffers\nthe expected size of each buffer, not including prefix and padding\nthe expected minimum amount of buffers to allocate.\nthe expect maximum amount of buffers to allocate or 0 for unlimited.\ntrue, if the parameters are valid in this context.\n\n\tSince\t\t\t: 1.4\n\t\t\nValidates that changes made to config are still valid in the context of the\nexpected parameters. This function is a helper that can be used to validate\nchanges made by a pool to a config when Gst.BufferPool.set_config\nreturns False. This expects that caps haven't changed and that\nmin_buffers aren't lower then what we initially expected.\nThis does not check if options or allocator parameters are still valid,\nwon't check if size have changed, since changing the size is valid to adapt\npadding.\nParameters:\na Gst.BufferPool configuration\nthe excepted caps of buffers\nthe expected size of each buffer, not including prefix and padding\nthe expected minimum amount of buffers to allocate.\nthe expect maximum amount of buffers to allocate or 0 for unlimited.\nTrue, if the parameters are valid in this context.\n\n\tSince\t\t\t: 1.4\n\t\t\n"});