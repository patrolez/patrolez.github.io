fragment_downloaded_cb({"url":"gstreamer/gstevent.html#gstevent-page","fragment":"GstEvent\nThe event class provides factory methods to construct events for sending\nand functions to query (parse) received events.\nEvents are usually created with gst_event_new_*() which takes event-type\nspecific parameters as arguments.\nTo send an event application will usually use gst_element_send_event and\nelements will use gst_pad_send_event or gst_pad_push_event.\nThe event should be unreffed with gst_event_unref if it has not been sent.\nEvents that have been received can be parsed with their respective\ngst_event_parse_*() functions. It is valid to pass NULL for unwanted details.\nEvents are passed between elements in parallel to the data stream. Some events\nare serialized with buffers, others are not. Some events only travel downstream,\nothers only upstream. Some events can travel both upstream and downstream.\nThe events are used to signal special conditions in the datastream such as\nEOS (end of stream) or the start of a new stream-segment.\nEvents are also used to flush the pipeline of any pending data.\nMost of the event API is used inside plugins. Applications usually only\nconstruct and use seek events.\nTo do that gst_event_new_seek is used to create a seek event. It takes\nthe needed parameters to specify seeking time and mode.\n"});