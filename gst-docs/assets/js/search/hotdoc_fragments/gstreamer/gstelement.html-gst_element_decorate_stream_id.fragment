fragment_downloaded_cb({"url":"gstreamer/gstelement.html#gst_element_decorate_stream_id","fragment":"\n\tgst_element_decorate_stream_id\n\n\n\tGst.Element.prototype.decorate_stream_id\n\n\n\tGst.Element.decorate_stream_id\n\nCreates a stream-id for element by combining the upstream information with\nthe stream_id.\nThis function generates an unique stream-id by getting the upstream\nstream-start event stream ID and appending stream_id to it. If the element\nhas no sinkpad it will generate an upstream stream-id by doing an URI query\non the element and in the worst case just uses a random number. Source\nelements that don't implement the URI handler interface should ideally\ngenerate a unique, deterministic stream-id manually instead.\nSince stream IDs are sorted alphabetically, any numbers in the stream ID\nshould be printed with a fixed number of characters, preceded by 0's, such as\nby using the format %03u instead of %u.\nParameters:\nThe  GstElement to create a stream-id for\nThe stream-id\nA stream-id for element.\n\n\tSince\t\t\t: 1.24\n\t\t\nCreates a stream-id for element by combining the upstream information with\nthe stream_id.\nThis function generates an unique stream-id by getting the upstream\nstream-start event stream ID and appending stream_id to it. If the element\nhas no sinkpad it will generate an upstream stream-id by doing an URI query\non the element and in the worst case just uses a random number. Source\nelements that don't implement the URI handler interface should ideally\ngenerate a unique, deterministic stream-id manually instead.\nSince stream IDs are sorted alphabetically, any numbers in the stream ID\nshould be printed with a fixed number of characters, preceded by 0's, such as\nby using the format %03u instead of %u.\nParameters:\nThe  Gst.Element to create a stream-id for\nThe stream-id\nA stream-id for element.\n\n\tSince\t\t\t: 1.24\n\t\t\nCreates a stream-id for element by combining the upstream information with\nthe stream_id.\nThis function generates an unique stream-id by getting the upstream\nstream-start event stream ID and appending stream_id to it. If the element\nhas no sinkpad it will generate an upstream stream-id by doing an URI query\non the element and in the worst case just uses a random number. Source\nelements that don't implement the URI handler interface should ideally\ngenerate a unique, deterministic stream-id manually instead.\nSince stream IDs are sorted alphabetically, any numbers in the stream ID\nshould be printed with a fixed number of characters, preceded by 0's, such as\nby using the format %03u instead of %u.\nParameters:\nThe  Gst.Element to create a stream-id for\nThe stream-id\nA stream-id for element.\n\n\tSince\t\t\t: 1.24\n\t\t\n"});