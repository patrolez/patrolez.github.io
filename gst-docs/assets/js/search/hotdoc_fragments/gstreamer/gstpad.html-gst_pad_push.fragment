fragment_downloaded_cb({"url":"gstreamer/gstpad.html#gst_pad_push","fragment":"\n\tgst_pad_push\n\n\n\tGst.Pad.prototype.push\n\n\n\tGst.Pad.push\n\nPushes a buffer to the peer of pad.\nThis function will call installed block probes before triggering any\ninstalled data probes.\nThe function proceeds calling gst_pad_chain on the peer pad and returns\nthe value from that function. If pad has no peer, GST_FLOW_NOT_LINKED will\nbe returned.\nIn all cases, success or failure, the caller loses its reference to buffer\nafter calling this function.\nParameters:\na source GstPad, returns GST_FLOW_ERROR if not.\nthe GstBuffer to push returns GST_FLOW_ERROR\nif not.\na GstFlowReturn from the peer pad.\nMT safe.\nPushes a buffer to the peer of pad.\nThis function will call installed block probes before triggering any\ninstalled data probes.\nThe function proceeds calling Gst.Pad.prototype.chain on the peer pad and returns\nthe value from that function. If pad has no peer, Gst.FlowReturn.NOT_LINKED will\nbe returned.\nIn all cases, success or failure, the caller loses its reference to buffer\nafter calling this function.\nParameters:\na source Gst.Pad, returns Gst.FlowReturn.ERROR if not.\nthe Gst.Buffer to push returns GST_FLOW_ERROR\nif not.\na Gst.FlowReturn from the peer pad.\nMT safe.\nPushes a buffer to the peer of pad.\nThis function will call installed block probes before triggering any\ninstalled data probes.\nThe function proceeds calling Gst.Pad.chain on the peer pad and returns\nthe value from that function. If pad has no peer, Gst.FlowReturn.NOT_LINKED will\nbe returned.\nIn all cases, success or failure, the caller loses its reference to buffer\nafter calling this function.\nParameters:\na source Gst.Pad, returns Gst.FlowReturn.ERROR if not.\nthe Gst.Buffer to push returns GST_FLOW_ERROR\nif not.\na Gst.FlowReturn from the peer pad.\nMT safe.\n"});