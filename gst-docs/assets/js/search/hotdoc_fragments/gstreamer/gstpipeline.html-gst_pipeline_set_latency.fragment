fragment_downloaded_cb({"url":"gstreamer/gstpipeline.html#gst_pipeline_set_latency","fragment":"\n\tgst_pipeline_set_latency\n\n\n\tGst.Pipeline.prototype.set_latency\n\n\n\tGst.Pipeline.set_latency\n\nSets the latency that should be configured on the pipeline. Setting\nGST_CLOCK_TIME_NONE will restore the default behaviour of using the minimum\nlatency from the LATENCY query. Setting this is usually not required and\nthe pipeline will figure out an appropriate latency automatically.\nSetting a too low latency, especially lower than the minimum latency from\nthe LATENCY query, will most likely cause the pipeline to fail.\nParameters:\na GstPipeline\nlatency to configure\n\n\tSince\t\t\t: 1.6\n\t\t\nSets the latency that should be configured on the pipeline. Setting\nGST_CLOCK_TIME_NONE will restore the default behaviour of using the minimum\nlatency from the LATENCY query. Setting this is usually not required and\nthe pipeline will figure out an appropriate latency automatically.\nSetting a too low latency, especially lower than the minimum latency from\nthe LATENCY query, will most likely cause the pipeline to fail.\nParameters:\na Gst.Pipeline\nlatency to configure\n\n\tSince\t\t\t: 1.6\n\t\t\nSets the latency that should be configured on the pipeline. Setting\nGST_CLOCK_TIME_NONE will restore the default behaviour of using the minimum\nlatency from the LATENCY query. Setting this is usually not required and\nthe pipeline will figure out an appropriate latency automatically.\nSetting a too low latency, especially lower than the minimum latency from\nthe LATENCY query, will most likely cause the pipeline to fail.\nParameters:\na Gst.Pipeline\nlatency to configure\n\n\tSince\t\t\t: 1.6\n\t\t\n"});