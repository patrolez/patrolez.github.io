fragment_downloaded_cb({"url":"gstreamer/gstbus.html#gst_bus_pop_filtered","fragment":"\n\tgst_bus_pop_filtered\n\n\n\tGst.Bus.prototype.pop_filtered\n\n\n\tGst.Bus.pop_filtered\n\nGets a message matching type from the bus.  Will discard all messages on\nthe bus that do not match type and that have been posted before the first\nmessage that does match type.  If there is no message matching type on\nthe bus, all messages will be discarded. It is not possible to use message\nenums beyond GST_MESSAGE_EXTENDED in the events mask.\nParameters:\na GstBus to pop\nmessage types to take into account\nthe next GstMessage matching\ntype that is on the bus, or NULL if the bus is empty or there\nis no message matching type.\nGets a message matching type from the bus.  Will discard all messages on\nthe bus that do not match type and that have been posted before the first\nmessage that does match type.  If there is no message matching type on\nthe bus, all messages will be discarded. It is not possible to use message\nenums beyond Gst.MessageType.EXTENDED in the events mask.\nParameters:\na Gst.Bus to pop\nmessage types to take into account\nthe next Gst.Message matching\ntype that is on the bus, or null if the bus is empty or there\nis no message matching type.\nGets a message matching type from the bus.  Will discard all messages on\nthe bus that do not match type and that have been posted before the first\nmessage that does match type.  If there is no message matching type on\nthe bus, all messages will be discarded. It is not possible to use message\nenums beyond Gst.MessageType.EXTENDED in the events mask.\nParameters:\na Gst.Bus to pop\nmessage types to take into account\nthe next Gst.Message matching\ntype that is on the bus, or None if the bus is empty or there\nis no message matching type.\n"});