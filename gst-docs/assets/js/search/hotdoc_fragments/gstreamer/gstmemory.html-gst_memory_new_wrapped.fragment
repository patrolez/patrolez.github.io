fragment_downloaded_cb({"url":"gstreamer/gstmemory.html#gst_memory_new_wrapped","fragment":"\n\tgst_memory_new_wrapped\n\n\n\tGst.Memory.prototype.new_wrapped\n\n\n\tGst.Memory.new_wrapped\n\nAllocate a new memory block that wraps the given data.\nThe prefix/padding must be filled with 0 if flags contains\nGST_MEMORY_FLAG_ZERO_PREFIXED and GST_MEMORY_FLAG_ZERO_PADDED respectively.\nParameters:\nGstMemoryFlags\ndata to\nwrap\nallocated size of data\noffset in data\nsize of valid data\nuser_data\ncalled with user_data when the memory is freed\na new GstMemory.\nAllocate a new memory block that wraps the given data.\nThe prefix/padding must be filled with 0 if flags contains\nGst.MemoryFlags.ZERO_PREFIXED and Gst.MemoryFlags.ZERO_PADDED respectively.\nParameters:\nGst.MemoryFlags\ndata to\nwrap\nallocated size of data\noffset in data\nsize of valid data\nuser_data\ncalled with user_data when the memory is freed\na new Gst.Memory.\nAllocate a new memory block that wraps the given data.\nThe prefix/padding must be filled with 0 if flags contains\nGst.MemoryFlags.ZERO_PREFIXED and Gst.MemoryFlags.ZERO_PADDED respectively.\nParameters:\nGst.MemoryFlags\ndata to\nwrap\nallocated size of data\noffset in data\nsize of valid data\nuser_data\ncalled with user_data when the memory is freed\na new Gst.Memory.\n"});