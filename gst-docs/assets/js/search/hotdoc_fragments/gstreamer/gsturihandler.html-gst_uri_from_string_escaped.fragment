fragment_downloaded_cb({"url":"gstreamer/gsturihandler.html#gst_uri_from_string_escaped","fragment":"\n\tgst_uri_from_string_escaped\n\n\n\tGst.prototype.uri_from_string_escaped\n\n\n\tGst.uri_from_string_escaped\n\nParses a URI string into a new GstUri object. Will return NULL if the URI\ncannot be parsed. This is identical to gst_uri_from_string except that\nthe userinfo and fragment components of the URI will not be unescaped while\nparsing.\nUse this when you need to extract a username and password from the userinfo\nsuch as https://user:password@example.com since either may contain\na URI-escaped ':' character. gst_uri_from_string will unescape the entire\nuserinfo component, which will make it impossible to know which ':'\ndelineates the username and password.\nThe same applies to the fragment component of the URI, such as\nhttps://example.com/path#fragment which may contain a URI-escaped '#'.\nParameters:\nThe URI string to parse.\nA new GstUri object, or NULL.\n\n\tSince\t\t\t: 1.18\n\t\t\nParses a URI string into a new Gst.Uri object. Will return NULL if the URI\ncannot be parsed. This is identical to Gst.prototype.uri_from_string except that\nthe userinfo and fragment components of the URI will not be unescaped while\nparsing.\nUse this when you need to extract a username and password from the userinfo\nsuch as https://user:password@example.com since either may contain\na URI-escaped ':' character. Gst.prototype.uri_from_string will unescape the entire\nuserinfo component, which will make it impossible to know which ':'\ndelineates the username and password.\nThe same applies to the fragment component of the URI, such as\nhttps://example.com/path#fragment which may contain a URI-escaped '#'.\nParameters:\nThe URI string to parse.\nA new Gst.Uri object, or NULL.\n\n\tSince\t\t\t: 1.18\n\t\t\nParses a URI string into a new Gst.Uri object. Will return NULL if the URI\ncannot be parsed. This is identical to Gst.uri_from_string except that\nthe userinfo and fragment components of the URI will not be unescaped while\nparsing.\nUse this when you need to extract a username and password from the userinfo\nsuch as https://user:password@example.com since either may contain\na URI-escaped ':' character. Gst.uri_from_string will unescape the entire\nuserinfo component, which will make it impossible to know which ':'\ndelineates the username and password.\nThe same applies to the fragment component of the URI, such as\nhttps://example.com/path#fragment which may contain a URI-escaped '#'.\nParameters:\nThe URI string to parse.\nA new Gst.Uri object, or NULL.\n\n\tSince\t\t\t: 1.18\n\t\t\n"});