fragment_downloaded_cb({"url":"gstreamer/gstelement.html#gstelement-page","fragment":"GstElement\nGstElement is the abstract base class needed to construct an element that\ncan be used in a GStreamer pipeline. Please refer to the plugin writers\nguide for more information on creating GstElement subclasses.\nThe name of a GstElement can be get with gst_element_get_name and set with\ngst_element_set_name.  For speed, GST_ELEMENT_NAME can be used in the\ncore when using the appropriate locking. Do not use this in plug-ins or\napplications in order to retain ABI compatibility.\nElements can have pads (of the type GstPad).  These pads link to pads on\nother elements.  GstBuffer flow between these linked pads.\nA GstElement has a GList of GstPad structures for all their input (or sink)\nand output (or source) pads.\nCore and plug-in writers can add and remove pads with gst_element_add_pad\nand gst_element_remove_pad.\nAn existing pad of an element can be retrieved by name with\ngst_element_get_static_pad. A new dynamic pad can be created using\ngst_element_request_pad with a GstPadTemplate.\nAn iterator of all pads can be retrieved with gst_element_iterate_pads.\nElements can be linked through their pads.\nIf the link is straightforward, use the gst_element_link\nconvenience function to link two elements, or gst_element_link_many\nfor more elements in a row.\nUse gst_element_link_filtered to link two elements constrained by\na specified set of GstCaps.\nFor finer control, use gst_element_link_pads and\ngst_element_link_pads_filtered to specify the pads to link on\neach element by name.\nEach element has a state (see GstState).  You can get and set the state\nof an element with gst_element_get_state and gst_element_set_state.\nSetting a state triggers a GstStateChange. To get a string representation\nof a GstState, use gst_element_state_get_name.\nYou can get and set a GstClock on an element using gst_element_get_clock\nand gst_element_set_clock.\nSome elements can provide a clock for the pipeline if\nthe GST_ELEMENT_FLAG_PROVIDE_CLOCK flag is set. With the\ngst_element_provide_clock method one can retrieve the clock provided by\nsuch an element.\nNot all elements require a clock to operate correctly. If the\nGST_ELEMENT_FLAG_REQUIRE_CLOCK() flag is set, a clock should be set on the\nelement with gst_element_set_clock.\nNote that clock selection and distribution is normally handled by the\ntoplevel GstPipeline so the clock functions are only to be used in very\nspecific situations.\n"});