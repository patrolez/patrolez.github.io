fragment_downloaded_cb({"url":"gstreamer/gstpad.html#gst_pad_pull_range","fragment":"\n\tgst_pad_pull_range\n\n\n\tGst.Pad.prototype.pull_range\n\n\n\tGst.Pad.pull_range\n\nPulls a buffer from the peer pad or fills up a provided buffer.\nThis function will first trigger the pad block signal if it was\ninstalled.\nWhen pad is not linked GST_FLOW_NOT_LINKED is returned else this\nfunction returns the result of gst_pad_get_range on the peer pad.\nSee gst_pad_get_range for a list of return values and for the\nsemantics of the arguments of this function.\nIf buffer points to a variable holding NULL, a valid new GstBuffer will be\nplaced in buffer when this function returns GST_FLOW_OK. The new buffer\nmust be freed with gst_buffer_unref after usage. When this function\nreturns any other result value, buffer will still point to NULL.\nWhen buffer points to a variable that points to a valid GstBuffer, the\nbuffer will be filled with the result data when this function returns\nGST_FLOW_OK. When this function returns any other result value,\nbuffer will be unchanged. If the provided buffer is larger than size, only\nsize bytes will be filled in the result buffer and its size will be updated\naccordingly.\nNote that less than size bytes can be returned in buffer when, for example,\nan EOS condition is near or when buffer is not large enough to hold size\nbytes. The caller should check the result buffer size to get the result size.\nParameters:\na sink GstPad, returns GST_FLOW_ERROR if not.\nThe start offset of the buffer\nThe length of the buffer\na pointer to hold the GstBuffer, returns\nGST_FLOW_ERROR if NULL.\na GstFlowReturn from the peer pad.\nMT safe.\nPulls a buffer from the peer pad or fills up a provided buffer.\nThis function will first trigger the pad block signal if it was\ninstalled.\nWhen pad is not linked Gst.FlowReturn.NOT_LINKED is returned else this\nfunction returns the result of Gst.Pad.prototype.get_range on the peer pad.\nSee Gst.Pad.prototype.get_range for a list of return values and for the\nsemantics of the arguments of this function.\nIf buffer points to a variable holding null, a valid new Gst.Buffer will be\nplaced in buffer when this function returns Gst.FlowReturn.OK. The new buffer\nmust be freed with gst_buffer_unref (not introspectable) after usage. When this function\nreturns any other result value, buffer will still point to null.\nWhen buffer points to a variable that points to a valid Gst.Buffer, the\nbuffer will be filled with the result data when this function returns\nGst.FlowReturn.OK. When this function returns any other result value,\nbuffer will be unchanged. If the provided buffer is larger than size, only\nsize bytes will be filled in the result buffer and its size will be updated\naccordingly.\nNote that less than size bytes can be returned in buffer when, for example,\nan EOS condition is near or when buffer is not large enough to hold size\nbytes. The caller should check the result buffer size to get the result size.\nParameters:\na sink Gst.Pad, returns GST_FLOW_ERROR if not.\nThe start offset of the buffer\nThe length of the buffer\nReturns a tuple made of:\na Gst.FlowReturn from the peer pad.\nMT safe.\na Gst.FlowReturn from the peer pad.\nMT safe.\nPulls a buffer from the peer pad or fills up a provided buffer.\nThis function will first trigger the pad block signal if it was\ninstalled.\nWhen pad is not linked Gst.FlowReturn.NOT_LINKED is returned else this\nfunction returns the result of Gst.Pad.get_range on the peer pad.\nSee Gst.Pad.get_range for a list of return values and for the\nsemantics of the arguments of this function.\nIf buffer points to a variable holding None, a valid new Gst.Buffer will be\nplaced in buffer when this function returns Gst.FlowReturn.OK. The new buffer\nmust be freed with gst_buffer_unref (not introspectable) after usage. When this function\nreturns any other result value, buffer will still point to None.\nWhen buffer points to a variable that points to a valid Gst.Buffer, the\nbuffer will be filled with the result data when this function returns\nGst.FlowReturn.OK. When this function returns any other result value,\nbuffer will be unchanged. If the provided buffer is larger than size, only\nsize bytes will be filled in the result buffer and its size will be updated\naccordingly.\nNote that less than size bytes can be returned in buffer when, for example,\nan EOS condition is near or when buffer is not large enough to hold size\nbytes. The caller should check the result buffer size to get the result size.\nParameters:\na sink Gst.Pad, returns GST_FLOW_ERROR if not.\nThe start offset of the buffer\nThe length of the buffer\nReturns a tuple made of:\na Gst.FlowReturn from the peer pad.\nMT safe.\na Gst.FlowReturn from the peer pad.\nMT safe.\n"});