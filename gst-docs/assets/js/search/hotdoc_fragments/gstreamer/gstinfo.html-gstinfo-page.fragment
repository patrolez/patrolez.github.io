fragment_downloaded_cb({"url":"gstreamer/gstinfo.html#gstinfo-page","fragment":"GstInfo\nGStreamer's debugging subsystem is an easy way to get information about what\nthe application is doing.  It is not meant for programming errors. Use GLib\nmethods (g_warning and friends) for that.\nThe debugging subsystem works only after GStreamer has been initialized\nThe debugging subsystem is used to log informational messages while the\napplication runs.  Each messages has some properties attached to it. Among\nthese properties are the debugging category, the severity (called \"level\"\nhere) and an optional GObject it belongs to. Each of these messages is sent\nto all registered debugging handlers, which then handle the messages.\nGStreamer attaches a default handler on startup, which outputs requested\nmessages to stderr.\nMessages are output by using shortcut macros like GST_DEBUG,\nGST_CAT_ERROR_OBJECT or similar. These all expand to calling gst_debug_log\nwith the right parameters.\nThe only thing a developer will probably want to do is define his own\ncategories. This is easily done with 3 lines. At the top of your code,\ndeclare\nthe variables and set the default category.\nAfter that you only need to initialize the category.\nInitialization must be done before the category is used first.\nPlugins do this\nin their plugin_init function, libraries and applications should do that\nduring their initialization.\nThe whole debugging subsystem can be disabled at build time with passing the\n--disable-gst-debug switch to configure. If this is done, every function,\nmacro and even structs described in this file evaluate to default values or\nnothing at all.\nSo don't take addresses of these functions or use other tricks.\nIf you must do that for some reason, there is still an option.\nIf the debugging\nsubsystem was compiled out, GST_DISABLE_GST_DEBUG is defined in\n<gst/gst.h>,\nso you can check that before doing your trick.\nDisabling the debugging subsystem will give you a slight (read: unnoticeable)\nspeed increase and will reduce the size of your compiled code. The GStreamer\nlibrary itself becomes around 10% smaller.\nPlease note that there are naming conventions for the names of debugging\ncategories. These are explained at GST_DEBUG_CATEGORY_INIT.\n\nfor example by calling gst_init.\n\n"});