fragment_downloaded_cb({"url":"tag/gsttag.html#gst_tag_parse_extended_comment","fragment":"\n\tgst_tag_parse_extended_comment\n\n\n\tGstTag.prototype.tag_parse_extended_comment\n\n\n\tGstTag.tag_parse_extended_comment\n\nConvenience function to parse a GST_TAG_EXTENDED_COMMENT string and\nseparate it into its components.\nIf successful, key, lang and/or value will be set to newly allocated\nstrings that you need to free with g_free when done. key and lang\nmay also be set to NULL by this function if there is no key or no language\ncode in the extended comment string.\nParameters:\nan extended comment string, see GST_TAG_EXTENDED_COMMENT\n(out) (nullable):\nreturn location for the comment description key, or NULL\n(out) (nullable):\nreturn location for the comment ISO-639 language code, or NULL\nreturn location for the actual comment string, or NULL\nwhether to fail if strings are not in key=value form\nTRUE if the string could be parsed, otherwise FALSE\nConvenience function to parse a GST_TAG_EXTENDED_COMMENT string and\nseparate it into its components.\nIf successful, key, lang and/or value will be set to newly allocated\nstrings that you need to free with GLib.prototype.free when done. key and lang\nmay also be set to NULL by this function if there is no key or no language\ncode in the extended comment string.\nParameters:\nan extended comment string, see Gst.TAG_EXTENDED_COMMENT\nwhether to fail if strings are not in key=value form\nReturns a tuple made of:\nTRUE if the string could be parsed, otherwise FALSE\nTRUE if the string could be parsed, otherwise FALSE\nTRUE if the string could be parsed, otherwise FALSE\nTRUE if the string could be parsed, otherwise FALSE\nConvenience function to parse a GST_TAG_EXTENDED_COMMENT string and\nseparate it into its components.\nIf successful, key, lang and/or value will be set to newly allocated\nstrings that you need to free with GLib.free when done. key and lang\nmay also be set to NULL by this function if there is no key or no language\ncode in the extended comment string.\nParameters:\nan extended comment string, see Gst.TAG_EXTENDED_COMMENT\nwhether to fail if strings are not in key=value form\nReturns a tuple made of:\nTRUE if the string could be parsed, otherwise FALSE\nTRUE if the string could be parsed, otherwise FALSE\nTRUE if the string could be parsed, otherwise FALSE\nTRUE if the string could be parsed, otherwise FALSE\n"});