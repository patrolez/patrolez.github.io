fragment_downloaded_cb({"url":"installing/on-windows.html#remove-the-dependency-with-the-visual-studio-runtime","fragment":"Remove the dependency with the Visual Studio runtime\nAt this point, you have a working environment, which you can test by\nrunning the tutorials. However, there is a last step remaining.\nApplications built with Visual C++ 2010 depend on the Visual C++ 2010\nRuntime, which is a DLL that gets installed when you install Visual\nStudio. If you were to distribute your application, you would need to\ndistribute this DLL with it (e.g. via the Visual C++ 2010 Redistributable\nPackage).\nThis happens with every version of Visual Studio, and the Runtime DLL is\ndifferent for every version of Visual Studio.\nFurthermore, GStreamer itself is built using a “basic” C runtime which\ncomes in every Windows system since Windows XP, and is named\nMSVCRT.DLL. If your application and GStreamer do not use the same C\nRuntime, problems are bound to crop out.\nIn order to avoid these issues you must instruct your application to use\nthe system's C Runtime. First install the Windows Device Driver Kit\nVersion 7.1.0 (DDK).\nWhen the installer asks about the features, select only “Build\nEnvironments”. Accept the suggested location for the installation, which\nis usually C:\\WinDDK\\7600.16385.1. This download is an ISO file, you\ncan either burn a DVD with it (as recommended in the Microsoft site. You\nwill need DVD burning software), mount the file in a virtual DVD device\n(you will need DVD virtualization software) or unpack the file as if it\nwas a regular compressed file (you will need decompression software that\nunderstands the ISO format).\nThen, add the x86.props or x86_64.props (for 32 or 64 bits) property\nsheet found in %GSTREAMER_ROOT_X86%\\share\\vs\\2010\\msvc to your\nproject. This will make your application use the ubiquitous\nMSVCRT.DLL saving you from some troubles in the future.\n\nIf you did not install the WinDDK to the standard path C:\\WinDDK\\7600.16385.1,\nyou will need to tell Visual Studio where it is. Unfortunately, there is no automated way to do this.\nOnce you have added the x86.props or x86_64.props to your project, go to the Property Manager,\nexpand your project and its subfolders until you find the property sheet called config.\nDouble click to edit it, and select the section called “User Macros” in the list on the left.\nYou should see a macro called WINDOWS_DRIVER_KIT. Double click to edit it, and set its value to\nthe root folder where you installed the DDK. This is the folder containing a file called samples.txt.\nThat's it. Accept the changes, right click on the config property sheet and select “Save”.\nThe path to the DDK is now stored in config.props and you do not need to perform this operation anymore.\n"});