fragment_downloaded_cb({"url":"installing/for-android-development.html#creating-new-projects","fragment":"Creating new projects\nCreate a normal NDK project, either from the command line as described\nin the Android NDK home, or use Eclipse: File → New → Project…\n→ Android Application Project, and, once the wizard is complete, right\nclick on the project → Android Tools → Add Native Support …\nTo add GStreamer support you only need to modify the\njni/Android.mk file. This file describes the native files in your\nproject, and its barebones structure (as auto-generated by Eclipse) is:\nAndroid.mk\nWhere line 5 specifies the name of the .so file that will contain your\nnative code and line 6 states all source files that compose your native\ncode, separated by spaces.\nAdding GStreamer support only requires adding these lines:\nAndroid.mk with GStreamer support\nWhere line 7 specifies an extra library to be included in the project:\nlibgstreamer_android.so. This library contains all GStreamer code,\ntailored for your application’s needs, as shown below.\nLine 8 specifies additional system libraries, in this case, in order to\naccess android-specific functionality.\nLines 12 and 13 simply define some convenient macros.\nLine 20 lists the plugins you want statically linked into\nlibgstreamer_android.so. Listing only the ones you need makes your\napplication smaller.\nLine 21 is required to have HTTPS/TLS support from GStreamer, through the\nsouphttpsrc element.\nLine 22 defines which GStreamer libraries your application requires.\nFinally, line 24 includes the make files which perform the rest of the\nmagic.\nListing all desired plugins can be cumbersome, so they have been grouped\ninto categories, which can be used by including the plugins.mk file,\nand used as follows:\n"});