fragment_downloaded_cb({"url":"nle/nleoperation.html#time-effects","fragment":"Time Effects\nAn nleoperation that wraps a GstElement that transforms seek and\nsegment times is considered a time effect. Nle only tries to support\ntime effect's whose overall seek transformation:\nNote that a constant-rate-change effect that is not extremely fast or\nslow would satisfy these conditions.\nFor such a time effect, they should be configured in nle such that:\nNote that, at the moment, nle only converts the GstSegment\ntime field which means the other fields, such as start and stop, can\nend up with non-meaningful values when time effects are involved.\nMoreover, it does not convert GstBuffer times either, which can result\nin them having non-meaningful values. In particular, this means that\nGstControlBinding-s will not work well with nlecomposition-s when\nthey include time effects.\n\nMaps the time 0 to 0. So initial time-shifting effects are\nexcluded (the inpoint can sometimes be used instead).\nIs monotonically increasing. So reversing effects, and effects that\njump backwards in the stream are excluded.\nCan handle a reasonable GstClockTime, relative to the project. So\nthis would exclude a time effect with an extremely large speed-up\nthat would cause the converted GstClockTime seeks to overflow.\nIs 'continuously reversible'. This essentially means that for every\nseek position found on the sink pad of the element, we can, to 'good\nenough' accuracy, calculate the corresponding seek position that was\nreceived on the source pad. Moreover, this calculation should\ncorrespond to how the element transforms its GstSegment\ntime field. This is needed so that a seek can result in an accurate\nsegment.\n\n\nTheir inpoint is 0. Otherwise this will introduce\nseeking problems in its nlecomposition.\nThey must share the same start and\nduration as all nleobjects of lower priority in its\nnlecomposition. Otherwise this will introduce jumps in playback.\n\n"});