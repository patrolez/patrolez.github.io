fragment_downloaded_cb({"url":"tools/gst-launch.html#environment-variables","fragment":"Environment Variables\nGST_DEBUG: Comma-separated list of debug categories and levels, e.g:\nGST_DEBUG_NO_COLOR: When this environment variable is set, coloured debug\noutput is disabled. This might come handy when saving the debug output to a\nfile.\nGST_DEBUG_DUMP_DOT_DIR: When set to a filesystem path, store dot\nfiles of pipeline graphs there.\nGST_REGISTRY: Path of the plugin registry file. The default is\n~/.gstreamer-1.0/registry-CPU.xml where CPU is the machine/cpu type\nGStreamer was compiled for, e.g. 'i486', 'i686', 'x86-64', 'ppc', etc.\nCheck the output of uname -i and uname -m for details.\nGST_REGISTRY_UPDATE: Set to \"no\" to force GStreamer to assume that no plugins\nhave changed, have been added or have been removed. This will make GStreamer\nskip the initial check to determine whether a rebuild of the registry cache is\nrequired or not. This may be useful in embedded environments where the installed\nplugins never change. Do not use this option in any other setup.\nGST_PLUGIN_PATH: Specifies a list of directories to scan for additional\nplugins. These take precedence over the system plugins.\nGST_PLUGIN_SYSTEM_PATH: Specifies a list of plugins that are always loaded by\ndefault. If not set, this defaults to the system-installed path, and the plugins\ninstalled in the user's home directory\nOIL_CPU_FLAGS: Useful liboil environment variable. Set OIL_CPU_FLAGS=0 when\nvalgrind or other debugging tools trip over liboil's CPU detection. Quite a few\nimportant GStreamer plugins like videotestsrc, audioconvert and\naudioresample use liboil.\nG_DEBUG: This is a useful GLib environment variable. Set\nG_DEBUG=fatal_warnings to make GStreamer programs abort when a critical\nwarning such as an assertion failure occurs. This is useful if you want to find\nout which part of the code caused that warning to be triggered and under what\ncircumstances. Simply set G_DEBUG as mentioned above and run the program under\ngdb (or let it core dump). Then get a stack trace in the usual way.\n"});