fragment_downloaded_cb({"url":"audio/gstaudiostreamalign.html#gst_audio_stream_align_process","fragment":"\n\tgst_audio_stream_align_process\n\n\n\tGstAudio.AudioStreamAlign.prototype.process\n\n\n\tGstAudio.AudioStreamAlign.process\n\nProcesses data with timestamp and n_samples, and returns the output\ntimestamp, duration and sample position together with a boolean to signal\nwhether a discontinuity was detected or not. All non-discontinuous data\nwill have perfect timestamps and durations.\nA discontinuity is detected once the difference between the actual\ntimestamp and the timestamp calculated from the sample count since the last\ndiscontinuity differs by more than the alignment threshold for a duration\nlonger than discont wait.\nNote: In reverse playback, every buffer is considered discontinuous in the\ncontext of buffer flags because the last sample of the previous buffer is\ndiscontinuous with the first sample of the current one. However for this\nfunction they are only considered discontinuous in reverse playback if the\nfirst sample of the previous buffer is discontinuous with the last sample\nof the current one.\nParameters:\na GstAudioStreamAlign\nif this data is considered to be discontinuous\na GstClockTime of the start of the data\nnumber of samples to process\noutput timestamp of the data\noutput duration of the data\noutput sample position of the start of the data\nTRUE if a discontinuity was detected, FALSE otherwise.\n\n\tSince\t\t\t: 1.14\n\t\t\nProcesses data with timestamp and n_samples, and returns the output\ntimestamp, duration and sample position together with a boolean to signal\nwhether a discontinuity was detected or not. All non-discontinuous data\nwill have perfect timestamps and durations.\nA discontinuity is detected once the difference between the actual\ntimestamp and the timestamp calculated from the sample count since the last\ndiscontinuity differs by more than the alignment threshold for a duration\nlonger than discont wait.\nNote: In reverse playback, every buffer is considered discontinuous in the\ncontext of buffer flags because the last sample of the previous buffer is\ndiscontinuous with the first sample of the current one. However for this\nfunction they are only considered discontinuous in reverse playback if the\nfirst sample of the previous buffer is discontinuous with the last sample\nof the current one.\nParameters:\na GstAudio.AudioStreamAlign\nif this data is considered to be discontinuous\na Number of the start of the data\nnumber of samples to process\nReturns a tuple made of:\ntrue if a discontinuity was detected, false otherwise.\ntrue if a discontinuity was detected, false otherwise.\ntrue if a discontinuity was detected, false otherwise.\ntrue if a discontinuity was detected, false otherwise.\n\n\tSince\t\t\t: 1.14\n\t\t\nProcesses data with timestamp and n_samples, and returns the output\ntimestamp, duration and sample position together with a boolean to signal\nwhether a discontinuity was detected or not. All non-discontinuous data\nwill have perfect timestamps and durations.\nA discontinuity is detected once the difference between the actual\ntimestamp and the timestamp calculated from the sample count since the last\ndiscontinuity differs by more than the alignment threshold for a duration\nlonger than discont wait.\nNote: In reverse playback, every buffer is considered discontinuous in the\ncontext of buffer flags because the last sample of the previous buffer is\ndiscontinuous with the first sample of the current one. However for this\nfunction they are only considered discontinuous in reverse playback if the\nfirst sample of the previous buffer is discontinuous with the last sample\nof the current one.\nParameters:\na GstAudio.AudioStreamAlign\nif this data is considered to be discontinuous\na int of the start of the data\nnumber of samples to process\nReturns a tuple made of:\nTrue if a discontinuity was detected, False otherwise.\nTrue if a discontinuity was detected, False otherwise.\nTrue if a discontinuity was detected, False otherwise.\nTrue if a discontinuity was detected, False otherwise.\n\n\tSince\t\t\t: 1.14\n\t\t\n"});