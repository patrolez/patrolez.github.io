fragment_downloaded_cb({"url":"audio/gstdsd.html#gst_dsd_convert","fragment":"\n\tgst_dsd_convert\n\n\n\tGstAudio.prototype.dsd_convert\n\n\n\tGstAudio.dsd_convert\n\nConverts DSD data from one layout and grouping format to another.\nnum_bytes must be an integer multiple of the width of both input\nand output format. For example, if the input format is GST_DSD_FORMAT_U32LE,\nand the output format is GST_DSD_FORMAT_U16BE, then num_bytes must\nbe an integer multiple of both 4 (U32LE width) and 2 (U16BE width).\nreverse_byte_bits is necessary if the bit order within the DSD bytes\nneeds to be reversed. This is rarely necessary, and is not to be\nconfused with the endianness of formats (which determines the ordering\nof bytes).\ninput_plane_offsets must not be NULL if input_layout is set to\nGST_AUDIO_LAYOUT_NON_INTERLEAVED. The same applies to output_plane_offsets.\nThese plane offsets define the starting offset of the planes (there is\nexactly one plane per channel) within input_data and output_data\nrespectively. If GST_AUDIO_LAYOUT_INTERLEAVED is used, the plane offsets\nare ignored.\nParameters:\nthe DSD format conversion's input source\nthe DSD format conversion's output destination\nDSD format of the input data to convert from\nDSD format of the output data to convert to\nInput data layout\nOutput data layout\nPlane offsets for non-interleaved input data\nPlane offsets for non-interleaved output data\nHow many bytes with DSD data to convert\nNumber of channels (must be at least 1)\nIf TRUE, reverse the bits in each DSD byte\n\n\tSince\t\t\t: 1.24\n\t\t\nConverts DSD data from one layout and grouping format to another.\nnum_bytes must be an integer multiple of the width of both input\nand output format. For example, if the input format is GST_DSD_FORMAT_U32LE,\nand the output format is GST_DSD_FORMAT_U16BE, then num_bytes must\nbe an integer multiple of both 4 (U32LE width) and 2 (U16BE width).\nreverse_byte_bits is necessary if the bit order within the DSD bytes\nneeds to be reversed. This is rarely necessary, and is not to be\nconfused with the endianness of formats (which determines the ordering\nof bytes).\ninput_plane_offsets must not be NULL if input_layout is set to\nGstAudio.AudioLayout.NON_INTERLEAVED. The same applies to output_plane_offsets.\nThese plane offsets define the starting offset of the planes (there is\nexactly one plane per channel) within input_data and output_data\nrespectively. If GST_AUDIO_LAYOUT_INTERLEAVED is used, the plane offsets\nare ignored.\nParameters:\nthe DSD format conversion's input source\nthe DSD format conversion's output destination\nDSD format of the input data to convert from\nDSD format of the output data to convert to\nInput data layout\nOutput data layout\nPlane offsets for non-interleaved input data\nPlane offsets for non-interleaved output data\nHow many bytes with DSD data to convert\nNumber of channels (must be at least 1)\nIf TRUE, reverse the bits in each DSD byte\n\n\tSince\t\t\t: 1.24\n\t\t\nConverts DSD data from one layout and grouping format to another.\nnum_bytes must be an integer multiple of the width of both input\nand output format. For example, if the input format is GST_DSD_FORMAT_U32LE,\nand the output format is GST_DSD_FORMAT_U16BE, then num_bytes must\nbe an integer multiple of both 4 (U32LE width) and 2 (U16BE width).\nreverse_byte_bits is necessary if the bit order within the DSD bytes\nneeds to be reversed. This is rarely necessary, and is not to be\nconfused with the endianness of formats (which determines the ordering\nof bytes).\ninput_plane_offsets must not be NULL if input_layout is set to\nGstAudio.AudioLayout.NON_INTERLEAVED. The same applies to output_plane_offsets.\nThese plane offsets define the starting offset of the planes (there is\nexactly one plane per channel) within input_data and output_data\nrespectively. If GST_AUDIO_LAYOUT_INTERLEAVED is used, the plane offsets\nare ignored.\nParameters:\nthe DSD format conversion's input source\nthe DSD format conversion's output destination\nDSD format of the input data to convert from\nDSD format of the output data to convert to\nInput data layout\nOutput data layout\nPlane offsets for non-interleaved input data\nPlane offsets for non-interleaved output data\nHow many bytes with DSD data to convert\nNumber of channels (must be at least 1)\nIf TRUE, reverse the bits in each DSD byte\n\n\tSince\t\t\t: 1.24\n\t\t\n"});