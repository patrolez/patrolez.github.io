fragment_downloaded_cb({"url":"audio/gstaudioconverter.html#gst_audio_converter_convert","fragment":"\n\tgst_audio_converter_convert\n\n\n\tGstAudio.AudioConverter.prototype.convert\n\n\n\tGstAudio.AudioConverter.convert\n\nConvenience wrapper around gst_audio_converter_samples, which will\nperform allocation of the output buffer based on the result from\ngst_audio_converter_get_out_frames.\nParameters:\na GstAudioConverter\nextra GstAudioConverterFlags\ninput data\nsize of in\na pointer where\nthe output data will be written\na pointer where the size of out will be written\nTRUE is the conversion could be performed.\n\n\tSince\t\t\t: 1.14\n\t\t\nConvenience wrapper around GstAudio.AudioConverter.prototype.samples, which will\nperform allocation of the output buffer based on the result from\nGstAudio.AudioConverter.prototype.get_out_frames.\nParameters:\na GstAudio.AudioConverter\nextra GstAudio.AudioConverterFlags\ninput data\nsize of in\nReturns a tuple made of:\ntrue is the conversion could be performed.\ntrue is the conversion could be performed.\ntrue is the conversion could be performed.\n\n\tSince\t\t\t: 1.14\n\t\t\nConvenience wrapper around GstAudio.AudioConverter.samples, which will\nperform allocation of the output buffer based on the result from\nGstAudio.AudioConverter.get_out_frames.\nParameters:\na GstAudio.AudioConverter\nextra GstAudio.AudioConverterFlags\ninput data\nsize of in\nReturns a tuple made of:\nTrue is the conversion could be performed.\nTrue is the conversion could be performed.\nTrue is the conversion could be performed.\n\n\tSince\t\t\t: 1.14\n\t\t\n"});