fragment_downloaded_cb({"url":"audio/gstaudiobasesink.html#gst_audio_base_sink_set_provide_clock","fragment":"\n\tgst_audio_base_sink_set_provide_clock\n\n\n\tGstAudio.AudioBaseSink.prototype.set_provide_clock\n\n\n\tGstAudio.AudioBaseSink.set_provide_clock\n\nControls whether sink will provide a clock or not. If provide is TRUE,\ngst_element_provide_clock will return a clock that reflects the datarate\nof sink. If provide is FALSE, gst_element_provide_clock will return\nNULL.\nParameters:\na GstAudioBaseSink\nnew state\nControls whether sink will provide a clock or not. If provide is true,\nGst.Element.prototype.provide_clock will return a clock that reflects the datarate\nof sink. If provide is false, Gst.Element.prototype.provide_clock will return\nNULL.\nParameters:\na GstAudio.AudioBaseSink\nnew state\nControls whether sink will provide a clock or not. If provide is True,\nGst.Element.provide_clock will return a clock that reflects the datarate\nof sink. If provide is False, Gst.Element.provide_clock will return\nNULL.\nParameters:\na GstAudio.AudioBaseSink\nnew state\n"});