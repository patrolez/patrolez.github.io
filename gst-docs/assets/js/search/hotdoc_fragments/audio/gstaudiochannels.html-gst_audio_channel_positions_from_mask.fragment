fragment_downloaded_cb({"url":"audio/gstaudiochannels.html#gst_audio_channel_positions_from_mask","fragment":"\n\tgst_audio_channel_positions_from_mask\n\n\n\tGstAudio.prototype.audio_channel_positions_from_mask\n\n\n\tGstAudio.audio_channel_positions_from_mask\n\nConvert the channels present in channel_mask to a position array\n(which should have at least channels entries ensured by caller).\nIf channel_mask is set to 0, it is considered as 'not present' for purpose\nof conversion.\nA partially valid channel_mask with less bits set than the number\nof channels is considered valid.\nParameters:\nThe number of channels\nThe input channel_mask\nThe\nGstAudioChannelPositions\nTRUE if channel and channel mask are valid and could be converted\nConvert the channels present in channel_mask to a position array\n(which should have at least channels entries ensured by caller).\nIf channel_mask is set to 0, it is considered as 'not present' for purpose\nof conversion.\nA partially valid channel_mask with less bits set than the number\nof channels is considered valid.\nParameters:\nThe number of channels\nThe input channel_mask\nThe\nGstAudio.AudioChannelPositions\ntrue if channel and channel mask are valid and could be converted\nConvert the channels present in channel_mask to a position array\n(which should have at least channels entries ensured by caller).\nIf channel_mask is set to 0, it is considered as 'not present' for purpose\nof conversion.\nA partially valid channel_mask with less bits set than the number\nof channels is considered valid.\nParameters:\nThe number of channels\nThe input channel_mask\nThe\nGstAudio.AudioChannelPositions\nTrue if channel and channel mask are valid and could be converted\n"});