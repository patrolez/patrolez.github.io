fragment_downloaded_cb({"url":"audio/gstaudioiec61937.html#gst_audio_iec61937_payload","fragment":"\n\tgst_audio_iec61937_payload\n\n\n\tGstAudio.prototype.audio_iec61937_payload\n\n\n\tGstAudio.audio_iec61937_payload\n\nPayloads src in the form specified by IEC 61937 for the type from spec and\nstores the result in dst. src must contain exactly one frame of data and\nthe frame is not checked for errors.\nParameters:\na buffer containing the data to payload\nsize of src in bytes\nthe destination buffer to store the\npayloaded contents in. Should not overlap with src\nsize of dst in bytes\nthe ringbufer spec for src\nthe expected byte order of the payloaded data\ntransfer-full: TRUE if the payloading was successful, FALSE\notherwise.\nPayloads src in the form specified by IEC 61937 for the type from spec and\nstores the result in dst. src must contain exactly one frame of data and\nthe frame is not checked for errors.\nParameters:\na buffer containing the data to payload\nsize of src in bytes\nthe destination buffer to store the\npayloaded contents in. Should not overlap with src\nsize of dst in bytes\nthe ringbufer spec for src\nthe expected byte order of the payloaded data\ntransfer-full: true if the payloading was successful, false\notherwise.\nPayloads src in the form specified by IEC 61937 for the type from spec and\nstores the result in dst. src must contain exactly one frame of data and\nthe frame is not checked for errors.\nParameters:\na buffer containing the data to payload\nsize of src in bytes\nthe destination buffer to store the\npayloaded contents in. Should not overlap with src\nsize of dst in bytes\nthe ringbufer spec for src\nthe expected byte order of the payloaded data\ntransfer-full: True if the payloading was successful, False\notherwise.\n"});