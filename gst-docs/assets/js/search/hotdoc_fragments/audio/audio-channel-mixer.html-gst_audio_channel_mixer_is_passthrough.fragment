fragment_downloaded_cb({"url":"audio/audio-channel-mixer.html#gst_audio_channel_mixer_is_passthrough","fragment":"\n\tgst_audio_channel_mixer_is_passthrough\n\n\n\tGstAudio.AudioChannelMixer.prototype.is_passthrough\n\n\n\tGstAudio.AudioChannelMixer.is_passthrough\n\nCheck if mix is in passthrough.\nOnly N x N mix identity matrices are considered passthrough,\nthis is determined by comparing the contents of the matrix\nwith 0.0 and 1.0.\nAs this is floating point comparisons, if the values have been\ngenerated, they should be rounded up or down by explicit\nassignment of 0.0 or 1.0 to values within a user-defined\nepsilon, this code doesn't make assumptions as to what may\nconstitute an appropriate epsilon.\nParameters:\na GstAudioChannelMixer\nTRUE is mix is passthrough.\nCheck if mix is in passthrough.\nOnly N x N mix identity matrices are considered passthrough,\nthis is determined by comparing the contents of the matrix\nwith 0.0 and 1.0.\nAs this is floating point comparisons, if the values have been\ngenerated, they should be rounded up or down by explicit\nassignment of 0.0 or 1.0 to values within a user-defined\nepsilon, this code doesn't make assumptions as to what may\nconstitute an appropriate epsilon.\nParameters:\na GstAudio.AudioChannelMixer\ntrue is mix is passthrough.\nCheck if mix is in passthrough.\nOnly N x N mix identity matrices are considered passthrough,\nthis is determined by comparing the contents of the matrix\nwith 0.0 and 1.0.\nAs this is floating point comparisons, if the values have been\ngenerated, they should be rounded up or down by explicit\nassignment of 0.0 or 1.0 to values within a user-defined\nepsilon, this code doesn't make assumptions as to what may\nconstitute an appropriate epsilon.\nParameters:\na GstAudio.AudioChannelMixer\nTrue is mix is passthrough.\n"});