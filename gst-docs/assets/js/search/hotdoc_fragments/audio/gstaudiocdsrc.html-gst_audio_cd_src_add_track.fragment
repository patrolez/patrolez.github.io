fragment_downloaded_cb({"url":"audio/gstaudiocdsrc.html#gst_audio_cd_src_add_track","fragment":"\n\tgst_audio_cd_src_add_track\n\n\n\tGstAudio.AudioCdSrc.prototype.add_track\n\n\n\tGstAudio.AudioCdSrc.add_track\n\nCDDA sources use this function from their start vfunc to announce the\navailable data and audio tracks to the base source class. The caller\nshould allocate track on the stack, the base source will do a shallow\ncopy of the structure (and take ownership of the taglist if there is one).\nParameters:\na GstAudioCdSrc\naddress of GstAudioCdSrcTrack to add\nFALSE on error, otherwise TRUE.\nCDDA sources use this function from their start vfunc to announce the\navailable data and audio tracks to the base source class. The caller\nshould allocate track on the stack, the base source will do a shallow\ncopy of the structure (and take ownership of the taglist if there is one).\nParameters:\na GstAudio.AudioCdSrc\naddress of GstAudio.AudioCdSrcTrack to add\nFALSE on error, otherwise TRUE.\nCDDA sources use this function from their start vfunc to announce the\navailable data and audio tracks to the base source class. The caller\nshould allocate track on the stack, the base source will do a shallow\ncopy of the structure (and take ownership of the taglist if there is one).\nParameters:\na GstAudio.AudioCdSrc\naddress of GstAudio.AudioCdSrcTrack to add\nFALSE on error, otherwise TRUE.\n"});