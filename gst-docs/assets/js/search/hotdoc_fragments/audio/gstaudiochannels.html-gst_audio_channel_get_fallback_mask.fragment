fragment_downloaded_cb({"url":"audio/gstaudiochannels.html#gst_audio_channel_get_fallback_mask","fragment":"\n\tgst_audio_channel_get_fallback_mask\n\n\n\tGstAudio.prototype.audio_channel_get_fallback_mask\n\n\n\tGstAudio.audio_channel_get_fallback_mask\n\nGet the fallback channel-mask for the given number of channels.\nThis function returns a reasonable fallback channel-mask and should be\ncalled as a last resort when the specific channel map is unknown.\nParameters:\nthe number of channels\na fallback channel-mask for channels or 0 when there is no\nmask and mono.\n\n\tSince\t\t\t: 1.8\n\t\t\nGet the fallback channel-mask for the given number of channels.\nThis function returns a reasonable fallback channel-mask and should be\ncalled as a last resort when the specific channel map is unknown.\nParameters:\nthe number of channels\na fallback channel-mask for channels or 0 when there is no\nmask and mono.\n\n\tSince\t\t\t: 1.8\n\t\t\nGet the fallback channel-mask for the given number of channels.\nThis function returns a reasonable fallback channel-mask and should be\ncalled as a last resort when the specific channel map is unknown.\nParameters:\nthe number of channels\na fallback channel-mask for channels or 0 when there is no\nmask and mono.\n\n\tSince\t\t\t: 1.8\n\t\t\n"});