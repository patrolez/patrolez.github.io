fragment_downloaded_cb({"url":"gst-editing-services/gestrackelement.html#ges_track_element_lookup_child","fragment":"\n\tges_track_element_lookup_child\n\n\n\tGES.TrackElement.prototype.lookup_child\n\n\n\tGES.TrackElement.lookup_child\n\nLooks up which element and pspec would be effected by the given name. If various\ncontained elements have this property name you will get the first one, unless you\nspecify the class name in name.\nParameters:\nObject to lookup the property in\nName of the property to look up. You can specify the name of the\nclass as such: \"ClassName::property-name\", to guarantee that you get the\nproper GParamSpec in case various GstElement-s contain the same property\nname. If you don't do so, you will get the first element found, having\nthis property and the and the corresponding GParamSpec.\npointer to a GstElement that\ntakes the real object to set property on\npointer to take the specification\ndescribing the property\nTRUE if element and pspec could be found. FALSE otherwise. In that\ncase the values for pspec and element are not modified. Unref element after\nusage.\n\n\tdeprecated\t\t\t: Use #ges_timeline_element_lookup_child\n\t\t\nLooks up which element and pspec would be effected by the given name. If various\ncontained elements have this property name you will get the first one, unless you\nspecify the class name in name.\nParameters:\nObject to lookup the property in\nName of the property to look up. You can specify the name of the\nclass as such: \"ClassName::property-name\", to guarantee that you get the\nproper GParamSpec in case various GstElement-s contain the same property\nname. If you don't do so, you will get the first element found, having\nthis property and the and the corresponding GParamSpec.\nReturns a tuple made of:\nTRUE if element and pspec could be found. FALSE otherwise. In that\ncase the values for pspec and element are not modified. Unref element after\nusage.\nTRUE if element and pspec could be found. FALSE otherwise. In that\ncase the values for pspec and element are not modified. Unref element after\nusage.\nTRUE if element and pspec could be found. FALSE otherwise. In that\ncase the values for pspec and element are not modified. Unref element after\nusage.\n\n\tdeprecated\t\t\t: Use #ges_timeline_element_lookup_child\n\t\t\nLooks up which element and pspec would be effected by the given name. If various\ncontained elements have this property name you will get the first one, unless you\nspecify the class name in name.\nParameters:\nObject to lookup the property in\nName of the property to look up. You can specify the name of the\nclass as such: \"ClassName::property-name\", to guarantee that you get the\nproper GParamSpec in case various GstElement-s contain the same property\nname. If you don't do so, you will get the first element found, having\nthis property and the and the corresponding GParamSpec.\nReturns a tuple made of:\nTRUE if element and pspec could be found. FALSE otherwise. In that\ncase the values for pspec and element are not modified. Unref element after\nusage.\nTRUE if element and pspec could be found. FALSE otherwise. In that\ncase the values for pspec and element are not modified. Unref element after\nusage.\nTRUE if element and pspec could be found. FALSE otherwise. In that\ncase the values for pspec and element are not modified. Unref element after\nusage.\n\n\tdeprecated\t\t\t: Use #ges_timeline_element_lookup_child\n\t\t\n"});