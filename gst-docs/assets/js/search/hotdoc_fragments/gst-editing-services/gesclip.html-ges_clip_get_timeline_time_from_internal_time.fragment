fragment_downloaded_cb({"url":"gst-editing-services/gesclip.html#ges_clip_get_timeline_time_from_internal_time","fragment":"\n\tges_clip_get_timeline_time_from_internal_time\n\n\n\tGES.Clip.prototype.get_timeline_time_from_internal_time\n\n\n\tGES.Clip.get_timeline_time_from_internal_time\n\nConvert the internal source time from the child to a timeline time.\nThis will take any time effects placed on the clip into account (see\nGESBaseEffect for what time effects are supported, and how to\ndeclare them in GES).\nWhen internal_time is above the in-point of\nchild, this will return the timeline time at which the internal\ncontent found at internal_time appears in the output of the timeline's\ntrack. For example, this would let you know where in the timeline a\nparticular scene in a media file would appear.\nThis will be done assuming the clip has an indefinite end, so the\ntimeline time may be beyond the end of the clip, or even breaking its\nduration-limit.\nIf, instead, internal_time is below the current\nin-point of child, this will return what you would\nneed to set the start of clip to if you set the\nin-point of child to internal_time and wanted to\nkeep the content of child currently found at the current\nstart of clip at the same timeline position. If\nthis would be negative, the conversion fails. This is useful for\ndetermining what position to use in a GES_EDIT_MODE_TRIM if you wish\nto trim to a specific point in the internal content, such as a\nparticular scene in a media file.\nNote that whilst a clip has no time effects, this second return is\nequivalent to finding the timeline time at which the content of child\nat internal_time would be found in the timeline if it had indefinite\nextent in both directions. However, with non-linear time effects this\nsecond return will be more distinct.\nIn either case, the returned time would be appropriate to use in\nges_timeline_element_edit for GES_EDIT_MODE_TRIM, and similar, if\nyou wish to use a particular internal point as a reference. For\nexample, you could choose to end a clip at a certain internal\n'out-point', similar to the in-point, by\ntranslating the desired end time into the timeline coordinates, and\nusing this position to trim the end of a clip.\nSee ges_clip_get_internal_time_from_timeline_time, which performs the\nreverse, or ges_clip_get_timeline_time_from_source_frame which does\nthe same conversion, but using frame numbers.\nParameters:\nA GESClip\nAn active child of clip with a\ntrack\nA time in the internal time coordinates of child\nReturn location for an error\nThe time in the timeline coordinates corresponding to\ninternal_time, or GST_CLOCK_TIME_NONE if the conversion could not be\nperformed.\n\n\tSince\t\t\t: 1.18\n\t\t\nConvert the internal source time from the child to a timeline time.\nThis will take any time effects placed on the clip into account (see\nGES.BaseEffect for what time effects are supported, and how to\ndeclare them in GES).\nWhen internal_time is above the in-point of\nchild, this will return the timeline time at which the internal\ncontent found at internal_time appears in the output of the timeline's\ntrack. For example, this would let you know where in the timeline a\nparticular scene in a media file would appear.\nThis will be done assuming the clip has an indefinite end, so the\ntimeline time may be beyond the end of the clip, or even breaking its\nduration-limit.\nIf, instead, internal_time is below the current\nin-point of child, this will return what you would\nneed to set the start of clip to if you set the\nin-point of child to internal_time and wanted to\nkeep the content of child currently found at the current\nstart of clip at the same timeline position. If\nthis would be negative, the conversion fails. This is useful for\ndetermining what position to use in a GES.EditMode.EDIT_TRIM if you wish\nto trim to a specific point in the internal content, such as a\nparticular scene in a media file.\nNote that whilst a clip has no time effects, this second return is\nequivalent to finding the timeline time at which the content of child\nat internal_time would be found in the timeline if it had indefinite\nextent in both directions. However, with non-linear time effects this\nsecond return will be more distinct.\nIn either case, the returned time would be appropriate to use in\nGES.TimelineElement.prototype.edit for GES.EditMode.EDIT_TRIM, and similar, if\nyou wish to use a particular internal point as a reference. For\nexample, you could choose to end a clip at a certain internal\n'out-point', similar to the in-point, by\ntranslating the desired end time into the timeline coordinates, and\nusing this position to trim the end of a clip.\nSee GES.Clip.prototype.get_internal_time_from_timeline_time, which performs the\nreverse, or GES.Clip.prototype.get_timeline_time_from_source_frame which does\nthe same conversion, but using frame numbers.\nParameters:\nA GES.Clip\nAn active child of clip with a\ntrack\nA time in the internal time coordinates of child\nThe time in the timeline coordinates corresponding to\ninternal_time, or Gst.CLOCK_TIME_NONE if the conversion could not be\nperformed.\n\n\tSince\t\t\t: 1.18\n\t\t\nConvert the internal source time from the child to a timeline time.\nThis will take any time effects placed on the clip into account (see\nGES.BaseEffect for what time effects are supported, and how to\ndeclare them in GES).\nWhen internal_time is above the in_point of\nchild, this will return the timeline time at which the internal\ncontent found at internal_time appears in the output of the timeline's\ntrack. For example, this would let you know where in the timeline a\nparticular scene in a media file would appear.\nThis will be done assuming the clip has an indefinite end, so the\ntimeline time may be beyond the end of the clip, or even breaking its\nduration_limit.\nIf, instead, internal_time is below the current\nin_point of child, this will return what you would\nneed to set the start of clip to if you set the\nin_point of child to internal_time and wanted to\nkeep the content of child currently found at the current\nstart of clip at the same timeline position. If\nthis would be negative, the conversion fails. This is useful for\ndetermining what position to use in a GES.EditMode.EDIT_TRIM if you wish\nto trim to a specific point in the internal content, such as a\nparticular scene in a media file.\nNote that whilst a clip has no time effects, this second return is\nequivalent to finding the timeline time at which the content of child\nat internal_time would be found in the timeline if it had indefinite\nextent in both directions. However, with non-linear time effects this\nsecond return will be more distinct.\nIn either case, the returned time would be appropriate to use in\nGES.TimelineElement.edit for GES.EditMode.EDIT_TRIM, and similar, if\nyou wish to use a particular internal point as a reference. For\nexample, you could choose to end a clip at a certain internal\n'out-point', similar to the in_point, by\ntranslating the desired end time into the timeline coordinates, and\nusing this position to trim the end of a clip.\nSee GES.Clip.get_internal_time_from_timeline_time, which performs the\nreverse, or GES.Clip.get_timeline_time_from_source_frame which does\nthe same conversion, but using frame numbers.\nParameters:\nA GES.Clip\nAn active child of clip with a\ntrack\nA time in the internal time coordinates of child\nThe time in the timeline coordinates corresponding to\ninternal_time, or Gst.CLOCK_TIME_NONE if the conversion could not be\nperformed.\n\n\tSince\t\t\t: 1.18\n\t\t\n"});