fragment_downloaded_cb({"url":"gst-editing-services/gesclip.html#core-children","fragment":"Core Children\nIn more detail, clips will usually have some *core* GESTrackElement\nchildren, which are created by the clip when it is added to a layer in\na timeline. The type and form of these core children will depend on the\nclip's subclass. You can use ges_track_element_is_core to determine\nwhether a track element is considered such a core track element. Note,\nif a core track element is part of a clip, it will always be treated as\na core child of the clip. You can connect to the\nchild-added signal to be notified of their creation.\nWhen a child is added to a clip, the timeline will select its tracks\nusing select-tracks-for-object. Note that it may be the\ncase that the child will still have no set track\nafter this process. For example, if the timeline does not have a track\nof the corresponding track-type. A clip can safely contain\nsuch children, which may have their track set later, although they will\nplay no functioning role in the timeline in the meantime.\nIf a clip may create track elements with various\ntrack-type(s), such as a GESUriClip, but you only\nwant it to create a subset of these types, you should set the\nsupported-formats of the clip to the subset of types. This\nshould be done before adding the clip to a layer.\nIf a clip will produce several core elements of the same\ntrack-type, you should connect to the timeline's\nselect-tracks-for-object signal to coordinate which\ntracks each element should land in. Note, no two core children within a\nclip can share the same GESTrack, so you should not select the same\ntrack for two separate core children. Provided you stick to this rule,\nit is still safe to select several tracks for the same core child, the\ncore child will be copied into the additional tracks. You can manually\nadd the child to more tracks later using ges_clip_add_child_to_track.\nIf you do not wish to use a core child, you can always select no track.\nThe in-point of the clip will control the\nin-point of its core children to be the same\nvalue if their has-internal-source is set to TRUE.\nThe max-duration of the clip is the minimum\nmax-duration of its core children. If you set its\nvalue to anything other than its current value, this will also set the\nmax-duration of all its core children to the same\nvalue if their has-internal-source is set to TRUE.\nAs a special case, whilst a clip does not yet have any core children,\nits max-duration may be set to indicate what its\nvalue will be once they are created.\n"});