fragment_downloaded_cb({"url":"gst-editing-services/gesclip.html#ges_clip_get_internal_time_from_timeline_time","fragment":"\n\tges_clip_get_internal_time_from_timeline_time\n\n\n\tGES.Clip.prototype.get_internal_time_from_timeline_time\n\n\n\tGES.Clip.get_internal_time_from_timeline_time\n\nConvert the timeline time to an internal source time of the child.\nThis will take any time effects placed on the clip into account (see\nGESBaseEffect for what time effects are supported, and how to\ndeclare them in GES).\nWhen timeline_time is above the start of clip,\nthis will return the internal time at which the content that appears at\ntimeline_time in the output of the timeline is created in child. For\nexample, if timeline_time corresponds to the current seek position,\nthis would let you know which part of a media file is being read.\nThis will be done assuming the clip has an indefinite end, so the\ninternal time may be beyond the current out-point of the child, or even\nits max-duration.\nIf, instead, timeline_time is below the current\nstart of clip, this will return what you would\nneed to set the in-point of child to if you set\nthe start of clip to timeline_time and wanted\nto keep the content of child currently found at the current\nstart of clip at the same timeline position. If\nthis would be negative, the conversion fails. This is useful for\ndetermining what in-point would result from a\nGES_EDIT_MODE_TRIM to timeline_time.\nNote that whilst a clip has no time effects, this second return is\nequivalent to finding the internal time at which the content that\nappears at timeline_time in the timeline can be found in child if it\nhad indefinite extent in both directions. However, with non-linear time\neffects this second return will be more distinct.\nIn either case, the returned time would be appropriate to use for the\nin-point or max-duration of the\nchild.\nSee ges_clip_get_timeline_time_from_internal_time, which performs the\nreverse.\nParameters:\nA GESClip\nAn active child of clip with a\ntrack\nA time in the timeline time coordinates\nReturn location for an error\nThe time in the internal coordinates of child corresponding\nto timeline_time, or GST_CLOCK_TIME_NONE if the conversion could not\nbe performed.\n\n\tSince\t\t\t: 1.18\n\t\t\nConvert the timeline time to an internal source time of the child.\nThis will take any time effects placed on the clip into account (see\nGES.BaseEffect for what time effects are supported, and how to\ndeclare them in GES).\nWhen timeline_time is above the start of clip,\nthis will return the internal time at which the content that appears at\ntimeline_time in the output of the timeline is created in child. For\nexample, if timeline_time corresponds to the current seek position,\nthis would let you know which part of a media file is being read.\nThis will be done assuming the clip has an indefinite end, so the\ninternal time may be beyond the current out-point of the child, or even\nits max-duration.\nIf, instead, timeline_time is below the current\nstart of clip, this will return what you would\nneed to set the in-point of child to if you set\nthe start of clip to timeline_time and wanted\nto keep the content of child currently found at the current\nstart of clip at the same timeline position. If\nthis would be negative, the conversion fails. This is useful for\ndetermining what in-point would result from a\nGES.EditMode.EDIT_TRIM to timeline_time.\nNote that whilst a clip has no time effects, this second return is\nequivalent to finding the internal time at which the content that\nappears at timeline_time in the timeline can be found in child if it\nhad indefinite extent in both directions. However, with non-linear time\neffects this second return will be more distinct.\nIn either case, the returned time would be appropriate to use for the\nin-point or max-duration of the\nchild.\nSee GES.Clip.prototype.get_timeline_time_from_internal_time, which performs the\nreverse.\nParameters:\nA GES.Clip\nAn active child of clip with a\ntrack\nA time in the timeline time coordinates\nThe time in the internal coordinates of child corresponding\nto timeline_time, or Gst.CLOCK_TIME_NONE if the conversion could not\nbe performed.\n\n\tSince\t\t\t: 1.18\n\t\t\nConvert the timeline time to an internal source time of the child.\nThis will take any time effects placed on the clip into account (see\nGES.BaseEffect for what time effects are supported, and how to\ndeclare them in GES).\nWhen timeline_time is above the start of clip,\nthis will return the internal time at which the content that appears at\ntimeline_time in the output of the timeline is created in child. For\nexample, if timeline_time corresponds to the current seek position,\nthis would let you know which part of a media file is being read.\nThis will be done assuming the clip has an indefinite end, so the\ninternal time may be beyond the current out-point of the child, or even\nits max_duration.\nIf, instead, timeline_time is below the current\nstart of clip, this will return what you would\nneed to set the in_point of child to if you set\nthe start of clip to timeline_time and wanted\nto keep the content of child currently found at the current\nstart of clip at the same timeline position. If\nthis would be negative, the conversion fails. This is useful for\ndetermining what in_point would result from a\nGES.EditMode.EDIT_TRIM to timeline_time.\nNote that whilst a clip has no time effects, this second return is\nequivalent to finding the internal time at which the content that\nappears at timeline_time in the timeline can be found in child if it\nhad indefinite extent in both directions. However, with non-linear time\neffects this second return will be more distinct.\nIn either case, the returned time would be appropriate to use for the\nin_point or max_duration of the\nchild.\nSee GES.Clip.get_timeline_time_from_internal_time, which performs the\nreverse.\nParameters:\nA GES.Clip\nAn active child of clip with a\ntrack\nA time in the timeline time coordinates\nThe time in the internal coordinates of child corresponding\nto timeline_time, or Gst.CLOCK_TIME_NONE if the conversion could not\nbe performed.\n\n\tSince\t\t\t: 1.18\n\t\t\n"});