fragment_downloaded_cb({"url":"gst-editing-services/gesclip.html#ges_clip_split_full","fragment":"\n\tges_clip_split_full\n\n\n\tGES.Clip.prototype.split_full\n\n\n\tGES.Clip.split_full\n\nSplits a clip at the given timeline position into two clips. The clip\nmust already have a layer.\nThe original clip's duration is reduced such that\nits end point matches the split position. Then a new clip is created in\nthe same layer, whose start matches the split\nposition and duration will be set such that its end\npoint matches the old end point of the original clip. Thus, the two\nclips together will occupy the same positions in the timeline as the\noriginal clip did.\nThe children of the new clip will be new copies of the original clip's\nchildren, so it will share the same sources and use the same\noperations.\nThe new clip will also have its in-point set so\nthat any internal data will appear in the timeline at the same time.\nThus, when the timeline is played, the playback of data should\nappear the same. This may be complicated by any additional\nGESEffect-s that have been placed on the original clip that depend on\nthe playback time or change the data consumption rate of sources. This\nmethod will attempt to translate these effects such that the playback\nappears the same. In such complex situations, you may get a better\nresult if you place the clip in a separate sub GESProject, which only\ncontains this clip (and its effects), and in the original layer\ncreate two neighbouring GESUriClip-s that reference this sub-project,\nbut at a different in-point.\nParameters:\nThe GESClip to split\nThe timeline position at which to perform the split, between\nthe start and end of the clip\nReturn location for an error\nThe newly created clip resulting\nfrom the splitting clip, or NULL if clip can't be split.\n\n\tSince\t\t\t: 1.18\n\t\t\nSplits a clip at the given timeline position into two clips. The clip\nmust already have a layer.\nThe original clip's duration is reduced such that\nits end point matches the split position. Then a new clip is created in\nthe same layer, whose start matches the split\nposition and duration will be set such that its end\npoint matches the old end point of the original clip. Thus, the two\nclips together will occupy the same positions in the timeline as the\noriginal clip did.\nThe children of the new clip will be new copies of the original clip's\nchildren, so it will share the same sources and use the same\noperations.\nThe new clip will also have its in-point set so\nthat any internal data will appear in the timeline at the same time.\nThus, when the timeline is played, the playback of data should\nappear the same. This may be complicated by any additional\nGES.Effect-s that have been placed on the original clip that depend on\nthe playback time or change the data consumption rate of sources. This\nmethod will attempt to translate these effects such that the playback\nappears the same. In such complex situations, you may get a better\nresult if you place the clip in a separate sub GES.Project, which only\ncontains this clip (and its effects), and in the original layer\ncreate two neighbouring GES.UriClip-s that reference this sub-project,\nbut at a different in-point.\nParameters:\nThe GES.Clip to split\nThe timeline position at which to perform the split, between\nthe start and end of the clip\nThe newly created clip resulting\nfrom the splitting clip, or null if clip can't be split.\n\n\tSince\t\t\t: 1.18\n\t\t\nSplits a clip at the given timeline position into two clips. The clip\nmust already have a layer.\nThe original clip's duration is reduced such that\nits end point matches the split position. Then a new clip is created in\nthe same layer, whose start matches the split\nposition and duration will be set such that its end\npoint matches the old end point of the original clip. Thus, the two\nclips together will occupy the same positions in the timeline as the\noriginal clip did.\nThe children of the new clip will be new copies of the original clip's\nchildren, so it will share the same sources and use the same\noperations.\nThe new clip will also have its in_point set so\nthat any internal data will appear in the timeline at the same time.\nThus, when the timeline is played, the playback of data should\nappear the same. This may be complicated by any additional\nGES.Effect-s that have been placed on the original clip that depend on\nthe playback time or change the data consumption rate of sources. This\nmethod will attempt to translate these effects such that the playback\nappears the same. In such complex situations, you may get a better\nresult if you place the clip in a separate sub GES.Project, which only\ncontains this clip (and its effects), and in the original layer\ncreate two neighbouring GES.UriClip-s that reference this sub-project,\nbut at a different in_point.\nParameters:\nThe GES.Clip to split\nThe timeline position at which to perform the split, between\nthe start and end of the clip\nThe newly created clip resulting\nfrom the splitting clip, or None if clip can't be split.\n\n\tSince\t\t\t: 1.18\n\t\t\n"});