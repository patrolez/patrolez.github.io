fragment_downloaded_cb({"url":"applib/gstappsrc.html#gst_app_src_push_buffer","fragment":"\n\tgst_app_src_push_buffer\n\n\n\tGstApp.AppSrc.prototype.push_buffer\n\n\n\tGstApp.AppSrc.push_buffer\n\nAdds a buffer to the queue of buffers that the appsrc element will\npush to its source pad.  This function takes ownership of the buffer.\nWhen the block property is TRUE, this function can block until free\nspace becomes available in the queue.\nParameters:\na GstAppSrc\na GstBuffer to push\nGST_FLOW_OK when the buffer was successfully queued.\nGST_FLOW_FLUSHING when appsrc is not PAUSED or PLAYING.\nGST_FLOW_EOS when EOS occurred.\nAdds a buffer to the queue of buffers that the appsrc element will\npush to its source pad.  This function takes ownership of the buffer.\nWhen the block property is TRUE, this function can block until free\nspace becomes available in the queue.\nParameters:\na GstApp.AppSrc\na Gst.Buffer to push\nGst.FlowReturn.OK when the buffer was successfully queued.\nGst.FlowReturn.FLUSHING when appsrc is not PAUSED or PLAYING.\nGst.FlowReturn.EOS when EOS occurred.\nAdds a buffer to the queue of buffers that the appsrc element will\npush to its source pad.  This function takes ownership of the buffer.\nWhen the block property is TRUE, this function can block until free\nspace becomes available in the queue.\nParameters:\na GstApp.AppSrc\na Gst.Buffer to push\nGst.FlowReturn.OK when the buffer was successfully queued.\nGst.FlowReturn.FLUSHING when appsrc is not PAUSED or PLAYING.\nGst.FlowReturn.EOS when EOS occurred.\n"});