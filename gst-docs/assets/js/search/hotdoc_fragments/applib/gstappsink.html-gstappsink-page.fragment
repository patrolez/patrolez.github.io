fragment_downloaded_cb({"url":"applib/gstappsink.html#gstappsink-page","fragment":"GstAppSink\nAppsink is a sink plugin that supports many different methods for making\nthe application get a handle on the GStreamer data in a pipeline. Unlike\nmost GStreamer elements, Appsink provides external API functions.\nappsink can be used by linking to the gstappsink.h header file to access the\nmethods or by using the appsink action signals and properties.\nThe normal way of retrieving samples from appsink is by using the\ngst_app_sink_pull_sample and gst_app_sink_pull_preroll methods.\nThese methods block until a sample becomes available in the sink or when the\nsink is shut down or reaches EOS. There are also timed variants of these\nmethods, gst_app_sink_try_pull_sample and gst_app_sink_try_pull_preroll,\nwhich accept a timeout parameter to limit the amount of time to wait.\nAppsink will internally use a queue to collect buffers from the streaming\nthread. If the application is not pulling samples fast enough, this queue\nwill consume a lot of memory over time. The \"max-buffers\", \"max-time\" and \"max-bytes\"\nproperties can be used to limit the queue size. The \"drop\" property controls whether the\nstreaming thread blocks or if older buffers are dropped when the maximum\nqueue size is reached. Note that blocking the streaming thread can negatively\naffect real-time performance and should be avoided.\nIf a blocking behaviour is not desirable, setting the \"emit-signals\" property\nto TRUE will make appsink emit the \"new-sample\" and \"new-preroll\" signals\nwhen a sample can be pulled without blocking.\nThe \"caps\" property on appsink can be used to control the formats that\nappsink can receive. This property can contain non-fixed caps, the format of\nthe pulled samples can be obtained by getting the sample caps.\nIf one of the pull-preroll or pull-sample methods return NULL, the appsink\nis stopped or in the EOS state. You can check for the EOS state with the\n\"eos\" property or with the gst_app_sink_is_eos method.\nThe eos signal can also be used to be informed when the EOS state is reached\nto avoid polling.\n"});