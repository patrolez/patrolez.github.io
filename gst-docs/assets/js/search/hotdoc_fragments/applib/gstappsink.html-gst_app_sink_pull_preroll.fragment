fragment_downloaded_cb({"url":"applib/gstappsink.html#gst_app_sink_pull_preroll","fragment":"\n\tgst_app_sink_pull_preroll\n\n\n\tGstApp.AppSink.prototype.pull_preroll\n\n\n\tGstApp.AppSink.pull_preroll\n\nGet the last preroll sample in appsink. This was the sample that caused the\nappsink to preroll in the PAUSED state.\nThis function is typically used when dealing with a pipeline in the PAUSED\nstate. Calling this function after doing a seek will give the sample right\nafter the seek position.\nCalling this function will clear the internal reference to the preroll\nbuffer.\nNote that the preroll sample will also be returned as the first sample\nwhen calling gst_app_sink_pull_sample.\nIf an EOS event was received before any buffers, this function returns\nNULL. Use gst_app_sink_is_eos () to check for the EOS condition.\nThis function blocks until a preroll sample or EOS is received or the appsink\nelement is set to the READY/NULL state.\nParameters:\na GstAppSink\na GstSample or NULL when the appsink is stopped or EOS.\nCall gst_sample_unref after usage.\nGet the last preroll sample in appsink. This was the sample that caused the\nappsink to preroll in the PAUSED state.\nThis function is typically used when dealing with a pipeline in the PAUSED\nstate. Calling this function after doing a seek will give the sample right\nafter the seek position.\nCalling this function will clear the internal reference to the preroll\nbuffer.\nNote that the preroll sample will also be returned as the first sample\nwhen calling GstApp.AppSink.prototype.pull_sample.\nIf an EOS event was received before any buffers, this function returns\nnull. Use gst_app_sink_is_eos () to check for the EOS condition.\nThis function blocks until a preroll sample or EOS is received or the appsink\nelement is set to the READY/NULL state.\nParameters:\na GstApp.AppSink\na Gst.Sample or NULL when the appsink is stopped or EOS.\nCall gst_sample_unref (not introspectable) after usage.\nGet the last preroll sample in appsink. This was the sample that caused the\nappsink to preroll in the PAUSED state.\nThis function is typically used when dealing with a pipeline in the PAUSED\nstate. Calling this function after doing a seek will give the sample right\nafter the seek position.\nCalling this function will clear the internal reference to the preroll\nbuffer.\nNote that the preroll sample will also be returned as the first sample\nwhen calling GstApp.AppSink.pull_sample.\nIf an EOS event was received before any buffers, this function returns\nNone. Use gst_app_sink_is_eos () to check for the EOS condition.\nThis function blocks until a preroll sample or EOS is received or the appsink\nelement is set to the READY/NULL state.\nParameters:\na GstApp.AppSink\na Gst.Sample or NULL when the appsink is stopped or EOS.\nCall gst_sample_unref (not introspectable) after usage.\n"});