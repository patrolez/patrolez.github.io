fragment_downloaded_cb({"url":"applib/gstappsink.html#GstAppSink::try-pull-object","fragment":"\n\ttry-pull-object\n\n\n\ttry-pull-object\n\n\n\ttry-pull-object\n\nThis function blocks until a sample or an event becomes available or the appsink\nelement is set to the READY/NULL state or the timeout expires.\nThis function will only return samples when the appsink is in the PLAYING\nstate. All rendered samples and events will be put in a queue so that the application\ncan pull them at its own rate.\nEvents can be pulled when the appsink is in the READY, PAUSED or PLAYING state.\nNote that when the application does not pull samples fast enough, the\nqueued samples could consume a lot of memory, especially when dealing with\nraw video frames. It's possible to control the behaviour of the queue with\nthe \"drop\" and \"max-buffers\" / \"max-bytes\" / \"max-time\" set of properties.\nThis function will only pull serialized events, excluding\nthe EOS event for which this functions returns\nNULL. Use gst_app_sink_is_eos to check for the EOS condition.\nThis signal is a variant of try-pull-sample: that can be used\nto handle incoming events as well as samples.\nNote that future releases may extend this API to return other object types\nso make sure that your code is checking for the actual type it is handling.\nParameters:\nthe maximum amount of time to wait for a sample\na GstSample or a GstEvent or NULL when the appsink is stopped or EOS or the timeout expires.\n\n\tFlags:\t\n\t\n\t\t\n\t\t\t\tRun Last\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tAction\n\t\t\t\n\n\n\tSince\t\t\t: 1.20\n\t\t\nThis function blocks until a sample or an event becomes available or the appsink\nelement is set to the READY/NULL state or the timeout expires.\nThis function will only return samples when the appsink is in the PLAYING\nstate. All rendered samples and events will be put in a queue so that the application\ncan pull them at its own rate.\nEvents can be pulled when the appsink is in the READY, PAUSED or PLAYING state.\nNote that when the application does not pull samples fast enough, the\nqueued samples could consume a lot of memory, especially when dealing with\nraw video frames. It's possible to control the behaviour of the queue with\nthe \"drop\" and \"max-buffers\" / \"max-bytes\" / \"max-time\" set of properties.\nThis function will only pull serialized events, excluding\nthe EOS event for which this functions returns\nnull. Use GstApp.AppSink.prototype.is_eos to check for the EOS condition.\nThis signal is a variant of try-pull-sample: that can be used\nto handle incoming events as well as samples.\nNote that future releases may extend this API to return other object types\nso make sure that your code is checking for the actual type it is handling.\nParameters:\nthe maximum amount of time to wait for a sample\na Gst.Sample or a Gst.Event or NULL when the appsink is stopped or EOS or the timeout expires.\n\n\tFlags:\t\n\t\n\t\t\n\t\t\t\tRun Last\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tAction\n\t\t\t\n\n\n\tSince\t\t\t: 1.20\n\t\t\nThis function blocks until a sample or an event becomes available or the appsink\nelement is set to the READY/NULL state or the timeout expires.\nThis function will only return samples when the appsink is in the PLAYING\nstate. All rendered samples and events will be put in a queue so that the application\ncan pull them at its own rate.\nEvents can be pulled when the appsink is in the READY, PAUSED or PLAYING state.\nNote that when the application does not pull samples fast enough, the\nqueued samples could consume a lot of memory, especially when dealing with\nraw video frames. It's possible to control the behaviour of the queue with\nthe \"drop\" and \"max-buffers\" / \"max-bytes\" / \"max-time\" set of properties.\nThis function will only pull serialized events, excluding\nthe EOS event for which this functions returns\nNone. Use GstApp.AppSink.is_eos to check for the EOS condition.\nThis signal is a variant of try-pull-sample: that can be used\nto handle incoming events as well as samples.\nNote that future releases may extend this API to return other object types\nso make sure that your code is checking for the actual type it is handling.\nParameters:\nthe maximum amount of time to wait for a sample\na Gst.Sample or a Gst.Event or NULL when the appsink is stopped or EOS or the timeout expires.\n\n\tFlags:\t\n\t\n\t\t\n\t\t\t\tRun Last\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tAction\n\t\t\t\n\n\n\tSince\t\t\t: 1.20\n\t\t\n"});