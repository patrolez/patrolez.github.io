fragment_downloaded_cb({"url":"rawparse/rawaudioparse.html#rawaudioparse-page","fragment":"rawaudioparse\nThis element parses incoming data as raw audio samples and timestamps it.\nIt also handles seek queries in said raw audio data, and ensures that output\nbuffers contain an integer number of samples, even if the input buffers don't.\nFor example, with sample format S16LE and 2 channels, an input buffer of 411\nbytes contains 102.75 samples. rawaudioparse will then output 102 samples\n(= 408 bytes) and keep the remaining 3 bytes. These will then be prepended to\nthe next input data.\nCurrently, this parser supports raw data in a-law, mu-law, or linear PCM format.\nTo facilitate operation with the unalignedaudioparse element, rawaudioparse\nsupports the \"audio/x-unaligned-raw\" media type. This is treated identically to\n\"audio/x-raw\", except that it is used by source elements which do not guarantee\nthat the buffers they push out are timestamped and contain an integer amount of\nsamples (see the 411 bytes example above). By using a different media type, it\nis guaranteed that unalignedaudioparse is autoplugged, making sure that the\nautoplugged chain does not push unparsed content downstream. The source caps'\nmedia type with linear PCM data is always \"audio/x-raw\", even if the sink caps\nuse \"audio/x-unaligned-raw\".\nThe channel-positions property can be used to set explicit position information\nfor each channel. If the array that is passed to this property does not match\nthe number of channels indicated by num-channels, then said number of channels\nis updated to the array length. If channel-positions is NULL, then the default\nGStreamer positioning is used. This property is also useful for swapping left\nand right in a stereo signal for example.\n"});