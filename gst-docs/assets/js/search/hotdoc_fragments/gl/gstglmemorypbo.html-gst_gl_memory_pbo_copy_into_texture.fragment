fragment_downloaded_cb({"url":"gl/gstglmemorypbo.html#gst_gl_memory_pbo_copy_into_texture","fragment":"\n\tgst_gl_memory_pbo_copy_into_texture\n\n\n\tGstGL.GLMemoryPBO.prototype.copy_into_texture\n\n\n\tGstGL.GLMemoryPBO.copy_into_texture\n\nCopies gl_mem into the texture specified by tex_id.  The format of tex_id\nis specified by tex_format, width and height.\nIf respecify is TRUE, then the copy is performed in terms of the texture\ndata.  This is useful for splitting RGBA textures into RG or R textures or\nvice versa. The requirement for this to succeed is that the backing texture\ndata must be the same size, i.e. say a RGBA8 texture is converted into a RG8\ntexture, then the RG texture must have twice as many pixels available for\noutput as the RGBA texture.\nOtherwise, if respecify is FALSE, then the copy is performed per texel\nusing glCopyTexImage.  See the OpenGL specification for details on the\nmappings between texture formats.\nParameters:\na GstGLMemoryPBO\nthe destination texture id\nthe destination GstGLTextureTarget\nthe destination GstGLFormat\nwidth of tex_id\nheight of tex_id\nstride of the backing texture data\nwhether to copy the data or copy per texel\nWhether the copy succeeded\n\n\tSince\t\t\t: 1.8\n\t\t\nCopies gl_mem into the texture specified by tex_id.  The format of tex_id\nis specified by tex_format, width and height.\nIf respecify is true, then the copy is performed in terms of the texture\ndata.  This is useful for splitting RGBA textures into RG or R textures or\nvice versa. The requirement for this to succeed is that the backing texture\ndata must be the same size, i.e. say a RGBA8 texture is converted into a RG8\ntexture, then the RG texture must have twice as many pixels available for\noutput as the RGBA texture.\nOtherwise, if respecify is false, then the copy is performed per texel\nusing glCopyTexImage.  See the OpenGL specification for details on the\nmappings between texture formats.\nParameters:\na GstGL.GLMemoryPBO\nthe destination texture id\nthe destination GstGL.GLTextureTarget\nthe destination GstGL.GLFormat\nwidth of tex_id\nheight of tex_id\nstride of the backing texture data\nwhether to copy the data or copy per texel\nWhether the copy succeeded\n\n\tSince\t\t\t: 1.8\n\t\t\nCopies gl_mem into the texture specified by tex_id.  The format of tex_id\nis specified by tex_format, width and height.\nIf respecify is True, then the copy is performed in terms of the texture\ndata.  This is useful for splitting RGBA textures into RG or R textures or\nvice versa. The requirement for this to succeed is that the backing texture\ndata must be the same size, i.e. say a RGBA8 texture is converted into a RG8\ntexture, then the RG texture must have twice as many pixels available for\noutput as the RGBA texture.\nOtherwise, if respecify is False, then the copy is performed per texel\nusing glCopyTexImage.  See the OpenGL specification for details on the\nmappings between texture formats.\nParameters:\na GstGL.GLMemoryPBO\nthe destination texture id\nthe destination GstGL.GLTextureTarget\nthe destination GstGL.GLFormat\nwidth of tex_id\nheight of tex_id\nstride of the backing texture data\nwhether to copy the data or copy per texel\nWhether the copy succeeded\n\n\tSince\t\t\t: 1.8\n\t\t\n"});