fragment_downloaded_cb({"url":"gl/gstglformat.html#gst_gl_video_format_swizzle","fragment":"\n\tgst_gl_video_format_swizzle\n\n\n\tGstGL.prototype.gl_video_format_swizzle\n\n\n\tGstGL.gl_video_format_swizzle\n\nCalculates the swizzle indices for video_format and gl_format in order to\naccess a texture such that accessing a texel from a texture through the swizzle\nindex produces values in the order (R, G, B, A) or (Y, U, V, A).\nFor multi-planer formats, the swizzle index uses the same component order (RGBA/YUVA)\nand should be applied after combining multiple planes into a single rgba/yuva value.\ne.g. sampling from a NV12 format would have Y from one texture and UV from\nanother texture into a (Y, U, V) value.  Add an Aplha component and then\nperform swizzling.  Sampling from NV21 would produce (Y, V, U) which is then\nswizzled to (Y, U, V).\nParameters:\nthe GstVideoFormat in use\nthe returned swizzle indices\nwhether valid swizzle indices could be found\n\n\tSince\t\t\t: 1.24\n\t\t\nCalculates the swizzle indices for video_format and gl_format in order to\naccess a texture such that accessing a texel from a texture through the swizzle\nindex produces values in the order (R, G, B, A) or (Y, U, V, A).\nFor multi-planer formats, the swizzle index uses the same component order (RGBA/YUVA)\nand should be applied after combining multiple planes into a single rgba/yuva value.\ne.g. sampling from a NV12 format would have Y from one texture and UV from\nanother texture into a (Y, U, V) value.  Add an Aplha component and then\nperform swizzling.  Sampling from NV21 would produce (Y, V, U) which is then\nswizzled to (Y, U, V).\nParameters:\nthe GstVideo.VideoFormat in use\nReturns a tuple made of:\nwhether valid swizzle indices could be found\nwhether valid swizzle indices could be found\n\n\tSince\t\t\t: 1.24\n\t\t\nCalculates the swizzle indices for video_format and gl_format in order to\naccess a texture such that accessing a texel from a texture through the swizzle\nindex produces values in the order (R, G, B, A) or (Y, U, V, A).\nFor multi-planer formats, the swizzle index uses the same component order (RGBA/YUVA)\nand should be applied after combining multiple planes into a single rgba/yuva value.\ne.g. sampling from a NV12 format would have Y from one texture and UV from\nanother texture into a (Y, U, V) value.  Add an Aplha component and then\nperform swizzling.  Sampling from NV21 would produce (Y, V, U) which is then\nswizzled to (Y, U, V).\nParameters:\nthe GstVideo.VideoFormat in use\nReturns a tuple made of:\nwhether valid swizzle indices could be found\nwhether valid swizzle indices could be found\n\n\tSince\t\t\t: 1.24\n\t\t\n"});