fragment_downloaded_cb({"url":"allocators/gstfdmemory.html#gst_fd_allocator_alloc","fragment":"\n\tgst_fd_allocator_alloc\n\n\n\tGstAllocators.FdAllocator.prototype.alloc\n\n\n\tGstAllocators.FdAllocator.alloc\n\nReturn a GstMemory that wraps a generic file descriptor.\nParameters:\nallocator to be used for this memory\nfile descriptor\nmemory size\nextra GstFdMemoryFlags\na GstMemory based on allocator.\nWhen the buffer will be released the allocator will close the fd unless\nthe GST_FD_MEMORY_FLAG_DONT_CLOSE flag is specified.\nThe memory is only mmapped on gst_buffer_map request.\n\n\tSince\t\t\t: 1.6\n\t\t\nReturn a Gst.Memory that wraps a generic file descriptor.\nParameters:\nallocator to be used for this memory\nfile descriptor\nmemory size\nextra GstAllocators.FdMemoryFlags\na GstMemory based on allocator.\nWhen the buffer will be released the allocator will close the fd unless\nthe GstAllocators.FdMemoryFlags.DONT_CLOSE flag is specified.\nThe memory is only mmapped on Gst.Buffer.prototype.map request.\n\n\tSince\t\t\t: 1.6\n\t\t\nReturn a Gst.Memory that wraps a generic file descriptor.\nParameters:\nallocator to be used for this memory\nfile descriptor\nmemory size\nextra GstAllocators.FdMemoryFlags\na GstMemory based on allocator.\nWhen the buffer will be released the allocator will close the fd unless\nthe GstAllocators.FdMemoryFlags.DONT_CLOSE flag is specified.\nThe memory is only mmapped on Gst.Buffer.map request.\n\n\tSince\t\t\t: 1.6\n\t\t\n"});