fragment_downloaded_cb({"url":"allocators/gstdrmdumb.html#gst_drm_dumb_allocator_new_with_device_path","fragment":"\n\tgst_drm_dumb_allocator_new_with_device_path\n\n\n\tGstAllocators.DRMDumbAllocator.prototype.new_with_device_path\n\n\n\tGstAllocators.DRMDumbAllocator.new_with_device_path\n\nCreates a new GstDRMDumbAllocator for the specific device path. This\nfunction can fail if the path does not exist, is not a DRM device or if\nthe DRM device doesnot support DUMB allocation.\nParameters:\npath to the DRM device to open\na new DRM Dumb allocator. Use gst_object_unref\nto release the allocator after usage.\n\n\tSince\t\t\t: 1.24\n\t\t\nCreates a new GstAllocators.DRMDumbAllocator for the specific device path. This\nfunction can fail if the path does not exist, is not a DRM device or if\nthe DRM device doesnot support DUMB allocation.\nParameters:\npath to the DRM device to open\na new DRM Dumb allocator. Use Gst.Object.prototype.unref\nto release the allocator after usage.\n\n\tSince\t\t\t: 1.24\n\t\t\nCreates a new GstAllocators.DRMDumbAllocator for the specific device path. This\nfunction can fail if the path does not exist, is not a DRM device or if\nthe DRM device doesnot support DUMB allocation.\nParameters:\npath to the DRM device to open\na new DRM Dumb allocator. Use Gst.Object.unref\nto release the allocator after usage.\n\n\tSince\t\t\t: 1.24\n\t\t\n"});