fragment_downloaded_cb({"url":"allocators/gstdmabuf.html#gst_dmabuf_allocator_alloc_with_flags","fragment":"\n\tgst_dmabuf_allocator_alloc_with_flags\n\n\n\tGstAllocators.DmaBufAllocator.prototype.alloc_with_flags\n\n\n\tGstAllocators.DmaBufAllocator.alloc_with_flags\n\nReturn a GstMemory that wraps a dmabuf file descriptor.\nParameters:\nallocator to be used for this memory\ndmabuf file descriptor\nmemory size\nextra GstFdMemoryFlags\na GstMemory based on allocator.\nWhen the buffer will be released the allocator will close the fd unless\nthe GST_FD_MEMORY_FLAG_DONT_CLOSE flag is specified.\nThe memory is only mmapped on gst_buffer_mmap request.\n\n\tSince\t\t\t: 1.16\n\t\t\nReturn a Gst.Memory that wraps a dmabuf file descriptor.\nParameters:\nallocator to be used for this memory\ndmabuf file descriptor\nmemory size\nextra GstAllocators.FdMemoryFlags\na GstMemory based on allocator.\nWhen the buffer will be released the allocator will close the fd unless\nthe GstAllocators.FdMemoryFlags.DONT_CLOSE flag is specified.\nThe memory is only mmapped on gst_buffer_mmap request.\n\n\tSince\t\t\t: 1.16\n\t\t\nReturn a Gst.Memory that wraps a dmabuf file descriptor.\nParameters:\nallocator to be used for this memory\ndmabuf file descriptor\nmemory size\nextra GstAllocators.FdMemoryFlags\na GstMemory based on allocator.\nWhen the buffer will be released the allocator will close the fd unless\nthe GstAllocators.FdMemoryFlags.DONT_CLOSE flag is specified.\nThe memory is only mmapped on gst_buffer_mmap request.\n\n\tSince\t\t\t: 1.16\n\t\t\n"});