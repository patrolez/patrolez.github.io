fragment_downloaded_cb({"url":"contribute/index.html#additional-points","fragment":"Additional points\nIf you are submitting a Merge Request for an issue (or multiple issues) that\nalready exist, please add 'Fixes #123' to the commit message of one of your\ncommits, so that there is a cross-reference in GitLab and the issue will be\nclosed automatically when your Merge Request is merged.\nYou do not have to file an issue to go with each Merge Request, it's fine\nto just submit a Merge Request on its own.\nIf your proposed changes are proposed for review but not ready to be merged\nyet, please prefix the Merge Request title with WIP: for Work-in-Progress.\nThat will prevent us from inadvertently merging it and make clear its status.\nPlease make sure the 'Author' field in your commit messages has your full and\nproper name and e-mail address. You can check with e.g. git log or gitk.\nIf your change is for an enhancement (anything that is not supposed to work\nalready, i.e. anything not a bug) or adds new API, please add the\nEnhancement label. This won't affect the way we prioritise your issue,\nbut it does make triaging easier for us.\nIf your Merge Request is against a specific plugin or element or utility library,\nplease prefix the Merge Request summary with element-name:, plugin-name:\nor lib: and keep the rest of the description as short and precise as possible.\nExamples:\nThis makes sure developers looking through the list of open merge requests or\nnotification mails can quickly identify what your change is about. If your text\nis too long and only contains fill words at the beginning, the important\ninformation will be cut off and not show up in the list view or mail client.\nMake liberal use of the reference syntax available to help cross-linking\ndifferent issues and merge requests. e.g. #100 references issue 100 in the\ncurrent project, and !100 references merge request 100 in the current project.\nA complete list is available from gitlab's documentation.\nPlease create separate merge requests for separate issues.\nThere is no golden rule when something counts as a separate issue,\nplease just use your best judgment.\nIf there is an issue that requires related fixes in multiple elements\nor libraries, please also feel free to put everything into one issue. If you\njust happen to have multiple patches for us but they are not really related,\nplease put them in separate issues and merge requests. The main question is\nif it makes sense to discuss and review these patches together or if they\ncould just as well be handled completely separately.\nPlease do not send patches to the gstreamer-devel mailing list. Patches\nsubmitted on the mailing list are most likely going to be ignored, overlooked,\nor you will get a brief reply asking you to put them into gitlab. We do\nnot use the mailing list for patch review.\nPlease do not send pull requests to our github mirror. They will be closed\nautomatically.\nPlease do not attach patches to issues, except in the special case of a fix\nfor a security issue.\nPlease prepare any merge request against a current git checkout of the\nGStreamer monorepo (gstreamer module), against the tip of the main branch.\nIf a merge request is prepared against an old commit or older branch and\ncan't be easily rebased you may be asked to rebase and update the branch on\ntop of the main branch.\nIf you have created a new plugin, please submit a merge request that adds it\nto subprojects/gst-plugins-bad, including any required meson.build\nmodifications, new files and documentation.\n\n\nIf you are submitting a Merge Request for an issue (or multiple issues) that\nalready exist, please add 'Fixes #123' to the commit message of one of your\ncommits, so that there is a cross-reference in GitLab and the issue will be\nclosed automatically when your Merge Request is merged.\n\n\nYou do not have to file an issue to go with each Merge Request, it's fine\nto just submit a Merge Request on its own.\n\n\nIf your proposed changes are proposed for review but not ready to be merged\nyet, please prefix the Merge Request title with WIP: for Work-in-Progress.\nThat will prevent us from inadvertently merging it and make clear its status.\n\n\nPlease make sure the 'Author' field in your commit messages has your full and\nproper name and e-mail address. You can check with e.g. git log or gitk.\n\n\nIf your change is for an enhancement (anything that is not supposed to work\nalready, i.e. anything not a bug) or adds new API, please add the\nEnhancement label. This won't affect the way we prioritise your issue,\nbut it does make triaging easier for us.\n\n\nIf your Merge Request is against a specific plugin or element or utility library,\nplease prefix the Merge Request summary with element-name:, plugin-name:\nor lib: and keep the rest of the description as short and precise as possible.\nExamples:\n\nid3demux: add support for WCOP frame\nriff: add RGB16 support\nplaybin: detect if video-sink supports deinterlacing\ntests: rtprtx unit test is racy\n\nThis makes sure developers looking through the list of open merge requests or\nnotification mails can quickly identify what your change is about. If your text\nis too long and only contains fill words at the beginning, the important\ninformation will be cut off and not show up in the list view or mail client.\n\n\nMake liberal use of the reference syntax available to help cross-linking\ndifferent issues and merge requests. e.g. #100 references issue 100 in the\ncurrent project, and !100 references merge request 100 in the current project.\nA complete list is available from gitlab's documentation.\n\n\nPlease create separate merge requests for separate issues.\nThere is no golden rule when something counts as a separate issue,\nplease just use your best judgment.\nIf there is an issue that requires related fixes in multiple elements\nor libraries, please also feel free to put everything into one issue. If you\njust happen to have multiple patches for us but they are not really related,\nplease put them in separate issues and merge requests. The main question is\nif it makes sense to discuss and review these patches together or if they\ncould just as well be handled completely separately.\n\n\nPlease do not send patches to the gstreamer-devel mailing list. Patches\nsubmitted on the mailing list are most likely going to be ignored, overlooked,\nor you will get a brief reply asking you to put them into gitlab. We do\nnot use the mailing list for patch review.\n\n\nPlease do not send pull requests to our github mirror. They will be closed\nautomatically.\n\n\nPlease do not attach patches to issues, except in the special case of a fix\nfor a security issue.\n\n\nPlease prepare any merge request against a current git checkout of the\nGStreamer monorepo (gstreamer module), against the tip of the main branch.\nIf a merge request is prepared against an old commit or older branch and\ncan't be easily rebased you may be asked to rebase and update the branch on\ntop of the main branch.\n\n\nIf you have created a new plugin, please submit a merge request that adds it\nto subprojects/gst-plugins-bad, including any required meson.build\nmodifications, new files and documentation.\n\n\n\nid3demux: add support for WCOP frame\nriff: add RGB16 support\nplaybin: detect if video-sink supports deinterlacing\ntests: rtprtx unit test is racy\n\n"});