fragment_downloaded_cb({"url":"play/gstplay.html#gstplay-page","fragment":"GstPlay\nThe goal of the GstPlay library is to ease the integration of multimedia\nplayback features in applications. Thus, if you need to build a media player\nfrom the ground-up, GstPlay provides the features you will most likely need.\nAn example player is available in gst-examples/playback/player/gst-play/.\nInternally the GstPlay makes use of the playbin element. playbin3 can be\nselected if the GST_PLAY_USE_PLAYBIN3=1 environment variable has been set.\nImportant note: If your application relies on the GstBus to get\nnotifications from GstPlay, you need to add some explicit clean-up code in\norder to prevent the GstPlay object from leaking. See below for the details.\nIf you use the GstPlaySignalAdapter, no special clean-up is required.\nWhen the GstPlaySignalAdapter is not used, the GstBus owned by GstPlay should\nbe set to flushing state before any attempt to drop the last reference of the\nGstPlay object. An example in C:\nThe messages managed by the player contain a reference to itself, and if the\nbus watch is just removed together with dropping the player then the bus will\nsimply keep them around forever (and the bus never goes away because the\nplayer has a strong reference to it, so there's a reference cycle as long as\nthere are messages). Setting the bus to flushing state forces it to get rid\nof its queued messages, thus breaking any possible reference cycle.\n"});