fragment_downloaded_cb({"url":"base/gstaggregator.html#GstAggregatorClass::aggregate","fragment":"\n\taggregate\n\n\n\tvfunc_aggregate\n\n\n\tdo_aggregate\n\nMandatory.\nCalled when buffers are queued on all sinkpads. Classes\nshould iterate the GstElement->sinkpads and peek or steal\nbuffers from the GstAggregatorPad. If the subclass returns\nGST_FLOW_EOS, sending of the eos event will be taken care\nof. Once / if a buffer has been constructed from the\naggregated buffers, the subclass should call _finish_buffer.\nParameters:\nMandatory.\nCalled when buffers are queued on all sinkpads. Classes\nshould iterate the GstElement->sinkpads and peek or steal\nbuffers from the GstBase.AggregatorPad. If the subclass returns\nGST_FLOW_EOS, sending of the eos event will be taken care\nof. Once / if a buffer has been constructed from the\naggregated buffers, the subclass should call _finish_buffer.\nParameters:\nMandatory.\nCalled when buffers are queued on all sinkpads. Classes\nshould iterate the GstElement->sinkpads and peek or steal\nbuffers from the GstBase.AggregatorPad. If the subclass returns\nGST_FLOW_EOS, sending of the eos event will be taken care\nof. Once / if a buffer has been constructed from the\naggregated buffers, the subclass should call _finish_buffer.\nParameters:\n"});