fragment_downloaded_cb({"url":"base/gstbytereader.html#gst_byte_reader_dup_string_utf16","fragment":"\n\tgst_byte_reader_dup_string_utf16\n\n\n\tGstBase.ByteReader.prototype.dup_string_utf16\n\n\n\tGstBase.ByteReader.dup_string_utf16\n\nFree-function: g_free\nReturns a newly-allocated copy of the current data position if there is\na NUL-terminated UTF-16 string in the data (this could be an empty string\nas well), and advances the current position.\nNo input checking for valid UTF-16 is done. This function is endianness\nagnostic - you should not assume the UTF-16 characters are in host\nendianness.\nThis function will fail if no NUL-terminator was found in in the data.\nNote: there is no peek or get variant of this function to ensure correct\nbyte alignment of the UTF-16 string.\nParameters:\na GstByteReader instance\naddress of a\nguint16 pointer variable in which to store the result\nTRUE if a string could be read, FALSE otherwise. The\nstring put into str must be freed with g_free when no longer needed.\nFree-function: g_free\nReturns a newly-allocated copy of the current data position if there is\na NUL-terminated UTF-16 string in the data (this could be an empty string\nas well), and advances the current position.\nNo input checking for valid UTF-16 is done. This function is endianness\nagnostic - you should not assume the UTF-16 characters are in host\nendianness.\nThis function will fail if no NUL-terminator was found in in the data.\nNote: there is no peek or get variant of this function to ensure correct\nbyte alignment of the UTF-16 string.\nParameters:\na GstBase.ByteReader instance\nReturns a tuple made of:\ntrue if a string could be read, false otherwise. The\nstring put into str must be freed with GLib.prototype.free when no longer needed.\ntrue if a string could be read, false otherwise. The\nstring put into str must be freed with GLib.prototype.free when no longer needed.\nFree-function: g_free\nReturns a newly-allocated copy of the current data position if there is\na NUL-terminated UTF-16 string in the data (this could be an empty string\nas well), and advances the current position.\nNo input checking for valid UTF-16 is done. This function is endianness\nagnostic - you should not assume the UTF-16 characters are in host\nendianness.\nThis function will fail if no NUL-terminator was found in in the data.\nNote: there is no peek or get variant of this function to ensure correct\nbyte alignment of the UTF-16 string.\nParameters:\na GstBase.ByteReader instance\nReturns a tuple made of:\nTrue if a string could be read, False otherwise. The\nstring put into str must be freed with GLib.free when no longer needed.\nTrue if a string could be read, False otherwise. The\nstring put into str must be freed with GLib.free when no longer needed.\n"});