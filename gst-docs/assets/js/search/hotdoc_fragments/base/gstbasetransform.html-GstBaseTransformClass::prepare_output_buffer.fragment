fragment_downloaded_cb({"url":"base/gstbasetransform.html#GstBaseTransformClass::prepare_output_buffer","fragment":"\n\tprepare_output_buffer\n\n\n\tvfunc_prepare_output_buffer\n\n\n\tdo_prepare_output_buffer\n\nOptional.\nSubclasses can override this to do their own\nallocation of output buffers.  Elements that only do\nanalysis can return a subbuffer or even just\nreturn a reference to the input buffer (if in\npassthrough mode). The default implementation will\nuse the negotiated allocator or bufferpool and\ntransform_size to allocate an output buffer or it\nwill return the input buffer in passthrough mode.\nParameters:\nOptional.\nSubclasses can override this to do their own\nallocation of output buffers.  Elements that only do\nanalysis can return a subbuffer or even just\nreturn a reference to the input buffer (if in\npassthrough mode). The default implementation will\nuse the negotiated allocator or bufferpool and\ntransform_size to allocate an output buffer or it\nwill return the input buffer in passthrough mode.\nParameters:\nReturns a tuple made of:\nOptional.\nSubclasses can override this to do their own\nallocation of output buffers.  Elements that only do\nanalysis can return a subbuffer or even just\nreturn a reference to the input buffer (if in\npassthrough mode). The default implementation will\nuse the negotiated allocator or bufferpool and\ntransform_size to allocate an output buffer or it\nwill return the input buffer in passthrough mode.\nParameters:\nReturns a tuple made of:\n"});