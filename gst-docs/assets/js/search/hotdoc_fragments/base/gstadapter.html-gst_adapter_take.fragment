fragment_downloaded_cb({"url":"base/gstadapter.html#gst_adapter_take","fragment":"\n\tgst_adapter_take\n\n\n\tGstBase.Adapter.prototype.take\n\n\n\tGstBase.Adapter.take\n\nReturns a freshly allocated buffer containing the first nbytes bytes of the\nadapter. The returned bytes will be flushed from the adapter.\nCaller owns returned value. g_free after usage.\nFree-function: g_free\nParameters:\na GstAdapter\nthe number of bytes to take\n(transfer full) (array length=nbytes) (element-type guint8) (nullable):\noven-fresh hot data, or NULL if nbytes bytes are not available\nReturns a freshly allocated buffer containing the first nbytes bytes of the\nadapter. The returned bytes will be flushed from the adapter.\nCaller owns returned value. g_free after usage.\nFree-function: g_free\nParameters:\na GstBase.Adapter\nReturns a tuple made of:\n(transfer full) (array length=nbytes) (element-type guint8) (nullable):\noven-fresh hot data, or null if nbytes bytes are not available\n(transfer full) (array length=nbytes) (element-type guint8) (nullable):\noven-fresh hot data, or null if nbytes bytes are not available\nReturns a freshly allocated buffer containing the first nbytes bytes of the\nadapter. The returned bytes will be flushed from the adapter.\nCaller owns returned value. g_free after usage.\nFree-function: g_free\nParameters:\na GstBase.Adapter\nReturns a tuple made of:\n(transfer full) (array length=nbytes) (element-type guint8) (nullable):\noven-fresh hot data, or None if nbytes bytes are not available\n(transfer full) (array length=nbytes) (element-type guint8) (nullable):\noven-fresh hot data, or None if nbytes bytes are not available\n"});