fragment_downloaded_cb({"url":"base/gstbaseparse.html#gst_base_parse_set_duration","fragment":"\n\tgst_base_parse_set_duration\n\n\n\tGstBase.BaseParse.prototype.set_duration\n\n\n\tGstBase.BaseParse.set_duration\n\nSets the duration of the currently playing media. Subclass can use this\nwhen it is able to determine duration and/or notices a change in the media\nduration.  Alternatively, if interval is non-zero (default), then stream\nduration is determined based on estimated bitrate, and updated every interval\nframes.\nParameters:\nGstBaseParse.\nGstFormat.\nduration value.\nhow often to update the duration estimate based on bitrate, or 0.\nSets the duration of the currently playing media. Subclass can use this\nwhen it is able to determine duration and/or notices a change in the media\nduration.  Alternatively, if interval is non-zero (default), then stream\nduration is determined based on estimated bitrate, and updated every interval\nframes.\nParameters:\nGstBase.BaseParse.\nGst.Format.\nduration value.\nhow often to update the duration estimate based on bitrate, or 0.\nSets the duration of the currently playing media. Subclass can use this\nwhen it is able to determine duration and/or notices a change in the media\nduration.  Alternatively, if interval is non-zero (default), then stream\nduration is determined based on estimated bitrate, and updated every interval\nframes.\nParameters:\nGstBase.BaseParse.\nGst.Format.\nduration value.\nhow often to update the duration estimate based on bitrate, or 0.\n"});