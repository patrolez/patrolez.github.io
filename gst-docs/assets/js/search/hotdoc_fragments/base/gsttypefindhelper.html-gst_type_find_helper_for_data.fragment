fragment_downloaded_cb({"url":"base/gsttypefindhelper.html#gst_type_find_helper_for_data","fragment":"\n\tgst_type_find_helper_for_data\n\n\n\tGstBase.prototype.type_find_helper_for_data\n\n\n\tGstBase.type_find_helper_for_data\n\nTries to find what type of data is contained in the given data, the\nassumption being that the data represents the beginning of the stream or\nfile.\nAll available typefinders will be called on the data in order of rank. If\na typefinding function returns a probability of GST_TYPE_FIND_MAXIMUM,\ntypefinding is stopped immediately and the found caps will be returned\nright away. Otherwise, all available typefind functions will the tried,\nand the caps with the highest probability will be returned, or NULL if\nthe content of data could not be identified.\nFree-function: gst_caps_unref\nParameters:\nobject doing the typefinding, or NULL (used for logging)\nthe size of data\nlocation to store the probability of the found\ncaps, or NULL\nthe GstCaps corresponding to the data,\nor NULL if no type could be found. The caller should free the caps\nreturned with gst_caps_unref.\nTries to find what type of data is contained in the given data, the\nassumption being that the data represents the beginning of the stream or\nfile.\nAll available typefinders will be called on the data in order of rank. If\na typefinding function returns a probability of Gst.TypeFindProbability.MAXIMUM,\ntypefinding is stopped immediately and the found caps will be returned\nright away. Otherwise, all available typefind functions will the tried,\nand the caps with the highest probability will be returned, or null if\nthe content of data could not be identified.\nFree-function: gst_caps_unref\nParameters:\nobject doing the typefinding, or null (used for logging)\nthe size of data\nReturns a tuple made of:\nthe Gst.Caps corresponding to the data,\nor null if no type could be found. The caller should free the caps\nreturned with gst_caps_unref (not introspectable).\nthe Gst.Caps corresponding to the data,\nor null if no type could be found. The caller should free the caps\nreturned with gst_caps_unref (not introspectable).\nTries to find what type of data is contained in the given data, the\nassumption being that the data represents the beginning of the stream or\nfile.\nAll available typefinders will be called on the data in order of rank. If\na typefinding function returns a probability of Gst.TypeFindProbability.MAXIMUM,\ntypefinding is stopped immediately and the found caps will be returned\nright away. Otherwise, all available typefind functions will the tried,\nand the caps with the highest probability will be returned, or None if\nthe content of data could not be identified.\nFree-function: gst_caps_unref\nParameters:\nobject doing the typefinding, or None (used for logging)\nthe size of data\nReturns a tuple made of:\nthe Gst.Caps corresponding to the data,\nor None if no type could be found. The caller should free the caps\nreturned with gst_caps_unref (not introspectable).\nthe Gst.Caps corresponding to the data,\nor None if no type could be found. The caller should free the caps\nreturned with gst_caps_unref (not introspectable).\n\na pointer with data to typefind\n\n\na pointer with data to typefind\n\n\na pointer with data to typefind\n\n"});