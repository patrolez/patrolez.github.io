fragment_downloaded_cb({"url":"base/gsttypefindhelper.html#gst_type_find_helper_get_range_full","fragment":"\n\tgst_type_find_helper_get_range_full\n\n\n\tGstBase.prototype.type_find_helper_get_range_full\n\n\n\tGstBase.type_find_helper_get_range_full\n\nUtility function to do pull-based typefinding. Unlike gst_type_find_helper\nhowever, this function will use the specified function func to obtain the\ndata needed by the typefind functions, rather than operating on a given\nsource pad. This is useful mostly for elements like tag demuxers which\nstrip off data at the beginning and/or end of a file and want to typefind\nthe stripped data stream before adding their own source pad (the specified\ncallback can then call the upstream peer pad with offsets adjusted for the\ntag size, for example).\nWhen extension is not NULL, this function will first try the typefind\nfunctions for the given extension, which might speed up the typefinding\nin many cases.\nParameters:\nA GstObject that will be passed as first argument to func\nthe parent of obj or NULL\nA generic GstTypeFindHelperGetRangeFunction that will\nbe used to access data at random offsets when doing the typefinding\nThe length in bytes\nextension of the media, or NULL\nreturned caps\nlocation to store the probability of the found\ncaps, or NULL\nthe last GstFlowReturn from pulling a buffer or GST_FLOW_OK if\ntypefinding was successful.\n\n\tSince\t\t\t: 1.14.3\n\t\t\nUtility function to do pull-based typefinding. Unlike GstBase.prototype.type_find_helper\nhowever, this function will use the specified function func to obtain the\ndata needed by the typefind functions, rather than operating on a given\nsource pad. This is useful mostly for elements like tag demuxers which\nstrip off data at the beginning and/or end of a file and want to typefind\nthe stripped data stream before adding their own source pad (the specified\ncallback can then call the upstream peer pad with offsets adjusted for the\ntag size, for example).\nWhen extension is not null, this function will first try the typefind\nfunctions for the given extension, which might speed up the typefinding\nin many cases.\nParameters:\nA Gst.Object that will be passed as first argument to func\nthe parent of obj or null\nA generic GstBase.TypeFindHelperGetRangeFunction that will\nbe used to access data at random offsets when doing the typefinding\nThe length in bytes\nextension of the media, or null\nReturns a tuple made of:\nthe last Gst.FlowReturn from pulling a buffer or Gst.FlowReturn.OK if\ntypefinding was successful.\nthe last Gst.FlowReturn from pulling a buffer or Gst.FlowReturn.OK if\ntypefinding was successful.\nthe last Gst.FlowReturn from pulling a buffer or Gst.FlowReturn.OK if\ntypefinding was successful.\n\n\tSince\t\t\t: 1.14.3\n\t\t\nUtility function to do pull-based typefinding. Unlike GstBase.type_find_helper\nhowever, this function will use the specified function func to obtain the\ndata needed by the typefind functions, rather than operating on a given\nsource pad. This is useful mostly for elements like tag demuxers which\nstrip off data at the beginning and/or end of a file and want to typefind\nthe stripped data stream before adding their own source pad (the specified\ncallback can then call the upstream peer pad with offsets adjusted for the\ntag size, for example).\nWhen extension is not None, this function will first try the typefind\nfunctions for the given extension, which might speed up the typefinding\nin many cases.\nParameters:\nA Gst.Object that will be passed as first argument to func\nthe parent of obj or None\nA generic GstBase.TypeFindHelperGetRangeFunction that will\nbe used to access data at random offsets when doing the typefinding\nThe length in bytes\nextension of the media, or None\nReturns a tuple made of:\nthe last Gst.FlowReturn from pulling a buffer or Gst.FlowReturn.OK if\ntypefinding was successful.\nthe last Gst.FlowReturn from pulling a buffer or Gst.FlowReturn.OK if\ntypefinding was successful.\nthe last Gst.FlowReturn from pulling a buffer or Gst.FlowReturn.OK if\ntypefinding was successful.\n\n\tSince\t\t\t: 1.14.3\n\t\t\n"});