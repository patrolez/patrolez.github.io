fragment_downloaded_cb({"url":"base/gsttypefindhelper.html#gst_type_find_list_factories_for_caps","fragment":"\n\tgst_type_find_list_factories_for_caps\n\n\n\tGstBase.prototype.type_find_list_factories_for_caps\n\n\n\tGstBase.type_find_list_factories_for_caps\n\nTries to find the best GstTypeFindFactory associated with caps.\nThe typefinder that can handle caps will be returned.\nFree-function: g_list_free\nParameters:\nobject doing the typefinding, or NULL (used for logging)\ncaps of the media\nthe list of GstTypeFindFactory\ncorresponding to caps, or NULL if no typefinder could be\nfound. Caller should free the returned list with g_list_free\nand list elements with gst_object_unref.\n\n\tSince\t\t\t: 1.22\n\t\t\nTries to find the best Gst.TypeFindFactory associated with caps.\nThe typefinder that can handle caps will be returned.\nFree-function: g_list_free\nParameters:\nobject doing the typefinding, or null (used for logging)\ncaps of the media\nthe list of Gst.TypeFindFactory\ncorresponding to caps, or null if no typefinder could be\nfound. Caller should free the returned list with g_list_free (not introspectable)\nand list elements with Gst.Object.prototype.unref.\n\n\tSince\t\t\t: 1.22\n\t\t\nTries to find the best Gst.TypeFindFactory associated with caps.\nThe typefinder that can handle caps will be returned.\nFree-function: g_list_free\nParameters:\nobject doing the typefinding, or None (used for logging)\ncaps of the media\nthe list of Gst.TypeFindFactory\ncorresponding to caps, or None if no typefinder could be\nfound. Caller should free the returned list with g_list_free (not introspectable)\nand list elements with Gst.Object.unref.\n\n\tSince\t\t\t: 1.22\n\t\t\n"});