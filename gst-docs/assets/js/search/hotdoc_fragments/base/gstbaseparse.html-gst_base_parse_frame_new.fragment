fragment_downloaded_cb({"url":"base/gstbaseparse.html#gst_base_parse_frame_new","fragment":"\n\tgst_base_parse_frame_new\n\n\n\tGstBase.BaseParseFrame.prototype.new\n\n\n\tGstBase.BaseParseFrame.new\n\nAllocates a new GstBaseParseFrame. This function is mainly for bindings,\nelements written in C should usually allocate the frame on the stack and\nthen use gst_base_parse_frame_init to initialise it.\nParameters:\na GstBuffer\nthe flags\nnumber of bytes in this frame which should be counted as\nmetadata overhead, ie. not used to calculate the average bitrate.\nSet to -1 to mark the entire frame as metadata. If in doubt, set to 0.\na newly-allocated GstBaseParseFrame. Free with\ngst_base_parse_frame_free when no longer needed.\nAllocates a new GstBase.BaseParseFrame. This function is mainly for bindings,\nelements written in C should usually allocate the frame on the stack and\nthen use GstBase.BaseParseFrame.prototype.init to initialise it.\nParameters:\na Gst.Buffer\nthe flags\nnumber of bytes in this frame which should be counted as\nmetadata overhead, ie. not used to calculate the average bitrate.\nSet to -1 to mark the entire frame as metadata. If in doubt, set to 0.\na newly-allocated GstBase.BaseParseFrame. Free with\nGstBase.BaseParseFrame.prototype.free when no longer needed.\nAllocates a new GstBase.BaseParseFrame. This function is mainly for bindings,\nelements written in C should usually allocate the frame on the stack and\nthen use GstBase.BaseParseFrame.init to initialise it.\nParameters:\na Gst.Buffer\nthe flags\nnumber of bytes in this frame which should be counted as\nmetadata overhead, ie. not used to calculate the average bitrate.\nSet to -1 to mark the entire frame as metadata. If in doubt, set to 0.\na newly-allocated GstBase.BaseParseFrame. Free with\nGstBase.BaseParseFrame.free when no longer needed.\n"});