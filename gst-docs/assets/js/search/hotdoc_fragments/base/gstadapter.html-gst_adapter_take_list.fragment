fragment_downloaded_cb({"url":"base/gstadapter.html#gst_adapter_take_list","fragment":"\n\tgst_adapter_take_list\n\n\n\tGstBase.Adapter.prototype.take_list\n\n\n\tGstBase.Adapter.take_list\n\nReturns a GList of buffers containing the first nbytes bytes of the\nadapter. The returned bytes will be flushed from the adapter.\nWhen the caller can deal with individual buffers, this function is more\nperformant because no memory should be copied.\nCaller owns returned list and contained buffers. gst_buffer_unref each\nbuffer in the list before freeing the list after usage.\nParameters:\na GstAdapter\nthe number of bytes to take\na GList of\nbuffers containing the first nbytes of the adapter, or NULL if nbytes\nbytes are not available\nReturns a GLib.List of buffers containing the first nbytes bytes of the\nadapter. The returned bytes will be flushed from the adapter.\nWhen the caller can deal with individual buffers, this function is more\nperformant because no memory should be copied.\nCaller owns returned list and contained buffers. gst_buffer_unref (not introspectable) each\nbuffer in the list before freeing the list after usage.\nParameters:\na GstBase.Adapter\nthe number of bytes to take\na GLib.List of\nbuffers containing the first nbytes of the adapter, or null if nbytes\nbytes are not available\nReturns a GLib.List of buffers containing the first nbytes bytes of the\nadapter. The returned bytes will be flushed from the adapter.\nWhen the caller can deal with individual buffers, this function is more\nperformant because no memory should be copied.\nCaller owns returned list and contained buffers. gst_buffer_unref (not introspectable) each\nbuffer in the list before freeing the list after usage.\nParameters:\na GstBase.Adapter\nthe number of bytes to take\na GLib.List of\nbuffers containing the first nbytes of the adapter, or None if nbytes\nbytes are not available\n"});