fragment_downloaded_cb({"url":"base/gstbaseparse.html#gst_base_parse_finish_frame","fragment":"\n\tgst_base_parse_finish_frame\n\n\n\tGstBase.BaseParse.prototype.finish_frame\n\n\n\tGstBase.BaseParse.finish_frame\n\nCollects parsed data and pushes it downstream.\nSource pad caps must be set when this is called.\nIf frame's out_buffer is set, that will be used as subsequent frame data,\nand size amount will be flushed from the input data. The output_buffer size\ncan differ from the consumed size indicated by size.\nOtherwise, size samples will be taken from the input and used for output,\nand the output's metadata (timestamps etc) will be taken as (optionally)\nset by the subclass on frame's (input) buffer (which is otherwise\nignored for any but the above purpose/information).\nNote that the latter buffer is invalidated by this call, whereas the\ncaller retains ownership of frame.\nParameters:\na GstBaseParse\na GstBaseParseFrame\nconsumed input data represented by frame\na GstFlowReturn that should be escalated to caller (of caller)\nCollects parsed data and pushes it downstream.\nSource pad caps must be set when this is called.\nIf frame's out_buffer is set, that will be used as subsequent frame data,\nand size amount will be flushed from the input data. The output_buffer size\ncan differ from the consumed size indicated by size.\nOtherwise, size samples will be taken from the input and used for output,\nand the output's metadata (timestamps etc) will be taken as (optionally)\nset by the subclass on frame's (input) buffer (which is otherwise\nignored for any but the above purpose/information).\nNote that the latter buffer is invalidated by this call, whereas the\ncaller retains ownership of frame.\nParameters:\na GstBase.BaseParse\na GstBase.BaseParseFrame\nconsumed input data represented by frame\na Gst.FlowReturn that should be escalated to caller (of caller)\nCollects parsed data and pushes it downstream.\nSource pad caps must be set when this is called.\nIf frame's out_buffer is set, that will be used as subsequent frame data,\nand size amount will be flushed from the input data. The output_buffer size\ncan differ from the consumed size indicated by size.\nOtherwise, size samples will be taken from the input and used for output,\nand the output's metadata (timestamps etc) will be taken as (optionally)\nset by the subclass on frame's (input) buffer (which is otherwise\nignored for any but the above purpose/information).\nNote that the latter buffer is invalidated by this call, whereas the\ncaller retains ownership of frame.\nParameters:\na GstBase.BaseParse\na GstBase.BaseParseFrame\nconsumed input data represented by frame\na Gst.FlowReturn that should be escalated to caller (of caller)\n"});