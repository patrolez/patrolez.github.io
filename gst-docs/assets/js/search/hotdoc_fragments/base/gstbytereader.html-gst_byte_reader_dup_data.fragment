fragment_downloaded_cb({"url":"base/gstbytereader.html#gst_byte_reader_dup_data","fragment":"\n\tgst_byte_reader_dup_data\n\n\n\tGstBase.ByteReader.prototype.dup_data\n\n\n\tGstBase.ByteReader.dup_data\n\nFree-function: g_free\nReturns a newly-allocated copy of the current data\nposition if at least size bytes are left and\nupdates the current position. Free with g_free when no longer needed.\nParameters:\na GstByteReader instance\nSize in bytes\naddress of a\nguint8 pointer variable in which to store the result\nTRUE if successful, FALSE otherwise.\nFree-function: g_free\nReturns a newly-allocated copy of the current data\nposition if at least size bytes are left and\nupdates the current position. Free with GLib.prototype.free when no longer needed.\nParameters:\na GstBase.ByteReader instance\nReturns a tuple made of:\ntrue if successful, false otherwise.\ntrue if successful, false otherwise.\ntrue if successful, false otherwise.\nFree-function: g_free\nReturns a newly-allocated copy of the current data\nposition if at least size bytes are left and\nupdates the current position. Free with GLib.free when no longer needed.\nParameters:\na GstBase.ByteReader instance\nReturns a tuple made of:\nTrue if successful, False otherwise.\nTrue if successful, False otherwise.\nTrue if successful, False otherwise.\n"});