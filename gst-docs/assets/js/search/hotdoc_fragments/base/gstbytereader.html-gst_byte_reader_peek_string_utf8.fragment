fragment_downloaded_cb({"url":"base/gstbytereader.html#gst_byte_reader_peek_string_utf8","fragment":"\n\tgst_byte_reader_peek_string_utf8\n\n\n\tGstBase.ByteReader.prototype.peek_string_utf8\n\n\n\tGstBase.ByteReader.peek_string_utf8\n\nReturns a constant pointer to the current data position if there is\na NUL-terminated string in the data (this could be just a NUL terminator).\nThe current position will be maintained. This will work for any\nNUL-terminated string with a character width of 8 bits, so ASCII,\nUTF-8, ISO-8859-N etc.\nNo input checking for valid UTF-8 is done.\nThis function will fail if no NUL-terminator was found in in the data.\nParameters:\na GstByteReader instance\naddress of a\ngchar pointer variable in which to store the result\nTRUE if a string could be skipped, FALSE otherwise.\nReturns a constant pointer to the current data position if there is\na NUL-terminated string in the data (this could be just a NUL terminator).\nThe current position will be maintained. This will work for any\nNUL-terminated string with a character width of 8 bits, so ASCII,\nUTF-8, ISO-8859-N etc.\nNo input checking for valid UTF-8 is done.\nThis function will fail if no NUL-terminator was found in in the data.\nParameters:\na GstBase.ByteReader instance\nReturns a tuple made of:\ntrue if a string could be skipped, false otherwise.\ntrue if a string could be skipped, false otherwise.\nReturns a constant pointer to the current data position if there is\na NUL-terminated string in the data (this could be just a NUL terminator).\nThe current position will be maintained. This will work for any\nNUL-terminated string with a character width of 8 bits, so ASCII,\nUTF-8, ISO-8859-N etc.\nNo input checking for valid UTF-8 is done.\nThis function will fail if no NUL-terminator was found in in the data.\nParameters:\na GstBase.ByteReader instance\nReturns a tuple made of:\nTrue if a string could be skipped, False otherwise.\nTrue if a string could be skipped, False otherwise.\n"});