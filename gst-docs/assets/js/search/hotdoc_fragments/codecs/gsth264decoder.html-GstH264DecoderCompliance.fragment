fragment_downloaded_cb({"url":"codecs/gsth264decoder.html#GstH264DecoderCompliance","fragment":"\n\tGstH264DecoderCompliance\n\nMembers\n\n\tGstCodecs.H264DecoderCompliance\n\nMembers\n\n\tGstCodecs.H264DecoderCompliance\n\nMembers\nThe decoder behavior is\nautomatically choosen.\nThe decoder behavior strictly\nconforms to the SPEC. All the decoder behaviors conform to the\nSPEC, not including any nonstandard behavior which is not\nmentioned in the SPEC.\nThe decoder behavior normally\nconforms to the SPEC. Most behaviors conform to the SPEC but\nincluding some nonstandard features which are widely used or\noften used in the industry practice. This meets the request of\nreal streams and usages, but may not 100% conform to the\nSPEC. It has very low risk. E.g., we will output pictures\nwithout waiting DPB being full for the lower latency, which may\ncause B frame disorder when there are reference frames with\nsmaller POC after it in decoder order. And the baseline profile\nmay be mapped to the constrained-baseline profile, but it may\nhave problems when a real baseline stream comes with FMO or\nASO.\nThe decoder behavior\nflexibly conforms to the SPEC. It uses the nonstandard features\nmore aggressively in order to get better performance(for\nexample, lower latency). It may change the result of the\ndecoder and should be used carefully. Besides including all\nrisks in normal mode, it has more risks, such as frames\ndisorder when reference frames POC decrease in decoder order.\n\n\tSince\t\t\t: 1.20\n\t\t\nThe decoder behavior is\nautomatically choosen.\nThe decoder behavior strictly\nconforms to the SPEC. All the decoder behaviors conform to the\nSPEC, not including any nonstandard behavior which is not\nmentioned in the SPEC.\nThe decoder behavior normally\nconforms to the SPEC. Most behaviors conform to the SPEC but\nincluding some nonstandard features which are widely used or\noften used in the industry practice. This meets the request of\nreal streams and usages, but may not 100% conform to the\nSPEC. It has very low risk. E.g., we will output pictures\nwithout waiting DPB being full for the lower latency, which may\ncause B frame disorder when there are reference frames with\nsmaller POC after it in decoder order. And the baseline profile\nmay be mapped to the constrained-baseline profile, but it may\nhave problems when a real baseline stream comes with FMO or\nASO.\nThe decoder behavior\nflexibly conforms to the SPEC. It uses the nonstandard features\nmore aggressively in order to get better performance(for\nexample, lower latency). It may change the result of the\ndecoder and should be used carefully. Besides including all\nrisks in normal mode, it has more risks, such as frames\ndisorder when reference frames POC decrease in decoder order.\n\n\tSince\t\t\t: 1.20\n\t\t\nThe decoder behavior is\nautomatically choosen.\nThe decoder behavior strictly\nconforms to the SPEC. All the decoder behaviors conform to the\nSPEC, not including any nonstandard behavior which is not\nmentioned in the SPEC.\nThe decoder behavior normally\nconforms to the SPEC. Most behaviors conform to the SPEC but\nincluding some nonstandard features which are widely used or\noften used in the industry practice. This meets the request of\nreal streams and usages, but may not 100% conform to the\nSPEC. It has very low risk. E.g., we will output pictures\nwithout waiting DPB being full for the lower latency, which may\ncause B frame disorder when there are reference frames with\nsmaller POC after it in decoder order. And the baseline profile\nmay be mapped to the constrained-baseline profile, but it may\nhave problems when a real baseline stream comes with FMO or\nASO.\nThe decoder behavior\nflexibly conforms to the SPEC. It uses the nonstandard features\nmore aggressively in order to get better performance(for\nexample, lower latency). It may change the result of the\ndecoder and should be used carefully. Besides including all\nrisks in normal mode, it has more risks, such as frames\ndisorder when reference frames POC decrease in decoder order.\n\n\tSince\t\t\t: 1.20\n\t\t\n"});