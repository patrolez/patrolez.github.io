fragment_downloaded_cb({"url":"bad-audio/gstnonstreamaudiodecoder.html#gst_nonstream_audio_decoder_set_output_format_simple","fragment":"\n\tgst_nonstream_audio_decoder_set_output_format_simple\n\n\n\tGstBadAudio.NonstreamAudioDecoder.prototype.set_output_format_simple\n\n\n\tGstBadAudio.NonstreamAudioDecoder.set_output_format_simple\n\nConvenience function; sets the output caps by means of common parameters.\nInternally, this fills a GstAudioInfo structure and calls\ngst_nonstream_audio_decoder_set_output_format.\nParameters:\na GstNonstreamAudioDecoder\nOutput sample rate to use, in Hz\nOutput sample format to use\nNumber of output channels to use\nTRUE if setting the output format succeeded, FALSE otherwise\nConvenience function; sets the output caps by means of common parameters.\nInternally, this fills a GstAudioInfo structure and calls\nGstBadAudio.NonstreamAudioDecoder.prototype.set_output_format.\nParameters:\na GstBadAudio.NonstreamAudioDecoder\nOutput sample rate to use, in Hz\nOutput sample format to use\nNumber of output channels to use\nTRUE if setting the output format succeeded, FALSE otherwise\nConvenience function; sets the output caps by means of common parameters.\nInternally, this fills a GstAudioInfo structure and calls\nGstBadAudio.NonstreamAudioDecoder.set_output_format.\nParameters:\na GstBadAudio.NonstreamAudioDecoder\nOutput sample rate to use, in Hz\nOutput sample format to use\nNumber of output channels to use\nTRUE if setting the output format succeeded, FALSE otherwise\n"});