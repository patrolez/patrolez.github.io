fragment_downloaded_cb({"url":"bad-audio/gstnonstreamaudiodecoder.html#GstNonstreamAudioDecoderClass::load_from_buffer","fragment":"\n\tload_from_buffer\n\n\n\tvfunc_load_from_buffer\n\n\n\tdo_load_from_buffer\n\nRequired if loads_from_sinkpad is set to TRUE (the default value).\nLoads the media from the given buffer. The entire media is supplied at once,\nso after this call, loading should be finished. This function\ncan also make use of a suggested initial subsong & subsong mode and initial\nplayback position (but isn't required to). In case it chooses a different starting\nposition, the function must pass this position to *initial_position.\nThe subclass does not have to unref the input buffer; the base class does that\nalready.\nParameters:\nRequired if loads_from_sinkpad is set to TRUE (the default value).\nLoads the media from the given buffer. The entire media is supplied at once,\nso after this call, loading should be finished. This function\ncan also make use of a suggested initial subsong & subsong mode and initial\nplayback position (but isn't required to). In case it chooses a different starting\nposition, the function must pass this position to *initial_position.\nThe subclass does not have to unref the input buffer; the base class does that\nalready.\nParameters:\nRequired if loads_from_sinkpad is set to TRUE (the default value).\nLoads the media from the given buffer. The entire media is supplied at once,\nso after this call, loading should be finished. This function\ncan also make use of a suggested initial subsong & subsong mode and initial\nplayback position (but isn't required to). In case it chooses a different starting\nposition, the function must pass this position to *initial_position.\nThe subclass does not have to unref the input buffer; the base class does that\nalready.\nParameters:\n"});