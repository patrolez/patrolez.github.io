fragment_downloaded_cb({"url":"additional/design/seqnums.html#seeking","fragment":"Seeking\nA seek event sent to the pipeline is forwarded to all sinks in it. These\nsinks, then, push the SEEK event upstream until they reach an element\nthat is capable of handling it. If the element handling the seek has\nmultiple source pads (tipically a demuxer is handling the seek) it might\nreceive the same seek event on all pads. To prevent handling the same\nseek event multiple times, the seqnum can be used to identify those\nevents as being the same and only handle the one received first.\nAlso, when handling the seek, the element might push FLUSH_START,\nFLUSH_STOP and a segment event. All these events should have the\nseqnum of the received seek event. When this segment is over and an\nEOS/SEGMENT_DONE event is going to be pushed, it should also have the\nseqnum of the seek that originated the segment to be played.\nHaving the same seqnum as the seek on the SEGMENT_DONE or EOS events is\nimportant for the application to identify that the segment requested by\nits seek has finished playing.\n"});