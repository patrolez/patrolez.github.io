fragment_downloaded_cb({"url":"additional/design/states.html#getting-the-state-of-elements","fragment":"Getting the state of elements\nThe get_state() function takes 3 arguments, two pointers that will\nhold the current and pending state and one GstClockTime that holds a\ntimeout value. The function returns a GstElementStateReturn.\nIf the element returned SUCCESS to the previous _set_state()\nfunction, this function will return the last state set on the\nelement and VOID_PENDING in the pending state value. The function\nreturns GST_STATE_SUCCESS.\nIf the element returned NO_PREROLL to the previous _set_state()\nfunction, this function will return the last state set on the\nelement and VOID_PENDING in the pending state value. The function\nreturns GST_STATE_NO_PREROLL.\nIf the element returned FAILURE to the previous _set_state() call,\nthis function will return FAILURE with the state set to the current\nstate of the element and the pending state set to the value used in\nthe last call of _set_state().\nIf the element returned ASYNC to the previous _set_state() call,\nthis function will wait for the element to complete its state change\nup to the amount of time specified in the GstClockTime.\nIf the element does not complete the state change in the\nspecified amount of time, this function will return ASYNC with\nthe state set to the current state and the pending state set to\nthe pending state.\nIf the element completes the state change within the specified\ntimeout, this function returns the updated state and\nVOID_PENDING as the pending state.\nIf the element aborts the ASYNC state change due to an error\nwithin the specified timeout, this function returns FAILURE with\nthe state set to last successful state and pending set to the\nlast attempt. The element should also post an error message on\nthe bus with more information about the problem.\n\n\nIf the element returned SUCCESS to the previous _set_state()\nfunction, this function will return the last state set on the\nelement and VOID_PENDING in the pending state value. The function\nreturns GST_STATE_SUCCESS.\n\n\nIf the element returned NO_PREROLL to the previous _set_state()\nfunction, this function will return the last state set on the\nelement and VOID_PENDING in the pending state value. The function\nreturns GST_STATE_NO_PREROLL.\n\n\nIf the element returned FAILURE to the previous _set_state() call,\nthis function will return FAILURE with the state set to the current\nstate of the element and the pending state set to the value used in\nthe last call of _set_state().\n\n\nIf the element returned ASYNC to the previous _set_state() call,\nthis function will wait for the element to complete its state change\nup to the amount of time specified in the GstClockTime.\n\n\nIf the element does not complete the state change in the\nspecified amount of time, this function will return ASYNC with\nthe state set to the current state and the pending state set to\nthe pending state.\n\n\nIf the element completes the state change within the specified\ntimeout, this function returns the updated state and\nVOID_PENDING as the pending state.\n\n\nIf the element aborts the ASYNC state change due to an error\nwithin the specified timeout, this function returns FAILURE with\nthe state set to last successful state and pending set to the\nlast attempt. The element should also post an error message on\nthe bus with more information about the problem.\n\n\n\n\n\n\nIf the element does not complete the state change in the\nspecified amount of time, this function will return ASYNC with\nthe state set to the current state and the pending state set to\nthe pending state.\n\n\nIf the element completes the state change within the specified\ntimeout, this function returns the updated state and\nVOID_PENDING as the pending state.\n\n\nIf the element aborts the ASYNC state change due to an error\nwithin the specified timeout, this function returns FAILURE with\nthe state set to last successful state and pending set to the\nlast attempt. The element should also post an error message on\nthe bus with more information about the problem.\n\n\n"});