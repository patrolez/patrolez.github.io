fragment_downloaded_cb({"url":"additional/design/gstpipeline.html#state-changes","fragment":"State changes\nIn addition to the normal state change procedure of its parent class\nGstBin, the pipeline performs the following actions during a state\nchange:\nThe running_time represents the total elapsed time, measured in clock\nunits, that the pipeline spent in the PLAYING state (see\nsynchronisation). The running_time is set to 0 after a\nflushing seek.\n\n\nNULL → READY:\n\nset the bus to non-flushing\n\n\n\nREADY → PAUSED:\n\nreset the running_time to 0\n\n\n\nPAUSED → PLAYING:\n\nSelect a clock.\ncalculate base_time using the running_time.\ncalculate and distribute latency.\nset clock and base_time on all elements before performing the state\nchange.\n\n\n\nPLAYING → PAUSED:\n\ncalculate the running_time when the pipeline was PAUSED.\n\n\n\nREADY → NULL:\n\nset the bus to flushing (when auto-flushing is enabled)\n\n\n\n\nset the bus to non-flushing\n\n\nreset the running_time to 0\n\n\nSelect a clock.\ncalculate base_time using the running_time.\ncalculate and distribute latency.\nset clock and base_time on all elements before performing the state\nchange.\n\n\ncalculate the running_time when the pipeline was PAUSED.\n\n\nset the bus to flushing (when auto-flushing is enabled)\n\n"});