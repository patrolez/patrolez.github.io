fragment_downloaded_cb({"url":"additional/design/element-source.html#source-types","fragment":"Source types\nA source element can operate in three ways:\nit is fully seekable, this means that random access can be performed\non it in an efficient way. (a file reader,…). This also typically\nmeans that the source is not live.\ndata can be obtained from it with a variable size. This means that\nthe source can give N bytes of data. An example is an audio source.\nA video source always provides the same amount of data (one video\nframe). Note that this is not a fully seekable source.\nit is a live source, see above.\nWhen writing a source, one has to look at how the source can operate to\ndecide on the scheduling methods to implement on the source.\nfully seekable sources implement a getrange function on the source\npad.\nsources that can give N bytes but cannot do seeking also implement a\ngetrange function but state that they cannot do random access.\nsources that are purely live sources implement a task to push out\ndata.\nAny source that has a getrange function must also implement a push based\nscheduling mode. In this mode the source starts a task that gets N bytes\nand pushes them out. Whenever possible, the peer element will select the\ngetrange based scheduling method of the source, though.\nA source with a getrange function must activate itself in the pad\nactivate function. This is needed because the downstream peer element\nwill decide and activate the source element in its state change function\nbefore the source’s state change function is called.\n\n\nit is fully seekable, this means that random access can be performed\non it in an efficient way. (a file reader,…). This also typically\nmeans that the source is not live.\n\n\ndata can be obtained from it with a variable size. This means that\nthe source can give N bytes of data. An example is an audio source.\nA video source always provides the same amount of data (one video\nframe). Note that this is not a fully seekable source.\n\n\nit is a live source, see above.\n\n\n\n\nfully seekable sources implement a getrange function on the source\npad.\n\n\nsources that can give N bytes but cannot do seeking also implement a\ngetrange function but state that they cannot do random access.\n\n\nsources that are purely live sources implement a task to push out\ndata.\n\n\n"});