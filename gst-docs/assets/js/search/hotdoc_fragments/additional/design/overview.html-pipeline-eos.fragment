fragment_downloaded_cb({"url":"additional/design/overview.html#pipeline-eos","fragment":"Pipeline EOS\nWhen the source filter encounters the end of the stream, it sends an EOS\nevent to the peer element. This event will then travel downstream to all\nof the connected elements to inform them of the EOS. The element is not\nsupposed to accept any more data after receiving an EOS event on a\nsinkpad.\nThe element providing the streaming thread stops sending data after\nsending the EOS event.\nThe EOS event will eventually arrive in the sink element. The sink will\nthen post an EOS message on the bus to inform the pipeline that a\nparticular stream has finished. When all sinks have reported EOS, the\npipeline forwards the EOS message to the application. The EOS message is\nonly forwarded to the application in the PLAYING state.\nWhen in EOS, the pipeline remains in the PLAYING state, it is the\napplications responsability to PAUSE or READY the pipeline. The\napplication can also issue a seek, for example.\n"});