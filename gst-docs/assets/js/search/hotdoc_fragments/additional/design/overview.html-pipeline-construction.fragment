fragment_downloaded_cb({"url":"additional/design/overview.html#pipeline-construction","fragment":"Pipeline construction\nThe application starts by creating a Pipeline element using\ngst_pipeline_new(). Elements are added to and removed from the\npipeline with gst_bin_add() and gst_bin_remove().\nAfter adding the elements, the pads of an element can be retrieved with\ngst_element_get_pad(). Pads can then be linked together with\ngst_pad_link().\nSome elements create new pads when actual dataflow is happening in the\npipeline. With g_signal_connect() one can receive a notification when\nan element has created a pad. These new pads can then be linked to other\nunlinked pads.\nSome elements cannot be linked together because they operate on\ndifferent incompatible data types. The possible datatypes a pad can\nprovide or consume can be retrieved with gst_pad_get_caps().\nBelow is a simple mp3 playback pipeline that we constructed. We will use\nthis pipeline in further examples.\n"});