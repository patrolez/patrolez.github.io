fragment_downloaded_cb({"url":"additional/design/seeking.html#default-behaviour","fragment":"DEFAULT BEHAVIOUR:\nWhen a seek to a certain position is requested, the demuxer/parser will\ndo two things (ignoring flushing and segment seeks, and simplified for\nillustration purposes):\nsend a segment event with a new start position\nstart pushing data/buffers again\nTo ensure that the data corresponding to the requested seek position can\nactually be decoded, a demuxer or parser needs to start pushing data\nfrom a keyframe/keyunit at or before the requested seek position.\nUnless requested differently (via the KEY_UNIT flag), the start of the\nsegment event should be the requested seek position.\nSo by default a demuxer/parser will then start pushing data from\nposition DATA and send a segment event with start position SEG_START,\nand DATA ‚áê SEG_START.\nIf DATA < SEG_START, a well-behaved video decoder will start decoding\nframes from DATA, but take into account the segment configured by the\ndemuxer via the segment event, and only actually output decoded video\nframes from SEG_START onwards, dropping all decoded frames that are\nbefore the segment start and adjusting the timestamp/duration of the\nbuffer that overlaps the segment start (\"clipping\"). A\nnot-so-well-behaved video decoder will start decoding frames from DATA\nand push decoded video frames out starting from position DATA, in which\ncase the frames that are before the configured segment start will\nusually be dropped/clipped downstream (e.g. by the video sink).\n\n\nsend a segment event with a new start position\n\n\nstart pushing data/buffers again\n\n\n"});