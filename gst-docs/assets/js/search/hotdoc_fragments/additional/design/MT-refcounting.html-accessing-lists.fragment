fragment_downloaded_cb({"url":"additional/design/MT-refcounting.html#accessing-lists","fragment":"Accessing lists\nIf the object property is a list, concurrent list iteration is needed to get\nthe contents of the list. GStreamer uses the cookie mechanism to mark the last\nupdate of a list. The list and the cookie are protected by the same lock. Each\nupdate to a list requires the following actions:\nUpdating the cookie is usually done by incrementing its value by one. Since\ncookies use guint32 its wraparound is for all practical reasons is not a\nproblem.\nIterating a list can safely be done by surrounding the list iteration with a\nlock/unlock of the lock.\nIn some cases it is not a good idea to hold the lock for a long time while\niterating the list. The state change code for a bin in GStreamer, for example,\nhas to iterate over each element and perform a blocking call on each of them\npotentially causing infinite bin locking. In this case the cookie can be used\nto iterate a list.\nExample:\nThe following algorithm iterates a list and reverses the updates in the\ncase a concurrent update was done to the list while iterating. The idea is\nthat whenever we reacquire the lock, we check for updates to the cookie to\ndecide if we are still iterating the right list.\n\nacquire lock\nupdate list\nupdate cookie\nrelease lock\n\n"});