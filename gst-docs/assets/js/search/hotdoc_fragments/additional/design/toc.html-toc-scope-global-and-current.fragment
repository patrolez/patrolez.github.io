fragment_downloaded_cb({"url":"additional/design/toc.html#toc-scope-global-and-current","fragment":"TOC scope: global and current\nThere are two main consumers for TOC information: applications and\nelements in the pipeline that are TOC writers (such as e.g.\nmatroskamux).\nApplications typically want to know the entire table of contents (TOC)\nwith all entries that can possibly be selected.\nTOC writers in the pipeline, however, would not want to write a TOC for\nall possible/available streams, but only for the current stream.\nWhen transcoding a title from a DVD, for example, the application would\nstill want to know the entire TOC, with all titles, the chapters for\neach title, and the available angles. When transcoding to a file, we\nonly want the TOC information that is relevant to the transcoded stream\nto be written into the file structure, e.g. the chapters of the title\nbeing transcoded (or possibly only chapters 5-7 if only those have been\nselected for playback/ transcoding).\nThis is why we may need to create two different TOCs for those two types\nof consumers.\nElements that extract TOC information should send TOC events downstream.\nLike with tags, sinks will post a TOC message on the bus for the\napplication with the global TOC, once a global TOC event reaches the\nsink.\n"});