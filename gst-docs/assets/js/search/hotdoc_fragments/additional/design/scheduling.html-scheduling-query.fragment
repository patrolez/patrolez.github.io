fragment_downloaded_cb({"url":"additional/design/scheduling.html#scheduling-query","fragment":"Scheduling Query\nA sinkpad can ask the upstream srcpad for its scheduling attributes. It\ndoes this with the SCHEDULING query.\n(out) modes: G_TYPE_ARRAY (default NULL): an array of GST_TYPE_PAD_MODE enums. Contains all the supported scheduling modes.\n(out) flags, GST_TYPE_SCHEDULING_FLAGS (default 0):\n_SEEKABLE: the offset of a pull operation can be specified, if this\nflag is false, the offset should be -1.\n_SEQUENTIAL: suggest sequential access to the data. If _SEEKABLE\nis specified, seeks are allowed but should be avoided. This is common for\nnetwork streams.\n_BANDWIDTH_LIMITED: suggest the element supports buffering data for\ndownstream to cope with bandwidth limitations. If this flag is on, the\ndownstream element might ask for more data than necessary for normal\nplayback. This use-case is interesting for on-disk buffering scenarios for\ninstance. Seek operations might be slow as well so downstream elements\nshould take this into consideration.\n(out) minsize: G_TYPE_INT (default 1): the suggested minimum size of pull requests\n(out) maxsize: G_TYPE_INT (default -1, unlimited): the suggested maximum size of pull requests\n(out) align: G_TYPE_INT (default 0): the suggested alignment for the pull requests.\n\n\n(out) modes: G_TYPE_ARRAY (default NULL): an array of GST_TYPE_PAD_MODE enums. Contains all the supported scheduling modes.\n\n\n(out) flags, GST_TYPE_SCHEDULING_FLAGS (default 0):\n\n\n\n\n\n\n_SEEKABLE: the offset of a pull operation can be specified, if this\nflag is false, the offset should be -1.\n\n\n_SEQUENTIAL: suggest sequential access to the data. If _SEEKABLE\nis specified, seeks are allowed but should be avoided. This is common for\nnetwork streams.\n\n\n_BANDWIDTH_LIMITED: suggest the element supports buffering data for\ndownstream to cope with bandwidth limitations. If this flag is on, the\ndownstream element might ask for more data than necessary for normal\nplayback. This use-case is interesting for on-disk buffering scenarios for\ninstance. Seek operations might be slow as well so downstream elements\nshould take this into consideration.\n\n\n\n\n(out) minsize: G_TYPE_INT (default 1): the suggested minimum size of pull requests\n\n\n(out) maxsize: G_TYPE_INT (default -1, unlimited): the suggested maximum size of pull requests\n\n\n(out) align: G_TYPE_INT (default 0): the suggested alignment for the pull requests.\n\n\n\n\n_SEEKABLE: the offset of a pull operation can be specified, if this\nflag is false, the offset should be -1.\n\n\n_SEQUENTIAL: suggest sequential access to the data. If _SEEKABLE\nis specified, seeks are allowed but should be avoided. This is common for\nnetwork streams.\n\n\n_BANDWIDTH_LIMITED: suggest the element supports buffering data for\ndownstream to cope with bandwidth limitations. If this flag is on, the\ndownstream element might ask for more data than necessary for normal\nplayback. This use-case is interesting for on-disk buffering scenarios for\ninstance. Seek operations might be slow as well so downstream elements\nshould take this into consideration.\n\n\n"});