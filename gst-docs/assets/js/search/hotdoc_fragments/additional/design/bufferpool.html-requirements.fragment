fragment_downloaded_cb({"url":"additional/design/bufferpool.html#requirements","fragment":"Requirements\nProvide a GstBufferPool base class to help the efficient\nimplementation of a list of reusable GstBuffer objects.\nLet upstream elements initiate the negotiation of a bufferpool and\nits configuration. Allow downstream elements provide bufferpool\nproperties and/or a bufferpool. This includes the following\nproperties:\nhave minimum and maximum amount of buffers with the option of\npreallocating buffers.\nallocator, alignment and padding support\nbuffer metadata\narbitrary extra options\nIntegrate with dynamic caps renegotiation.\nNotify upstream element of new bufferpool availability. This is\nimportant when a new element, that can provide a bufferpool, is\ndynamically linked downstream.\n\n\nProvide a GstBufferPool base class to help the efficient\nimplementation of a list of reusable GstBuffer objects.\n\n\nLet upstream elements initiate the negotiation of a bufferpool and\nits configuration. Allow downstream elements provide bufferpool\nproperties and/or a bufferpool. This includes the following\nproperties:\n\n\nhave minimum and maximum amount of buffers with the option of\npreallocating buffers.\n\n\nallocator, alignment and padding support\n\n\nbuffer metadata\n\n\narbitrary extra options\n\n\n\n\nIntegrate with dynamic caps renegotiation.\n\n\nNotify upstream element of new bufferpool availability. This is\nimportant when a new element, that can provide a bufferpool, is\ndynamically linked downstream.\n\n\n\n\nhave minimum and maximum amount of buffers with the option of\npreallocating buffers.\n\n\nallocator, alignment and padding support\n\n\nbuffer metadata\n\n\narbitrary extra options\n\n\n"});