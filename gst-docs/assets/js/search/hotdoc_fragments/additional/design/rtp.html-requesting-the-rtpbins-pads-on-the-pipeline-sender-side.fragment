fragment_downloaded_cb({"url":"additional/design/rtp.html#requesting-the-rtpbins-pads-on-the-pipeline-sender-side","fragment":"Requesting the rtpbin's pads on the pipeline sender side\nFor the sender this is similar but a bit more complicated to implement.\nWhen the user asks for rtpbin.send_rtp_sink_i, rtpbin will lookup in\nits second map (key:session id, value: aux send element). If there is\none aux element, then it will set the sink pad of this aux sender\nelement to be the ghost pad rtpbin.send_rtp_sink_i that the user\nasked. rtpbin will also request a src pad of this aux element to connect\nit to gstrtpsession_i. It will automatically create\nrtpbin.send_rtp_src_i the usuall way. Then if the user asks\nrtpbin.send_rtp_src_k, then rtpbin will also lookup in that map and\nrequest another source pad of the aux element and connect it to the new\ngstrtpsession_k.\n"});