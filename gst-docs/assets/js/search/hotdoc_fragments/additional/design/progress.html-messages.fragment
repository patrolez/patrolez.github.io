fragment_downloaded_cb({"url":"additional/design/progress.html#messages","fragment":"Messages\nA new PROGRESS message will be created.\nThe following fields will be contained in the message:\ntype, GST_TYPE_PROGRESS_TYPE: A set of types to define the type of progress\ncode, G_TYPE_STRING: A generic extensible string that can be used to\nprogrammatically determine the action that is in progress. Some standard\npredefined codes will be defined.\ntext, G_TYPE_STRING: A user visible string detailing the action.\npercent, G_TYPE_INT: between 0 and 100 Progress of the action as\na percentage, the following values are allowed:\ntimeout, G_TYPE_INT in milliseconds: The timeout of the async\noperation. -1 if unknown/unlimited.. This field can be interesting to the\napplication when it wants to display some sort of progress indication.\n….\nDepending on the code, more fields can be put here.\n\n\ntype, GST_TYPE_PROGRESS_TYPE: A set of types to define the type of progress\n\n\nGST_PROGRESS_TYPE_START: A new task is started in the background\n\nGST_PROGRESS_TYPE_CONTINUE: The previous tasks completed and a new one\ncontinues. This is done so that the application can follow a set of\ncontinuous tasks and react to COMPLETE only when the element completely\nfinished.\n\nGST_PROGRESS_TYPE_CANCELED: A task is canceled by the user.\n\nGST_PROGRESS_TYPE_ERROR: A task stopped because of an error. In case of\nan error, an error message will have been posted before.\n\nGST_PROGRESS_TYPE_COMPLETE: A task completed successfully.\n\n\n\ncode, G_TYPE_STRING: A generic extensible string that can be used to\nprogrammatically determine the action that is in progress. Some standard\npredefined codes will be defined.\n\n\ntext, G_TYPE_STRING: A user visible string detailing the action.\n\n\npercent, G_TYPE_INT: between 0 and 100 Progress of the action as\na percentage, the following values are allowed:\n\n\nGST_PROGRESS_TYPE_START always has a 0% value.\n\nGST_PROGRESS_TYPE_CONTINUE have a value between 0 and 100\n\nGST_PROGRESS_TYPE_CANCELED, GST_PROGRESS_TYPE_ERROR and\nGST_PROGRESS_TYPE_COMPLETE always have a 100% value.\n\n\n\ntimeout, G_TYPE_INT in milliseconds: The timeout of the async\noperation. -1 if unknown/unlimited.. This field can be interesting to the\napplication when it wants to display some sort of progress indication.\n\n\n….\n\n\n\n\nGST_PROGRESS_TYPE_START: A new task is started in the background\n\nGST_PROGRESS_TYPE_CONTINUE: The previous tasks completed and a new one\ncontinues. This is done so that the application can follow a set of\ncontinuous tasks and react to COMPLETE only when the element completely\nfinished.\n\nGST_PROGRESS_TYPE_CANCELED: A task is canceled by the user.\n\nGST_PROGRESS_TYPE_ERROR: A task stopped because of an error. In case of\nan error, an error message will have been posted before.\n\nGST_PROGRESS_TYPE_COMPLETE: A task completed successfully.\n\n\n\nGST_PROGRESS_TYPE_START always has a 0% value.\n\nGST_PROGRESS_TYPE_CONTINUE have a value between 0 and 100\n\nGST_PROGRESS_TYPE_CANCELED, GST_PROGRESS_TYPE_ERROR and\nGST_PROGRESS_TYPE_COMPLETE always have a 100% value.\n\n"});