fragment_downloaded_cb({"url":"additional/design/synchronisation.html#running-time","fragment":"Running time\nAfter a pipeline selected a clock it will maintain the running_time\nbased on the selected clock. This running_time represents the total\ntime spent in the PLAYING state and is calculated as follows:\nIf the pipeline is NULL/READY, the running_time is undefined.\nIn PAUSED, the running_time remains at the time when it was last\nPAUSED. When the stream is PAUSED for the first time, the\nrunning_time is 0.\nIn PLAYING, the running_time is the delta between the\nabsolute_time and the base time. The base time is defined as the\nabsolute_time minus the running_time at the time when the pipeline\nis set to PLAYING.\nafter a flushing seek, the running_time is set to 0 (see\nseeking). This is accomplished by redistributing a new\nbase_time to the elements that got flushed.\nThis algorithm captures the running_time when the pipeline is set from\nPLAYING to PAUSED and restores this time based on the current\nabsolute_time when going back to PLAYING. This allows for both clocks\nthat progress when in the PAUSED state (systemclock) and clocks that\ndonâ€™t (audioclock).\nThe clock and pipeline now provide a running_time to all elements that\nwant to perform synchronisation. Indeed, the running time can be\nobserved in each element (during the PLAYING state) as:\nWe note C.running_time as the running_time obtained by looking at the\nclock. This value is monotonically increasing at the rate of the clock.\n\n\nIf the pipeline is NULL/READY, the running_time is undefined.\n\n\nIn PAUSED, the running_time remains at the time when it was last\nPAUSED. When the stream is PAUSED for the first time, the\nrunning_time is 0.\n\n\nIn PLAYING, the running_time is the delta between the\nabsolute_time and the base time. The base time is defined as the\nabsolute_time minus the running_time at the time when the pipeline\nis set to PLAYING.\n\n\nafter a flushing seek, the running_time is set to 0 (see\nseeking). This is accomplished by redistributing a new\nbase_time to the elements that got flushed.\n\n\n"});