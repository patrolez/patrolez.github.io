fragment_downloaded_cb({"url":"additional/design/seeking.html#gst_seek_flag_key_unit","fragment":"GST_SEEK_FLAG_KEY_UNIT\nIf the KEY_UNIT flag is specified, the demuxer/parser should adjust the\nsegment start to the position of the key frame closest to the requested\nseek position and then start pushing out data from there. The nearest\nkey frame may be before or after the requested seek position, but many\nimplementations will only look for the closest keyframe before the\nrequested position.\nMost media players and thumbnailers do (and should be doing) KEY_UNIT\nseeks by default, for performance reasons, to ensure almost-instant\nresponsiveness when scrubbing (dragging the seek slider in PAUSED or\nPLAYING mode). This works well for most media, but results in suboptimal\nbehaviour for a small number of odd files (e.g. files that only have\none keyframe at the very beginning, or only a few keyframes throughout\nthe entire stream). At the time of writing, a solution for this still\nneeds to be found, but could be implemented demuxer/parser-side, e.g.\nmake demuxers/parsers ignore the KEY_UNIT flag if the position\nadjustment would be larger than 1/10th of the duration or somesuch.\nFlags can be used to influence snapping direction for those cases where\nit matters. SNAP_BEFORE will select the preceding position to the seek\ntarget, and SNAP_AFTER will select the following one. If both flags are\nset, the nearest one to the seek target will be used. If none of these\nflags are set, the seeking implemention is free to select whichever it\nwants.\n"});