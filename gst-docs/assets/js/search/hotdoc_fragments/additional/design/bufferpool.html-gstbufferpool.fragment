fragment_downloaded_cb({"url":"additional/design/bufferpool.html#gstbufferpool","fragment":"GstBufferPool\nThe bufferpool object manages a list of buffers with the same properties such\nas size, padding and alignment.\nThe bufferpool has two states: active and inactive. In the inactive\nstate, the bufferpool can be configured with the required allocation\npreferences. In the active state, buffers can be retrieved from and\nreturned to the pool.\nThe default implementation of the bufferpool is able to allocate buffers\nfrom any allocator with arbitrary alignment and padding/prefix.\nCustom implementations of the bufferpool can override the allocation and\nfree algorithms of the buffers from the pool. This should allow for\ndifferent allocation strategies such as using shared memory or hardware\nmapped memory.\n"});