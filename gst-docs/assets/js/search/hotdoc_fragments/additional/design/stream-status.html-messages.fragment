fragment_downloaded_cb({"url":"additional/design/stream-status.html#messages","fragment":"Messages\nThe existing STREAM_STATUS message will be further defined and implemented in\n(selected) elements. The following fields will be contained in the message:\ntype, GST_TYPE_STREAM_STATUS_TYPE:\na set of types to control the lifecycle of the thread:\nGST_STREAM_STATUS_TYPE_CREATE: a new streaming thread is going\nto be created. The application has the chance to configure a custom\nthread. GST_STREAM_STATUS_TYPE_ENTER: the streaming thread is\nabout to enter its loop function for the first time.\nGST_STREAM_STATUS_TYPE_LEAVE: the streaming thread is about to\nleave its loop. GST_STREAM_STATUS_TYPE_DESTROY: a streaming\nthread is destroyed\nA set of types to control the state of the threads:\nGST_STREAM_STATUS_TYPE_START: a streaming thread is started\nGST_STREAM_STATUS_TYPE_PAUSE: a streaming thread is paused\nGST_STREAM_STATUS_TYPE_STOP: a streaming thread is stopped\nowner: GST_TYPE_ELEMENT: The owner element of the thread. The\nmessage source will contain the pad (or one of the pads) that will\nproduce data by this thread. If this thread does not produce data on\na pad, the message source will contain the owner as well. The idea\nis that the application should be able to see from the element/pad\nwhat function this thread has in the context of the application and\nconfigure the thread appropriately.\nobject: G_TYPE, GstTask/GThread: A GstTask/GThread controlling\nthis streaming thread.\nflow-return: GstFlowReturn: A status code for why the thread state\nchanged. when threads are created and started, this is usually\nGST_FLOW_OK but when they are stopping it contains the reason code\nwhy it stopped.\nreason: G_TYPE_STRING: A string describing the reason why the\nthread started/stopped/paused. Can be NULL if no reason is given.\n\n\ntype, GST_TYPE_STREAM_STATUS_TYPE:\n\n\na set of types to control the lifecycle of the thread:\nGST_STREAM_STATUS_TYPE_CREATE: a new streaming thread is going\nto be created. The application has the chance to configure a custom\nthread. GST_STREAM_STATUS_TYPE_ENTER: the streaming thread is\nabout to enter its loop function for the first time.\nGST_STREAM_STATUS_TYPE_LEAVE: the streaming thread is about to\nleave its loop. GST_STREAM_STATUS_TYPE_DESTROY: a streaming\nthread is destroyed\n\n\nA set of types to control the state of the threads:\nGST_STREAM_STATUS_TYPE_START: a streaming thread is started\nGST_STREAM_STATUS_TYPE_PAUSE: a streaming thread is paused\nGST_STREAM_STATUS_TYPE_STOP: a streaming thread is stopped\n\n\n\n\nowner: GST_TYPE_ELEMENT: The owner element of the thread. The\nmessage source will contain the pad (or one of the pads) that will\nproduce data by this thread. If this thread does not produce data on\na pad, the message source will contain the owner as well. The idea\nis that the application should be able to see from the element/pad\nwhat function this thread has in the context of the application and\nconfigure the thread appropriately.\n\n\nobject: G_TYPE, GstTask/GThread: A GstTask/GThread controlling\nthis streaming thread.\n\n\nflow-return: GstFlowReturn: A status code for why the thread state\nchanged. when threads are created and started, this is usually\nGST_FLOW_OK but when they are stopping it contains the reason code\nwhy it stopped.\n\n\nreason: G_TYPE_STRING: A string describing the reason why the\nthread started/stopped/paused. Can be NULL if no reason is given.\n\n\n\n\na set of types to control the lifecycle of the thread:\nGST_STREAM_STATUS_TYPE_CREATE: a new streaming thread is going\nto be created. The application has the chance to configure a custom\nthread. GST_STREAM_STATUS_TYPE_ENTER: the streaming thread is\nabout to enter its loop function for the first time.\nGST_STREAM_STATUS_TYPE_LEAVE: the streaming thread is about to\nleave its loop. GST_STREAM_STATUS_TYPE_DESTROY: a streaming\nthread is destroyed\n\n\nA set of types to control the state of the threads:\nGST_STREAM_STATUS_TYPE_START: a streaming thread is started\nGST_STREAM_STATUS_TYPE_PAUSE: a streaming thread is paused\nGST_STREAM_STATUS_TYPE_STOP: a streaming thread is stopped\n\n\n"});