fragment_downloaded_cb({"url":"additional/design/latency.html#example-2","fragment":"Example 2\nAn audio/video capture/playback pipeline. We capture both audio and video and\nhave them played back synchronized again.\nThe state changes happen in the same way as example 1. Both sinks end up with\npending state of PLAYING and a return value of ASYNC until they receive the\nfirst buffer.\nFor audio and video to be played in sync, both sinks must compensate for the\nlatency of its source but must also use exactly the same latency correction.\nSuppose asrc has a latency of 20ms and vsrc a latency of 33ms, the total\nlatency in the pipeline has to be at least 33ms. This also means that the\npipeline must have at least a 33 - 20 = 13ms buffering on the audio stream or\nelse the audio src will underrun while the audiosink waits for the previous\nsample to play.\n\nasrc: audio source, provides a clock\nasink audio sink, provides a clock\nvsrc: video source\nvsink video sink\n\n"});