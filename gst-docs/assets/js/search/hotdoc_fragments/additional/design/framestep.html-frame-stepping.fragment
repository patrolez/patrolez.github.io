fragment_downloaded_cb({"url":"additional/design/framestep.html#frame-stepping","fragment":"Frame stepping\nThis document outlines the details of the frame stepping functionality\nin GStreamer.\nThe stepping functionality operates on the current playback segment,\nposition and rate as it was configured with a regular seek event. In\ncontrast to the seek event, it operates very closely to the sink and\nthus has a very low latency and is not slowed down by queues and does\nnot actually perform any seeking logic. For this reason we want to\ninclude a new API instead of reusing the seek API.\nThe following requirements are needed:\nThe ability to walk forwards and backwards in the stream.\nArbitrary increments in any supported format (time, frames, bytes …)\nHigh speed, minimal overhead. This mechanism is not more expensive\nthan simple playback.\nswitching between forwards and backwards stepping should be fast.\nMaintain synchronisation between streams.\nGet feedback of the amount of skipped data.\nAbility to play a certain amount of data at an arbitrary speed.\nWe want a system where we can step frames in PAUSED as well as play\nshort segments of data in PLAYING.\n\n\nThe ability to walk forwards and backwards in the stream.\n\n\nArbitrary increments in any supported format (time, frames, bytes …)\n\n\nHigh speed, minimal overhead. This mechanism is not more expensive\nthan simple playback.\n\n\nswitching between forwards and backwards stepping should be fast.\n\n\nMaintain synchronisation between streams.\n\n\nGet feedback of the amount of skipped data.\n\n\nAbility to play a certain amount of data at an arbitrary speed.\n\n\n"});