fragment_downloaded_cb({"url":"additional/design/controller.html#todo","fragment":"TODO\ncontrol-source value ranges - control sources should ideally emit values\nbetween [0.0 and 1.0] - right now lfo-control-sources emits values\nbetween [-1.0 and 1.0] - we can make control-sources announce that or\nfix it in a lfo2-control-source\nranged-control-binding - it might be a nice thing to have a\ncontrol-binding that has scale and offset properties - when attaching a\ncontrol-source to e.g. volume, one needs to be aware that the values go\nfrom [0.0 to 4.0] - we can also have a \"mapping-mode\"={AS_IS,\nTRANSFORMED} on direct-control-binding and two extra properties that are\nused in TRANSFORMED mode\ncontrol-setup descriptions - it would be nice to have a way to parse a\ntextual control-setup description. This could be used in gst-launch and\nin presets. It needs to be complemented with a formatter (for the preset\nstorage or e.g. for debug logging). - this could be function-style:\ndirect(control-source=lfo(waveform=sine,offset=0.5)) or gst-launch\nstyle (looks weird) lfo wave=sine offset=0.5 ! direct .control-source\n\n\ncontrol-source value ranges - control sources should ideally emit values\nbetween [0.0 and 1.0] - right now lfo-control-sources emits values\nbetween [-1.0 and 1.0] - we can make control-sources announce that or\nfix it in a lfo2-control-source\n\n\nranged-control-binding - it might be a nice thing to have a\ncontrol-binding that has scale and offset properties - when attaching a\ncontrol-source to e.g. volume, one needs to be aware that the values go\nfrom [0.0 to 4.0] - we can also have a \"mapping-mode\"={AS_IS,\nTRANSFORMED} on direct-control-binding and two extra properties that are\nused in TRANSFORMED mode\n\n\ncontrol-setup descriptions - it would be nice to have a way to parse a\ntextual control-setup description. This could be used in gst-launch and\nin presets. It needs to be complemented with a formatter (for the preset\nstorage or e.g. for debug logging). - this could be function-style:\ndirect(control-source=lfo(waveform=sine,offset=0.5)) or gst-launch\nstyle (looks weird) lfo wave=sine offset=0.5 ! direct .control-source\n\n\n"});