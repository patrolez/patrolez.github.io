fragment_downloaded_cb({"url":"additional/design/dmabuf.html#meta-data1","fragment":"Meta data\nBesides the file descriptors, there may be a GstVideoMeta data attached\nto each GstBuffer to describe more information such as the width, height,\npitches, strides and plane offsets for that DMA buffer (Please note that\nthe mandatory width and height information appears both in \"caps\" and here,\nand they should be always equal). This kind of information is only obtained\nby each module's API, such as the functions\nVkImageDrmFormatModifierExplicitCreateInfoEXT() in Vulkan, and\nvaExportSurfaceHandle() in VA-API. The information should be translated\ninto GstVideoMeta's fields when the DMA buffer is created and\nexported. These meta data is useful when other module wants to import the\nDMA buffers.\nFor example, we may create a GstBuffer using vaExportSurfaceHandle()\nVA-API, and set each field of GstVideoMeta with information from\nVADRMPRIMESurfaceDescriptor. Later, a downstream Vulkan element imports\nthese DMA buffers with VkImageDrmFormatModifierExplicitCreateInfoEXT(),\ntranslating fields form buffer's GstVideoMeta into the\nVkSubresourceLayout parameter.\nIn short, the GstVideoMeta contains the common extra video information\nabout the DMA buffer, which can be interpreted by each module.\nInformation in GstVideoMeta depends on the hardware context and\nsetting. Its values, such as stride and pitch, may differ from the standard\nvideo format because of the hardware's requirement. For example, if a DMA\nbuffer represents a compressed video in memory, its pitch and stride may be\nsmaller than the standard linear one because of the compression. Please\nremind that users should not use this meta data to interpret and access the\nDMA buffer, unless the modifier is linear.\n"});