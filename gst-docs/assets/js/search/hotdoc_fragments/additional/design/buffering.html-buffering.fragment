fragment_downloaded_cb({"url":"additional/design/buffering.html#buffering","fragment":"Buffering\nThis document outlines the buffering policy used in the GStreamer core\nthat can be used by plugins and applications.\nThe purpose of buffering is to accumulate enough data in a pipeline so\nthat playback can occur smoothly and without interruptions. It is\ntypically done when reading from a (slow) non-live network source but\ncan also be used for live sources.\nWe want to be able to implement the following features:\nbuffering up to a specific amount of data, in memory, before\nstarting playback so that network fluctuations are minimized.\ndownload of the network file to a local disk with fast seeking in\nthe downloaded data. This is similar to the quicktime/youtube\nplayers.\ncaching of semi-live streams to a local, on disk, ringbuffer with\nseeking in the cached area. This is similar to tivo-like\ntimeshifting.\nprogress report about the buffering operations\nthe possibility for the application to do more complex buffering\n\n\nbuffering up to a specific amount of data, in memory, before\nstarting playback so that network fluctuations are minimized.\n\n\ndownload of the network file to a local disk with fast seeking in\nthe downloaded data. This is similar to the quicktime/youtube\nplayers.\n\n\ncaching of semi-live streams to a local, on disk, ringbuffer with\nseeking in the cached area. This is similar to tivo-like\ntimeshifting.\n\n\nprogress report about the buffering operations\n\n\nthe possibility for the application to do more complex buffering\n\n\n"});