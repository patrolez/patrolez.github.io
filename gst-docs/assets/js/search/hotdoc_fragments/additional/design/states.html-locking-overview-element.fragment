fragment_downloaded_cb({"url":"additional/design/states.html#locking-overview-element","fragment":"Locking overview (element)\nElement committing SUCCESS\nSTATE_LOCK is taken in set_state()\nchange state is called if SUCCESS, commit state is called\ncommit state calls change_state() to next state change.\nif final state is reached, stack unwinds and result is returned\nto set_state() and caller.\nElement committing ASYNC\nSTATE_LOCK is taken in set_state()\nchange state is called and returns ASYNC\nASYNC returned to the caller.\nelement takes LOCK in streaming thread.\nelement calls commit_state in streaming thread.\ncommit state calls change_state() to next state\nchange.\n\n\nElement committing SUCCESS\n\n\nSTATE_LOCK is taken in set_state()\n\n\nchange state is called if SUCCESS, commit state is called\n\n\ncommit state calls change_state() to next state change.\n\n\nif final state is reached, stack unwinds and result is returned\nto set_state() and caller.\n\n\n\n\n\n\nSTATE_LOCK is taken in set_state()\n\n\nchange state is called if SUCCESS, commit state is called\n\n\ncommit state calls change_state() to next state change.\n\n\nif final state is reached, stack unwinds and result is returned\nto set_state() and caller.\n\n\n\n\nElement committing ASYNC\n\n\nSTATE_LOCK is taken in set_state()\n\n\nchange state is called and returns ASYNC\n\n\nASYNC returned to the caller.\n\n\nelement takes LOCK in streaming thread.\n\n\nelement calls commit_state in streaming thread.\n\n\ncommit state calls change_state() to next state\nchange.\n\n\n\n\n\n\nSTATE_LOCK is taken in set_state()\n\n\nchange state is called and returns ASYNC\n\n\nASYNC returned to the caller.\n\n\nelement takes LOCK in streaming thread.\n\n\nelement calls commit_state in streaming thread.\n\n\ncommit state calls change_state() to next state\nchange.\n\n\n"});