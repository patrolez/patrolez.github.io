fragment_downloaded_cb({"url":"additional/design/negotiation.html#videotestsrc-xvimagesink","fragment":"videotestsrc ! xvimagesink\nWho decides what format to use?\nWhen does negotiation happen?\nHow can sink request another format?\n\n\nWho decides what format to use?\n\nsrc pad always decides, by convention. sinkpad can suggest a format\nby putting it high in the caps query result GstCaps.\nsince the src decides, it can always choose something that it can do,\nso this step can only fail if the sinkpad stated it could accept\nsomething while later on it couldn't.\n\n\n\nWhen does negotiation happen?\n\nbefore srcpad does a push, it figures out a type as stated in 1), then\nit pushes a caps event with the type. The sink checks the media type and\nconfigures itself for this type.\nthe source then usually does an ALLOCATION query to negotiate a\nbufferpool with the sink. It then allocates a buffer from the pool and\npushes it to the sink. Since the sink accepted the caps, it can create a\npool for the format.\nsince the sink stated in 1) it could accept the type, it will be able to\nhandle it.\n\n\n\nHow can sink request another format?\n\nsink asks if new format is possible for the source.\nsink pushes RECONFIGURE event upstream\nsrc receives the RECONFIGURE event and marks renegotiation\nOn the next buffer push, the source renegotiates the caps and the\nbufferpool. The sink will put the new new preferred format high in the list\nof caps it returns from its caps query.\n\n\n\n\nsrc pad always decides, by convention. sinkpad can suggest a format\nby putting it high in the caps query result GstCaps.\nsince the src decides, it can always choose something that it can do,\nso this step can only fail if the sinkpad stated it could accept\nsomething while later on it couldn't.\n\n\nbefore srcpad does a push, it figures out a type as stated in 1), then\nit pushes a caps event with the type. The sink checks the media type and\nconfigures itself for this type.\nthe source then usually does an ALLOCATION query to negotiate a\nbufferpool with the sink. It then allocates a buffer from the pool and\npushes it to the sink. Since the sink accepted the caps, it can create a\npool for the format.\nsince the sink stated in 1) it could accept the type, it will be able to\nhandle it.\n\n\nsink asks if new format is possible for the source.\nsink pushes RECONFIGURE event upstream\nsrc receives the RECONFIGURE event and marks renegotiation\nOn the next buffer push, the source renegotiates the caps and the\nbufferpool. The sink will put the new new preferred format high in the list\nof caps it returns from its caps query.\n\n"});