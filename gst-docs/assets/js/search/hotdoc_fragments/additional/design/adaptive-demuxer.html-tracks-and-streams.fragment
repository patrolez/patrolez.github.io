fragment_downloaded_cb({"url":"additional/design/adaptive-demuxer.html#tracks-and-streams","fragment":"Track(s) and Stream(s)\nAdaptive Demuxers provide one or more Track of elementary streams. They are\neach unique in terms of:\nBut tracks can vary over time by:\nThey correspond to what an end-user might want to select (i.e. will be exposed\nin a GstStreamCollection). They are each identified by a stream_id provided\nby the subclass.\nNote: A manifest can specify that tracks that would normally be separate\nbased on the above rules (for example different codecs or channels) are\nactually the same \"end-user selectable stream\" (i.e. track). In such case only\none track is provided and the nature of the elementary stream can change\nthrough time.\nAdaptive Demuxers subclasses also need to provide one or more Download Stream\n(GstAdaptiveDemuxStream) which are the implementation-/manifest-specific\n\"streams\" that each feed one or more Track. Those streams can also vary over\ntime by bitrate/profile/resolution/... but always target the same tracks.\nThe downloaded data from each of those GstAdaptiveDemuxStream is fed to a\nparsebin element which will put the output in the associated\nGstAdaptiveDemuxTrack.\nThe tracks have some buffering capability, handled by the baseclass.\nThis separation allows the base-class to:\nThe subclass is responsible for deciding:\nSubclasses can also decide, before passing the downloaded data over, to:\npre-parse specific headers (ex: ID3 and webvtt headers in HLS, MP4 fragment\nposition, etc..).\npre-parse actual content if needed because a position estimation is needed\n(ex: HLS missing accurate positioning of fragments in the overall timeline)\nrewrite the content altogether (for example webvtt fragments which require\ntiming to be re-computed)\n\nTheir type (audio, video, text, ..). Ex : GST_STREAM_TYPE_AUDIO\n\nOptional: Their codec. Ex : video/x-h264\n\nOptional: Their language. ex : GST_TAG_LANGUAGE : \"fr\"\n\nOptional: Their number of channels (ex: stereo vs 5.1). ex\naudio/x-vorbis,channels=2\n\nAny other feature which would make the stream \"unique\" either because of their\nnature (ex: video angle) or specified by the manifest as being \"unique\".\n\n\nbitrate\nprofile or level\nresolution\n\n\ndecide which download stream(s) should be (de)activated based on the current\ntrack selection\ndecide when to (re)start download requests based on buffering levels, positions and\nexternal actions.\nHandle buffering, output and stream selection.\n\n\n\nWhich next download should be requested for that stream based on current\nplayback position, the provided encoded bitrates, estimates of download\nbandwidth, buffering levels, etc..\n\n\n\npre-parse specific headers (ex: ID3 and webvtt headers in HLS, MP4 fragment\nposition, etc..).\n\n\npre-parse actual content if needed because a position estimation is needed\n(ex: HLS missing accurate positioning of fragments in the overall timeline)\n\n\nrewrite the content altogether (for example webvtt fragments which require\ntiming to be re-computed)\n\n\n"});