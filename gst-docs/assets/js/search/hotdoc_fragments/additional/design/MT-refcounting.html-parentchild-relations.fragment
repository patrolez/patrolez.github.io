fragment_downloaded_cb({"url":"additional/design/MT-refcounting.html#parentchild-relations","fragment":"parent-child relations\nOne can create parent-child relationships with the _object_set_parent()\nmethod. This method refs and sinks the object and assigns its parent property\nto that of the managing parent.\nThe child is said to have a weak link to the parent since the refcount of the\nparent is not increased in this process. This means that if the parent is\ndisposed it has to unset itself as the parent of the object before disposing\nitself, else the child object holds a parent pointer to invalid memory.\nThe responsibilities for an object that sinks other objects are summarised as:\ntaking ownership of the object\non dispose\nalso see relations\n\n\ntaking ownership of the object\n\ncall _object_set_parent() to set itself as the object parent, this call\nwill _ref() and _sink() the object.\nkeep reference to object in a datastructure such as a list or array.\n\n\n\non dispose\n\ncall _object_unparent() to reset the parent property and unref the\nobject.\nremove the object from the list.\n\n\n\n\ncall _object_set_parent() to set itself as the object parent, this call\nwill _ref() and _sink() the object.\nkeep reference to object in a datastructure such as a list or array.\n\n\ncall _object_unparent() to reset the parent property and unref the\nobject.\nremove the object from the list.\n\n"});