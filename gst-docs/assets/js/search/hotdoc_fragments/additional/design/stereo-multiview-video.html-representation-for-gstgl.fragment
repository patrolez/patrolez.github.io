fragment_downloaded_cb({"url":"additional/design/stereo-multiview-video.html#representation-for-gstgl","fragment":"Representation for GstGL\nWhen uploading raw video frames to GL textures, the goal is to implement:\nSplit packed frames into separate GL textures when uploading, and\nattach multiple GstGLMemory to the GstBuffer. The multiview-mode and\nmultiview-flags fields in the caps should change to reflect the conversion\nfrom one incoming GstMemory to multiple GstGLMemory, and change the\nwidth/height in the output info as needed.\nThis is (currently) targetted as 2 render passes - upload as normal\nto a single stereo-packed RGBA texture, and then unpack into 2\nsmaller textures, output with GST_VIDEO_MULTIVIEW_MODE_SEPARATED, as\n2 GstGLMemory attached to one buffer. We can optimise the upload later\nto go directly to 2 textures for common input formats.\nSeparat output textures have a few advantages:\nFilter elements can more easily apply filters in several passes to each\ntexture without fundamental changes to our filters to avoid mixing pixels\nfrom separate views.\nCentralises the sampling of input video frame packings in the upload code,\nwhich makes adding new packings in the future easier.\nSampling multiple textures to generate various output frame-packings\nfor display is conceptually simpler than converting from any input packing\nto any output packing.\nIn implementations that support quad buffers, having separate textures\nmakes it trivial to do GL_LEFT/GL_RIGHT output\nFor either option, we'll need new glsink output API to pass more\ninformation to applications about multiple views for the draw signal/callback.\nI don't know if it's desirable to support both methods of representing\nviews. If so, that should be signalled in the caps too. That could be a\nnew multiview-mode for passing views in separate GstMemory objects\nattached to a GstBuffer, which would not be GL specific.\n\n\nFilter elements can more easily apply filters in several passes to each\ntexture without fundamental changes to our filters to avoid mixing pixels\nfrom separate views.\n\n\nCentralises the sampling of input video frame packings in the upload code,\nwhich makes adding new packings in the future easier.\n\n\nSampling multiple textures to generate various output frame-packings\nfor display is conceptually simpler than converting from any input packing\nto any output packing.\n\n\nIn implementations that support quad buffers, having separate textures\nmakes it trivial to do GL_LEFT/GL_RIGHT output\n\n\n"});