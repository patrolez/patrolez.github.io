fragment_downloaded_cb({"url":"additional/design/rtp.html#deeper-in-the-association-algorithm","fragment":"Deeper in the association algorithm\nWhen it receives a GstRTPRetransmissionRequest event it will remember\nthe ssrc and the seqnum from this request.\nOn incoming packets, if the packet has its ssrc already associated then\nit knows if the ssrc is an rtx ssrc or a master stream ssrc. If this is\na rtx packet then it recontructs the original and pushes the result to\nthe src pad as if it was a master packet.\nIf the ssrc is not yet associated rtprtxreceive checks the payload type.\nif the packet has its payload type marked as rtx then it will extract\nthe OSN (original seqnum number) and lookup in its stored requests if a\nseqnum matches. If found, then it associates the current ssrc to the\nmaster ssrc marked in the request. If not found it just drops the\npacket. Then it removes the request from the stored requests.\nIf there are 2 requests with the same seqnum and different ssrc, then\nthe couple seqnum,ssrc is removed from the stored requests. A stored\nrequest actually means that actually the couple seqnum,ssrc is stored.\nIf it happens the request is dropped but it avoids to do bad\nassociations. In this case the association is just delayed to the next\nrequest.\n"});