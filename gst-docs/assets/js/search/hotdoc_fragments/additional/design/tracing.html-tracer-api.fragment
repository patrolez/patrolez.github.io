fragment_downloaded_cb({"url":"additional/design/tracing.html#tracer-api","fragment":"Tracer api\nTracers are plugin features. They have a simple api:\nclass init Here the tracers describe the data they will emit.\ninstance init Tracers attach handlers to one or more hooks using\ngst_tracing_register_hook(). In case they are configurable, they can\nread the options from the params property. This is the extra detail\nfrom the environment var.\nhook functions Hooks marshal the parameters given to a trace hook into\nvarargs and also add some extra into such as a timestamp. Hooks will be\ncalled from misc threads. The trace plugins should only consume (=read)\nthe provided data. Expensive computation should be avoided to not affect\nthe execution too much. Most trace plugins will log data to a trace\nchannel.\ninstance destruction Tracers can output results and release data. This\nwould ideally be done at the end of the applications, but gst_deinit()\nis not mandatory. gst_tracelib was using a gcc_destructor. Ideally\ntracer modules log data as they have them and leave aggregation to a\ntool that processes the log.\n"});