fragment_downloaded_cb({"url":"additional/design/latency.html#latency","fragment":"Latency\nThe latency is the time it takes for a sample captured at timestamp 0 to\nreach the sink. This time is measured against the pipeline's clock.\nFor pipelines where the only elements that synchronize against the clock\nare the sinks, the latency is always 0, since no other element is\ndelaying the buffer.\nFor pipelines with live sources, a latency is introduced, mostly because\nof the way a live source works. Consider an audio source, it will start\ncapturing the first sample at time 0. If the source pushes buffers with\n44100 samples at a time at 44100Hz, it will have collected the buffer at\nsecond 1. Since the timestamp of the buffer is 0 and the time of the\nclock is now >= 1 second, the sink will drop this buffer because it is\ntoo late. Without any latency compensation in the sink, all buffers will\nbe dropped.\nThe situation becomes more complex in the presence of:\n2 live sources connected to 2 live sinks with different latencies\n1 live source connected to 2 live sinks\nmixed live source and non-live source scenarios.\nclock slaving in the sinks due to the live sources providing their\nown clocks.\nTo perform the needed latency corrections in the above scenarios, we\nmust develop an algorithm to calculate a global latency for the\npipeline. This algorithm must be extensible, so that it can optimize the\nlatency at runtime. It must also be possible to disable or tune the\nalgorithm based on specific application needs (required minimal\nlatency).\n\n\n2 live sources connected to 2 live sinks with different latencies\n\naudio/video capture with synchronized live preview.\nadded latencies due to effects (delays, resamplers…)\n\n\n\n1 live source connected to 2 live sinks\n\nfirewire DV\nRTP, with added latencies because of jitter buffers.\n\n\n\nmixed live source and non-live source scenarios.\n\nsynchronized audio capture with non-live playback. (overdubs,..)\n\n\n\nclock slaving in the sinks due to the live sources providing their\nown clocks.\n\n\n\naudio/video capture with synchronized live preview.\nadded latencies due to effects (delays, resamplers…)\n\n\nfirewire DV\nRTP, with added latencies because of jitter buffers.\n\n\nsynchronized audio capture with non-live playback. (overdubs,..)\n\n"});