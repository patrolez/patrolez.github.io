fragment_downloaded_cb({"url":"additional/design/gstghostpad.html#some-design-requirements","fragment":"Some design requirements\nMust look like a real GstPad on both sides.\ntarget of Ghostpad must be changeable\ntarget can be initially NULL\na GhostPad is implemented using a private GstProxyPad class:\nA GstGhostPad (X) is always created together with a GstProxyPad (Y).\nThe internal pad pointers are set to point to eachother. The\nGstProxyPad pairs have opposite directions, the GstGhostPad has the same\ndirection as the (future) ghosted pad (target).\nThe GstGhostPad (X) is also set as the parent of the GstProxyPad (Y).\nThe target is a pointer to the internal pads peer. It is an optimisation to\nquickly get to the peer of a ghostpad without having to dereference the\ninternal->peer.\nSome use case follow with a description of how the datastructure\nis modified.\n\n\nMust look like a real GstPad on both sides.\n\n\ntarget of Ghostpad must be changeable\n\n\ntarget can be initially NULL\n\n\na GhostPad is implemented using a private GstProxyPad class:\n\n\n"});