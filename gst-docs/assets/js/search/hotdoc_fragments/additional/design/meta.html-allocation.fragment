fragment_downloaded_cb({"url":"additional/design/meta.html#allocation","fragment":"allocation\nWe initially allocate a reasonable sized GstBuffer structure (say 512 bytes).\nSince the complete buffer structure, including a large area for metadata, is\nallocated in one go, we can reduce the number of memory allocations while still\nproviding dynamic metadata.\nWhen adding metadata, we need to call the init function of the associated\nmetadata info structure. Since adding the metadata requires the caller to pass\na handle to the info, this operation does not require table lookups.\nPer-metadata memory initialisation is needed because not all metadata is\ninitialized in the same way. We need to, for example, set the timestamps to\nNONE in the MetaTiming structures.\nThe init/free functions can also be used to implement refcounting for a metadata\nstructure. This can be useful when a structure is shared between buffers.\nWhen the free_size of the GstBuffer is exhausted, we will allocate new\nmemory for each newly added Meta and use the next pointers to point to this. It\nis expected that this does not occur often and we might be able to optimize\nthis transparently in the future.\n"});