fragment_downloaded_cb({"url":"additional/design/dmabuf.html#drm-modifier","fragment":"DRM modifier\nDRM-modifier describes the translation mechanism between pixel to memory\nsamples and the actual memory storage of the buffer. The most\nstraightforward modifier is LINEAR, where each pixel has contiguous storage\nand pixel location in memory can be easily calculated with the stride. This\nis considered the baseline interchange format, and most convenient for CPU\naccess. Nonetheless, modern hardware employs more sophisticated memory\naccess mechanisms, such as tiling and possibly compression.  For example,\nthe TILED modifier describes memory storage where pixels are stored in 4x4\nblocks arranged in row-major ordering. For example, the first tile in\nmemory stores pixels (0,0) to (3,3) inclusive, and the second tile in\nmemory stores pixels (4,0) to (7,3) inclusive, and so on.\nDRM-modifier is a sixteen hexadecimal digits to represent these memory\nlayouts. For example, 0x0000000000000000 means linear,\n0x0100000000000001 means Intel's X tile mode, etc. Please refer to\ndrm_fourcc.h in kernel for a full list.\nExcepting the linear modifier, the first 8 bits represent the vendor ID and\nthe other 56 bits describe the memory layout, which may be hardware\ndependent. Users should be careful when interpreting non-linear memory by\nthemselves.\nPlease bear in mind that, even for the linear modifier, as the access to\nDMA memory's content is through map() / unmap() functions, its\nread/write performance may be low or even bad, because of its cache type\nand coherence assurance. So, most of the times, it's advised to avoid that\ncode path for upload or download frame data.\n"});