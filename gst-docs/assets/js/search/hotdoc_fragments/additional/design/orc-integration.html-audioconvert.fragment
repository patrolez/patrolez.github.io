fragment_downloaded_cb({"url":"additional/design/orc-integration.html#audioconvert","fragment":"audioconvert\nOrc doesn't have a mechanism for generating random numbers, which\nprevents its use as-is for dithering. One way around this is to generate\nsuitable dithering values in one pass, then use those values in a second\nOrc-based pass.\nOrc doesn't handle 64-bit float, for no good reason.\nIrrespective of Orc handling 64-bit float, it would be useful to have a\ndirect 32-bit float to 16-bit integer conversion.\naudioconvert is a good candidate for programmatically generated Orc code.\naudioconvert enumerates functions in terms of big-endian vs.\nlittle-endian. Orc's functions are \"native\" and \"swapped\".\nProgrammatically generating code removes the need to worry about this.\nOrc doesn't handle 24-bit samples. Fixing this is not a priority (for ds).\n"});